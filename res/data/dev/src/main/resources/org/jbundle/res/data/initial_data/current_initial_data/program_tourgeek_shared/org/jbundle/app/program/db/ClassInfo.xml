<?xml version="1.0" encoding="UTF-8" standalone="no"?><file>
	<ClassInfo ID="2">
		<LastChanged>2012-01-18T14:47:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Account</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Chart of Accounts</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Account</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>General Ledger Chart of Accounts</ClassExplain>
		<ClassHelp type="XML"><paragraph>
<bold>This screen is used for Chart of Accounts entry and maintenance.</bold>
</paragraph>
<paragraph>
The only information that is required for an account is a description.
</paragraph>
<paragraph>
You can also enter: 
</paragraph>
<item-list>
<item>An account number to make selecting accounts easier.</item>
<item>The typical balance, so negative balances can be highlighted in reports.</item>
<item>A section sub-total flag indicating that this account is the last in a group on the Trial Balance and Worksheet.</item>
<item>A counter balance account to make entering paired
accounts easier. (For Example, Accumulated
Depreciation and Depreciation Expense)</item>
<item>An auto-distribution code to automatically distribute amounts in Journal entries.</item>
<item>Whether to close this account at year-end (ie., Expense or Income accounts).</item>
<item>Set this account as discontinued (To phase out an account that may still have active postings).</item>
</item-list>
<paragraph>
To display the transaction detail for an account, click on the
<help-button>
<name>Detail</name>
<link>screen=AcctDetailGridScreen</link>
<image>Detail</image>
</help-button>
(Account Inquiry) button.
</paragraph>
<paragraph>
In the account grid display screen, you can reorder the list by either account number or description by clicking on the column heading. To find a particular account, enter the starting description in the "Desc Filter" box and press tab.
</paragraph>
<paragraph>
<bold>Note:</bold> If you delete an account that has transactions, the account will be marked as discontinued rather than being deleted.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso>AccountScreen, AccountGridScreen</SeeAlso>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="3">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountBudget</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Budgets and Comparatives.</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AccountBudget</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Account comparative and budget entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    First, enter the Chart of Accounts account number, then select
    comparative or budget information for this account. 
</paragraph>
<paragraph>
    Enter the period ending date and the balance for each account.
</paragraph>
<paragraph>
    This information is used in the financial statement printing modules.
</paragraph>
<paragraph>
    <bold>Note</bold>: Comparative information is usually only entered for
    pre-system years, as most reports can retrieve the comparative
    figures from the past period's transactions.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="4">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountBudgetGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Budgets and Comparatives.</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>AccountBudgetScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account comparative and budget entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    First, enter the Chart of Accounts account number, then select
    comparative or budget information for this account. 
</paragraph>
<paragraph>
    Enter the period ending date and the balance for each account.
</paragraph>
<paragraph>
    This information is used in the financial statement printing modules.
</paragraph>
<paragraph>
    <bold>Note</bold>: Comparative information is usually only entered for
    pre-system years, as most reports can retrieve the comparative
    figures from the past period's transactions.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AccountBudget</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="5">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountBudgetScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Budgets and Comparatives.</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>AccountBudgetScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account comparative and budget entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    First, enter the Chart of Accounts account number, then select
    comparative or budget information for this account. 
</paragraph>
<paragraph>
    Enter the period ending date and the balance for each account.
</paragraph>
<paragraph>
    This information is used in the financial statement printing modules.
</paragraph>
<paragraph>
    <bold>Note</bold>: Comparative information is usually only entered for
    pre-system years, as most reports can retrieve the comparative
    figures from the past period's transactions.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AccountBudget</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="6">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountDescConverter</ClassName>
		<BaseClassName>MultipleFieldConverter</BaseClassName>
		<ClassDesc>If Manual Account Desc is null, return the Account's Description</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt.screen</ClassPackage>
		<ClassSourceFile>FinStmtDetailScreen</ClassSourceFile>
		<ClassType>Converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="7">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>G/L Account field</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Account</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="8">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Chart of Accounts</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>AccountScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Ledger Chart of Accounts</ClassExplain>
		<ClassHelp type="XML"><paragraph>
<bold>This screen is used for Chart of Accounts entry and maintenance.</bold>
</paragraph>
<paragraph>
The only information that is required for an account is a description.
</paragraph>
<paragraph>
You can also enter: 
</paragraph>
<item-list>
<item>An account number to make selecting accounts easier.</item>
<item>The typical balance, so negative balances can be highlighted in reports.</item>
<item>A section sub-total flag indicating that this account is the last in a group on the Trial Balance and Worksheet.</item>
<item>A counter balance account to make entering paired
accounts easier. (For Example, Accumulated
Depreciation and Depreciation Expense)</item>
<item>An auto-distribution code to automatically distribute amounts in Journal entries.</item>
<item>Whether to close this account at year-end (ie., Expense or Income accounts).</item>
<item>Set this account as discontinued (To phase out an account that may still have active postings).</item>
</item-list>
<paragraph>
To display the transaction detail for an account, click on the
<help-button>
<name>Detail</name>
<link>screen=AcctDetailGridScreen</link>
<image>Detail</image>
</help-button>
(Account Inquiry) button.
</paragraph>
<paragraph>
In the account grid display screen, you can reorder the list by either account number or description by clicking on the column heading. To find a particular account, enter the starting description in the "Desc Filter" box and press tab.
</paragraph>
<paragraph>
<bold>Note:</bold> If you delete an account that has transactions, the account will be marked as discontinued rather than being deleted.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Account</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="9">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Chart of Accounts</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>AccountScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Ledger Chart of Accounts</ClassExplain>
		<ClassHelp type="XML"><paragraph>
<bold>This screen is used for Chart of Accounts entry and maintenance.</bold>
</paragraph>
<paragraph>
The only information that is required for an account is a description.
</paragraph>
<paragraph>
You can also enter: 
</paragraph>
<item-list>
<item>An account number to make selecting accounts easier.</item>
<item>The typical balance, so negative balances can be highlighted in reports.</item>
<item>A section sub-total flag indicating that this account is the last in a group on the Trial Balance and Worksheet.</item>
<item>A counter balance account to make entering paired
accounts easier. (For Example, Accumulated
Depreciation and Depreciation Expense)</item>
<item>An auto-distribution code to automatically distribute amounts in Journal entries.</item>
<item>Whether to close this account at year-end (ie., Expense or Income accounts).</item>
<item>Set this account as discontinued (To phase out an account that may still have active postings).</item>
</item-list>
<paragraph>
To display the transaction detail for an account, click on the
<help-button>
<name>Detail</name>
<link>screen=AcctDetailGridScreen</link>
<image>Detail</image>
</help-button>
(Account Inquiry) button.
</paragraph>
<paragraph>
In the account grid display screen, you can reorder the list by either account number or description by clicking on the column heading. To find a particular account, enter the starting description in the "Desc Filter" box and press tab.
</paragraph>
<paragraph>
<bold>Note:</bold> If you delete an account that has transactions, the account will be marked as discontinued rather than being deleted.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Account</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="10">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatch</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Transaction Entry</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AcctBatch</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Account transaction entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This module is used to enter transactions to be posted to the
General Ledger.
</paragraph>
<paragraph>
There are two types of batches: recurring and one-time
batches.
</paragraph>
<paragraph>
One-time batches are automatically cleared after posting, while
recurring batches remain after posting so they can be used
again.
</paragraph>
<paragraph>
To display the recurring batches, click on the "Recurring"
check-box in the toolbar. To display another user's batch,
select their name from the pop-up box.
</paragraph>
<paragraph>
For each batch, enter a date, comment, and a source code.
These values will automatically be transferred to each posted
transaction.
</paragraph>
<paragraph>
<bold>Note:</bold> Recurring entries do not have transaction dates until
they are posted.
</paragraph>
<paragraph>
To see the detail transactions, click the
<help-button>
<description>Batch Transaction Detail Entry</description>
<image>Detail</image>
<link>record=AcctBatchDetail</link>
</help-button>
button.
</paragraph>
<paragraph>
<bold>Note:</bold> There is a special button in the Batch Header maintenance screen for
automatically creating period-end closing transactions. Just press the 
<help-button>
<name>Auto-closing</name>
<image>Go</image>
<link>record=AcctBatchPost</link>
</help-button>
button.
A closing transaction will be created
for each account designated as an income/expense. Then you can
go to the detail batch screen and finish the batch with any entrie(s) to
Income Summary or Retained Earnings.<br/>
Only enter closing entries in this batch.
</paragraph>
<paragraph>
To post the detail transactions to the General Ledger, click the Batch Transaction 
<help-button>
<name>Posting</name>
<image>Post</image>
<link>record=AcctBatchPost</link>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso>AcctBatchDetail</SeeAlso>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="11">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Journal Entry Batch Detail</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AcctBatchDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>General Journal transactions, Recurring Journal Entries</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Upon entering this program, the batch header information and
all your current transactions will display. 
</paragraph>
<paragraph>
For each transaction, enter an account number and an amount
in the Debit or the Credit column.
</paragraph>
<paragraph>
The sequence number is assigned automatically for each
transaction. The sequence number is incremented each
time the transaction batch total is zero.
The sequence number is only used to order the
transactions, so they are easier to group. You may change
the sequence numbers at any time.
</paragraph>
<paragraph>
If an account is entered that has a counter-balance field then the counter balance account will
automatically be added to this transaction. 
</paragraph>
<paragraph>
If an account is entered that has an auto-distribution
code, the auto-distribution entries will be added to this transaction.
</paragraph>
<paragraph>
If you are entering an accrual that needs to be reversed at the start of the next period,
just enter the complete transaction and click the 
<help-button>
<description>Create Auto-Reversing Entries</description>
<name>Auto-Reversal</name>
<image>Reversal</image>
</help-button>
button. An entry will be created to reverse the transaction. When you post the transaction
you may enter the date for the auto-reversal entries in the batch posting screen.<br/>
<italic>Note:</italic> To create an auto-reversal, the entire batch must be balanced, one of
the entries in the transaction must be selected, and the selected transaction must be balanced. 
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="12">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Journal Entry Batch Detail</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Journal transactions, Recurring Journal Entries</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Upon entering this program, the batch header information and
all your current transactions will display. 
</paragraph>
<paragraph>
For each transaction, enter an account number and an amount
in the Debit or the Credit column.
</paragraph>
<paragraph>
The sequence number is assigned automatically for each
transaction. The sequence number is incremented each
time the transaction batch total is zero.
The sequence number is only used to order the
transactions, so they are easier to group. You may change
the sequence numbers at any time.
</paragraph>
<paragraph>
If an account is entered that has a counter-balance field then the counter balance account will
automatically be added to this transaction. 
</paragraph>
<paragraph>
If an account is entered that has an auto-distribution
code, the auto-distribution entries will be added to this transaction.
</paragraph>
<paragraph>
If you are entering an accrual that needs to be reversed at the start of the next period,
just enter the complete transaction and click the 
<help-button>
<description>Create Auto-Reversing Entries</description>
<name>Auto-Reversal</name>
<image>Reversal</image>
</help-button>
button. An entry will be created to reverse the transaction. When you post the transaction
you may enter the date for the auto-reversal entries in the batch posting screen.<br/>
<italic>Note:</italic> To create an auto-reversal, the entire batch must be balanced, one of
the entries in the transaction must be selected, and the selected transaction must be balanced. 
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="13">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="14">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchDetailScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Journal Entry Batch Detail</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Journal transactions, Recurring Journal Entries</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Upon entering this program, the batch header information and
all your current transactions will display. 
</paragraph>
<paragraph>
For each transaction, enter an account number and an amount
in the Debit or the Credit column.
</paragraph>
<paragraph>
The sequence number is assigned automatically for each
transaction. The sequence number is incremented each
time the transaction batch total is zero.
The sequence number is only used to order the
transactions, so they are easier to group. You may change
the sequence numbers at any time.
</paragraph>
<paragraph>
If an account is entered that has a counter-balance field then the counter balance account will
automatically be added to this transaction. 
</paragraph>
<paragraph>
If an account is entered that has an auto-distribution
code, the auto-distribution entries will be added to this transaction.
</paragraph>
<paragraph>
If you are entering an accrual that needs to be reversed at the start of the next period,
just enter the complete transaction and click the 
<help-button>
<description>Create Auto-Reversing Entries</description>
<name>Auto-Reversal</name>
<image>Reversal</image>
</help-button>
button. An entry will be created to reverse the transaction. When you post the transaction
you may enter the date for the auto-reversal entries in the batch posting screen.<br/>
<italic>Note:</italic> To create an auto-reversal, the entire batch must be balanced, one of
the entries in the transaction must be selected, and the selected transaction must be balanced. 
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="15">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Transaction Entry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account transaction entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This module is used to enter transactions to be posted to the
General Ledger.
</paragraph>
<paragraph>
There are two types of batches: recurring and one-time
batches.
</paragraph>
<paragraph>
One-time batches are automatically cleared after posting, while
recurring batches remain after posting so they can be used
again.
</paragraph>
<paragraph>
To display the recurring batches, click on the "Recurring"
check-box in the toolbar. To display another user's batch,
select their name from the pop-up box.
</paragraph>
<paragraph>
For each batch, enter a date, comment, and a source code.
These values will automatically be transferred to each posted
transaction.
</paragraph>
<paragraph>
<bold>Note:</bold> Recurring entries do not have transaction dates until
they are posted.
</paragraph>
<paragraph>
To see the detail transactions, click the
<help-button>
<description>Batch Transaction Detail Entry</description>
<image>Detail</image>
<link>record=AcctBatchDetail</link>
</help-button>
button.
</paragraph>
<paragraph>
<bold>Note:</bold> There is a special button in the Batch Header maintenance screen for
automatically creating period-end closing transactions. Just press the 
<help-button>
<name>Auto-closing</name>
<image>Go</image>
<link>record=AcctBatchPost</link>
</help-button>
button.
A closing transaction will be created
for each account designated as an income/expense. Then you can
go to the detail batch screen and finish the batch with any entrie(s) to
Income Summary or Retained Earnings.<br/>
Only enter closing entries in this batch.
</paragraph>
<paragraph>
To post the detail transactions to the General Ledger, click the Batch Transaction 
<help-button>
<name>Posting</name>
<image>Post</image>
<link>record=AcctBatchPost</link>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="16">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchPost</ClassName>
		<BaseClassName>AcctBatchScreen</BaseClassName>
		<ClassDesc>Post the account detail</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Post batch transactions to the General Ledger</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    There may be a small delay entering this program, as it
    recounts the balance for all the detail tranactions.<br/>
    If this is a recurring batch, you will be required to enter a
    transaction date before continuing.<br/>
    If this batch contains any auto-accural reversal entries, then
    the first date of the next accounting period will display
    (which you may change before posting). 
</paragraph>
<paragraph>
    When you press the
    <help-button>
        <description>Post</description>
        <image>Post</image>
        <link>record=AcctBatchPost</link>
    </help-button>
    button, all the transactions in the batch will be posted
    to the General Ledger. If the batch is not a recurring batch,
    then the batch and the detail will be cleared.
</paragraph>
<paragraph>
<bold>Note:</bold> Transactions posted manually are treated
    differently than transactions posted automatically from
    sub-systems:
    <item-list>
    <item>Transactions are not summarized. Each transaction becomes an
    individual transaction in the General Journal.</item>
    <item>The transaction detail does not refer to the originating
    transaction, because the original transaction is cleared.</item>
    </item-list>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="17">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Transaction Entry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account transaction entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This module is used to enter transactions to be posted to the
General Ledger.
</paragraph>
<paragraph>
There are two types of batches: recurring and one-time
batches.
</paragraph>
<paragraph>
One-time batches are automatically cleared after posting, while
recurring batches remain after posting so they can be used
again.
</paragraph>
<paragraph>
To display the recurring batches, click on the "Recurring"
check-box in the toolbar. To display another user's batch,
select their name from the pop-up box.
</paragraph>
<paragraph>
For each batch, enter a date, comment, and a source code.
These values will automatically be transferred to each posted
transaction.
</paragraph>
<paragraph>
<bold>Note:</bold> Recurring entries do not have transaction dates until
they are posted.
</paragraph>
<paragraph>
To see the detail transactions, click the
<help-button>
<description>Batch Transaction Detail Entry</description>
<image>Detail</image>
<link>record=AcctBatchDetail</link>
</help-button>
button.
</paragraph>
<paragraph>
<bold>Note:</bold> There is a special button in the Batch Header maintenance screen for
automatically creating period-end closing transactions. Just press the 
<help-button>
<name>Auto-closing</name>
<image>Go</image>
<link>record=AcctBatchPost</link>
</help-button>
button.
A closing transaction will be created
for each account designated as an income/expense. Then you can
go to the detail batch screen and finish the batch with any entrie(s) to
Income Summary or Retained Earnings.<br/>
Only enter closing entries in this batch.
</paragraph>
<paragraph>
To post the detail transactions to the General Ledger, click the Batch Transaction 
<help-button>
<name>Posting</name>
<image>Post</image>
<link>record=AcctBatchPost</link>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="18">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="19">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchSetRecurringBeh</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[If there are recurring entries, set the default recurring date.
If not, disable the date field.]]></ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="20">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchValidateBeh</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc><![CDATA[Make sure the batch entry has an account and amount.
Also check for (and create) Auto-reversal and Auto-distribution entries.]]></ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="21">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetail</ClassName>
		<BaseClassName>BaseTrx</BaseClassName>
		<ClassDesc>Account Transaction Detail</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AcctDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Display detail transactions in a specified period.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
To display the detail transaction for an account, enter:
</paragraph>
<item-list>
<item>The General Ledger account number.</item>
<item>A beginning and ending date (defaults to current period).</item>
</item-list>
<paragraph>
The system will display the activity for this account during this period.
</paragraph>
<paragraph>
<bold>Note:</bold> If you want to see the beginning balance for an
account click on the <bold>Start Balance</bold> check box. There may be
a slight delay as the system must read through all the transactions
before that date to calculate the amount.
</paragraph>
<paragraph>
If you don't display the starting balance, the ending
balance is the change for the transactions displayed.
</paragraph>
<paragraph>
<bold>Note:</bold> The balances will not display unless all transactions are displayed on the screen.
To get the start and end balances, just scroll to the bottom of the transaction list.
</paragraph>
<paragraph>
To display the transaction distribution (the audit trail)
for a transaction, click on the
<help-button>
<name>Detail</name>
<link>screen=AcctDetailDistGridScreen</link>
<image>Detail</image>
</help-button>
(Transaction Distribution Inquiry) button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="22">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailCalcEndBal</ClassName>
		<BaseClassName>ReComputeFieldHandler</BaseClassName>
		<ClassDesc>Recompute the end balance if start or change changes</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailGridScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="23">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailCalcStartBal</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Recalc the Start balance</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailGridScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="24">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailDist</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Account Transaction Distribution</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AcctDetailDist</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Account Transaction Distribution display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Account Transaction Distribution displays the source of a G/L Transaction.
</paragraph>
<paragraph>
This is the audit trail back to the originating transactions.
</paragraph>
<paragraph>
To display the all of the transaction distribution for this transaction, click on the
<help-button>
<description>Detail</description>
<image>Detail</image>
<link>record=AcctDetailDist</link>
</help-button>
button.<br/>
You would only press this button if you are in the maintenance screen to see the rest of the distribution for this transaction.
Pressing this from the grid screen will redisplay the same data.
</paragraph>
<paragraph>
To display the distribution group, click on the
<help-button>
<description>Group</description>
<image>Group</image>
<link>screen=AcctDetailDistGroupGridScreen</link>
</help-button>
button. The distribution group is the complete original source transaction.
</paragraph>
<paragraph>
To display the source transaction, click on the
<help-button>
<description>Source trx</description>
<image>Source</image>
</help-button>
button. The screen displayed will depend on the source of the transaction.
(ie., For a cash deposit, the original Bank Transaction will display)
</paragraph>
<paragraph>
Often you will see a
<help-button>
<name>Transaction</name>
<link>record=AcctDetail</link>
<image>Transaction</image>
</help-button>
button. This button will display the top-level G/L posting transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="25">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseTrxDistGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Account Transaction Distribution</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>BaseTrxDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account Transaction Distribution display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Account Transaction Distribution displays the source of a G/L Transaction.
</paragraph>
<paragraph>
This is the audit trail back to the originating transactions.
</paragraph>
<paragraph>
To display the all of the transaction distribution for this transaction, click on the
<help-button>
<description>Detail</description>
<image>Detail</image>
<link>record=AcctDetailDist</link>
</help-button>
button.<br/>
You would only press this button if you are in the maintenance screen to see the rest of the distribution for this transaction.
Pressing this from the grid screen will redisplay the same data.
</paragraph>
<paragraph>
To display the distribution group, click on the
<help-button>
<description>Group</description>
<image>Group</image>
<link>screen=AcctDetailDistGroupGridScreen</link>
</help-button>
button. The distribution group is the complete original source transaction.
</paragraph>
<paragraph>
To display the source transaction, click on the
<help-button>
<description>Source trx</description>
<image>Source</image>
</help-button>
button. The screen displayed will depend on the source of the transaction.
(ie., For a cash deposit, the original Bank Transaction will display)
</paragraph>
<paragraph>
Often you will see a
<help-button>
<name>Transaction</name>
<link>record=AcctDetail</link>
<image>Transaction</image>
</help-button>
button. This button will display the top-level G/L posting transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctDetailDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="26">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Account Transaction Detail</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display detail transactions in a specified period.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
To display the detail transaction for an account, enter:
</paragraph>
<item-list>
<item>The General Ledger account number.</item>
<item>A beginning and ending date (defaults to current period).</item>
</item-list>
<paragraph>
The system will display the activity for this account during this period.
</paragraph>
<paragraph>
<bold>Note:</bold> If you want to see the beginning balance for an
account click on the <bold>Start Balance</bold> check box. There may be
a slight delay as the system must read through all the transactions
before that date to calculate the amount.
</paragraph>
<paragraph>
If you don't display the starting balance, the ending
balance is the change for the transactions displayed.
</paragraph>
<paragraph>
<bold>Note:</bold> The balances will not display unless all transactions are displayed on the screen.
To get the start and end balances, just scroll to the bottom of the transaction list.
</paragraph>
<paragraph>
To display the transaction distribution (the audit trail)
for a transaction, click on the
<help-button>
<name>Detail</name>
<link>screen=AcctDetailDistGridScreen</link>
<image>Detail</image>
</help-button>
(Transaction Distribution Inquiry) button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="27">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header screen for acct detail inquiry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AccountHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="28">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailJournal</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>General Journal printout</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>AcctDetailJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Journal transaction report.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The General Journal Report prints transactions in transaction date order.
</paragraph>
<paragraph>
Just enter a starting and ending transaction date.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="29">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailJournalFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Total lines</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>AcctDetailJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="30">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailJournalHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Report Heading</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>AcctDetailJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="31">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailJournalToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>AcctDetailJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="32">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailLedger</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>General Ledger Printout</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.ledger</ClassPackage>
		<ClassSourceFile>AcctDetailLedger</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Ledger account activity report.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The General Ledger Report prints transactions by Account.
</paragraph>
<paragraph>
The data entry screen asks for:
</paragraph>
<item-list>
<item>Starting and ending accounts numbers.</item>
<item>Starting end ending transaction dates. (Beginning and Ending Balances are printed on the report)</item>
<item>Whether to print the detail transactions or not.</item>
<item>A starting and ending transaction entry date.</item>
<item>A profit center.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo><![CDATA[Probably need to change this program to read sequentially through the detail file rather than the account file.
Also, need to implement (Don't print detail).
Also, Profit Centers
Totals do not work correctly.]]></TechnicalInfo>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="33">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailLedgerDetail</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Account Transaction Detail</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.ledger</ClassPackage>
		<ClassSourceFile>AcctDetailLedger</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="34">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailLedgerDetailEnd</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Ending balance</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.ledger</ClassPackage>
		<ClassSourceFile>AcctDetailLedger</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="35">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailLedgerDetailStart</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Start balance</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.ledger</ClassPackage>
		<ClassSourceFile>AcctDetailLedger</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="36">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailLedgerFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Report footer for G/L Ledger report</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.ledger</ClassPackage>
		<ClassSourceFile>AcctDetailLedger</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="37">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailLedgerHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Heading for G/L Journal report</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.ledger</ClassPackage>
		<ClassSourceFile>AcctDetailLedger</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="38">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailLedgerToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Input params for report</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.ledger</ClassPackage>
		<ClassSourceFile>AcctDetailLedger</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="39">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Account Transaction Detail</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display detail transactions in a specified period.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
To display the detail transaction for an account, enter:
</paragraph>
<item-list>
<item>The General Ledger account number.</item>
<item>A beginning and ending date (defaults to current period).</item>
</item-list>
<paragraph>
The system will display the activity for this account during this period.
</paragraph>
<paragraph>
<bold>Note:</bold> If you want to see the beginning balance for an
account click on the <bold>Start Balance</bold> check box. There may be
a slight delay as the system must read through all the transactions
before that date to calculate the amount.
</paragraph>
<paragraph>
If you don't display the starting balance, the ending
balance is the change for the transactions displayed.
</paragraph>
<paragraph>
<bold>Note:</bold> The balances will not display unless all transactions are displayed on the screen.
To get the start and end balances, just scroll to the bottom of the transaction list.
</paragraph>
<paragraph>
To display the transaction distribution (the audit trail)
for a transaction, click on the
<help-button>
<name>Detail</name>
<link>screen=AcctDetailDistGridScreen</link>
<image>Detail</image>
</help-button>
(Transaction Distribution Inquiry) button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="40">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Field for Transaction Inquiry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="41">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailDistGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Account Transaction Distribution</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account Transaction Distribution display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Account Transaction Distribution displays the source of a G/L Transaction.
</paragraph>
<paragraph>
This is the audit trail back to the originating transactions.
</paragraph>
<paragraph>
To display the all of the transaction distribution for this transaction, click on the
<help-button>
<description>Detail</description>
<image>Detail</image>
<link>record=AcctDetailDist</link>
</help-button>
button.<br/>
You would only press this button if you are in the maintenance screen to see the rest of the distribution for this transaction.
Pressing this from the grid screen will redisplay the same data.
</paragraph>
<paragraph>
To display the distribution group, click on the
<help-button>
<description>Group</description>
<image>Group</image>
<link>screen=AcctDetailDistGroupGridScreen</link>
</help-button>
button. The distribution group is the complete original source transaction.
</paragraph>
<paragraph>
To display the source transaction, click on the
<help-button>
<description>Source trx</description>
<image>Source</image>
</help-button>
button. The screen displayed will depend on the source of the transaction.
(ie., For a cash deposit, the original Bank Transaction will display)
</paragraph>
<paragraph>
Often you will see a
<help-button>
<name>Transaction</name>
<link>record=AcctDetail</link>
<image>Transaction</image>
</help-button>
button. This button will display the top-level G/L posting transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctDetailDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="42">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header screen for transaction distribution</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="43">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailDistScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Account Transaction Distribution</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account Transaction Distribution display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Account Transaction Distribution displays the source of a G/L Transaction.
</paragraph>
<paragraph>
This is the audit trail back to the originating transactions.
</paragraph>
<paragraph>
To display the all of the transaction distribution for this transaction, click on the
<help-button>
<description>Detail</description>
<image>Detail</image>
<link>record=AcctDetailDist</link>
</help-button>
button.<br/>
You would only press this button if you are in the maintenance screen to see the rest of the distribution for this transaction.
Pressing this from the grid screen will redisplay the same data.
</paragraph>
<paragraph>
To display the distribution group, click on the
<help-button>
<description>Group</description>
<image>Group</image>
<link>screen=AcctDetailDistGroupGridScreen</link>
</help-button>
button. The distribution group is the complete original source transaction.
</paragraph>
<paragraph>
To display the source transaction, click on the
<help-button>
<description>Source trx</description>
<image>Source</image>
</help-button>
button. The screen displayed will depend on the source of the transaction.
(ie., For a cash deposit, the original Bank Transaction will display)
</paragraph>
<paragraph>
Often you will see a
<help-button>
<name>Transaction</name>
<link>record=AcctDetail</link>
<image>Transaction</image>
</help-button>
button. This button will display the top-level G/L posting transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctDetailDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="44">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctPostCheckHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>If any transaction are auto-accrual reversal, set the flag in the AcctBatch header file.</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="46">
		<LastChanged>2012-04-12T21:07:25</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddPaPaxConverter</ClassName>
		<BaseClassName>CommandConverter</BaseClassName>
		<ClassDesc>Add these pax to the Profile and Detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>AddPaPaxConverter</ClassSourceFile>
		<ClassType>Converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="49">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddressType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Address type</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AddressType</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Address type maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Physical address type based on the
<img src="images/buttons/URL.gif"/><html><a href="http://www.opentravel.org">Open Travel</a></html>
specification. (Home, Business, etc...).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="50">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddressTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AddressTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="51">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AdEntryDate</ClassName>
		<BaseClassName>DateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AdEntryDate</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="52">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Affiliation</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Affiliations</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Affiliation</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile affiliations.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to maintain travel agent affiliations and consortiums.
</paragraph>
<paragraph>
Enter affiliations such as Action-6 or GIANTS.
</paragraph>
<paragraph>
Enter the booking commision for this type of agency and the back-end override commission.
Also enter the
<help-link>
<name>vendor code</name>
<link>record=Vendor</link>
<image>Help</image>
</help-link>
from the Accounts payable system.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="53">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AffiliationField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Affiliation field</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Affiliation</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="54">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AffiliationGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Affiliations</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>AffiliationScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Profile affiliations.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to maintain travel agent affiliations and consortiums.
</paragraph>
<paragraph>
Enter affiliations such as Action-6 or GIANTS.
</paragraph>
<paragraph>
Enter the booking commision for this type of agency and the back-end override commission.
Also enter the
<help-link>
<name>vendor code</name>
<link>record=Vendor</link>
<image>Help</image>
</help-link>
from the Accounts payable system.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Affiliation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="55">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AffiliationScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Affiliations</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>AffiliationScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Profile affiliations.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to maintain travel agent affiliations and consortiums.
</paragraph>
<paragraph>
Enter affiliations such as Action-6 or GIANTS.
</paragraph>
<paragraph>
Enter the booking commision for this type of agency and the back-end override commission.
Also enter the
<help-link>
<name>vendor code</name>
<link>record=Vendor</link>
<image>Help</image>
</help-link>
from the Accounts payable system.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Affiliation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="56">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Airline</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Airline</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>Airline</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Airline maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This Program maintains the Airline file.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="57">
		<LastChanged>2012-03-28T16:30:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirlineField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.field</ClassPackage>
		<ClassSourceFile>AirlineField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="58">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirlineGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirlineScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="59">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirlineScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirlineScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="63">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc>A/P Control File</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApControl</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Control file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Control file maintenance is used to make entering data in the
other programs faster. Some of the values are used as default
values in the other programs, and some of the values control
other program's operations.
</paragraph></ClassHelp>
		<ClassImplements>MessageDetailTarget</ClassImplements>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="64">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="65">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="68">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffReport</ClassName>
		<BaseClassName>ApBaseCutoffReport</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the A/P cutoff report.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The cutoff report details the costs of tours which were owed but not yet paid at the
cut-off date.
</paragraph>
<paragraph>
The report will
include the cost for all tours which depart on this date or
before, but were not paid (and may not yet be paid) until after
the cutoff date.
</paragraph>
<paragraph>
This report will read the A/P detail for each vendor. If the
departure date of the tour is on or before the cutoff date,
then the item is analyzed.
</paragraph>
<paragraph>
<item-list><item>
If the item is a Departure estimate, then the estimated
cost is included on the report.
</item><item>
If the item is a Invoice, then the invoiced cost is
included on the report. If any payments were made before the
cut-off date, they are subtracted from the invoice amount.</item>
</item-list>
</paragraph>
<paragraph>
If the item is a paid Invoice, then it is included only if
payments were made AFTER the cut-off date. (If the invoice was
paid before the cut-off date, the cost is included in the cash
receipts journal) - Credit memo's are handled exactly as
invoices (if associated with a tour)
</paragraph>
<paragraph>
<bold>Note:</bold> This program is usually used to manually
verify the estimated tour cost in the General Ledger.
The total on this report is estimated tour cost
and will be included as a cost of tours if you are on an
accrual basis.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="69">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffScreenRecord</ClassName>
		<BaseClassName>ApReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="70">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="71">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApJournal</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>A/P Journal</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>ApJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the current account status for a range of vendors.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This report prints vendor's account status. 
</paragraph>
<paragraph>
To have the system print <bold>all</bold> the line items, including
the items with zero balances, click on the "Show Paid Items" checkbox.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="72">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApJournalDetail</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>A/P Journal</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>ApJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="73">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApJournalFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>A/P Journal</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>ApJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="74">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApJournalHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>A/P Journal</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>ApJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="75">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApJournalToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>A/P Journal</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>ApJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="76">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApReportScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>ApReportScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="77">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrx</ClassName>
		<BaseClassName>Trx</BaseClassName>
		<ClassDesc>Accounts Payable transaction file</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApTrx</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>A/P Transaction display and adjustments.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the A/P Transaction detail.
</paragraph>
<paragraph>You may change some of the fields for A/P transactions, but the items that can be changed on this screen have no effect on the general ledger, so no journal entries are created.
</paragraph>
<paragraph>
You have several detail screen options:
</paragraph>
<item-list>
<item><help-button>
<name>Product detail</name>
<description>Product detail</description>
<link>?record=BookingDetail</link>
<image>Detail</image>
</help-button> - The detail products for an invoice.</item>
<item><help-button>
<name>Payment history</name>
<description>Payment history</description>
<link>?record=PaymentHistory</link>
<image>Price</image>
</help-button> - The check or prepayment used to pay for an invoice or prepayment.</item>
<item><help-button>
<name>Payment distribution</name>
<description>Payment distribution</description>
<link>?screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Distribution</image>
</help-button> - The distribution of a payment or prepayment to specific invoices.</item>
<item><help-button>
<name>Distribution</name>
<description>Distribution</description>
<link>?record=AcctDetailDist</link>
<image>Distribution</image>
</help-button> - The G/L Distribution</item>
<item><help-button>
<name>Tour display</name>
<description>Tour display</description>
<link>?record=ApTrx</link>
<image>Display</image>
</help-button> - Display all of the A/P detail for the tour of the selected item.</item>
<item><help-button>
<name>Vendor display</name>
<description>Vendor display</description>
<link>?record=ApTrx</link>
<image>Display</image>
</help-button> - Display all of the A/P detail for the vendor of the selected item.</item>
</item-list>
<paragraph>
<bold>Note:</bold> Not all of these items display on all the A/P Transaction screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="78">
		<LastChanged>2012-03-31T15:58:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Accounts Payable transaction file</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>ApTrxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>A/P Transaction display and adjustments.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the A/P Transaction detail.
</paragraph>
<paragraph>You may change some of the fields for A/P transactions, but the items that can be changed on this screen have no effect on the general ledger, so no journal entries are created.
</paragraph>
<paragraph>
You have several detail screen options:
</paragraph>
<item-list>
<item><help-button>
<name>Product detail</name>
<description>Product detail</description>
<link>?record=BookingDetail</link>
<image>Detail</image>
</help-button> - The detail products for an invoice.</item>
<item><help-button>
<name>Payment history</name>
<description>Payment history</description>
<link>?record=PaymentHistory</link>
<image>Price</image>
</help-button> - The check or prepayment used to pay for an invoice or prepayment.</item>
<item><help-button>
<name>Payment distribution</name>
<description>Payment distribution</description>
<link>?screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Distribution</image>
</help-button> - The distribution of a payment or prepayment to specific invoices.</item>
<item><help-button>
<name>Distribution</name>
<description>Distribution</description>
<link>?record=AcctDetailDist</link>
<image>Distribution</image>
</help-button> - The G/L Distribution</item>
<item><help-button>
<name>Tour display</name>
<description>Tour display</description>
<link>?record=ApTrx</link>
<image>Display</image>
</help-button> - Display all of the A/P detail for the tour of the selected item.</item>
<item><help-button>
<name>Vendor display</name>
<description>Vendor display</description>
<link>?record=ApTrx</link>
<image>Display</image>
</help-button> - Display all of the A/P detail for the vendor of the selected item.</item>
</item-list>
<paragraph>
<bold>Note:</bold> Not all of these items display on all the A/P Transaction screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ApTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="79">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc>Control File</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ArControl</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Accounts Receivable control file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen contains the default values for the Accounts Receivable system.
</paragraph>
<paragraph>
The MCO defaults are described in
<help-link>
<name>MCO processing.</name>
<link>menu=AcctRecMco</link>
<image>Form</image>
</help-link>
</paragraph>
<paragraph>
The Refund defaults are described in
<help-link>
<name>Refund processing.</name>
<link>menu=AcctRecRefund</link>
<image>Form</image>
</help-link>
</paragraph>
<paragraph>
The Credit card defaults are described in
<help-link>
<name>Credit card processing.</name>
<link>menu=AcctRecCC</link>
<image>Form</image>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="80">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArControlScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Control File</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>ArControlScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Accounts Receivable control file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen contains the default values for the Accounts Receivable system.
</paragraph>
<paragraph>
The MCO defaults are described in
<help-link>
<name>MCO processing.</name>
<link>menu=AcctRecMco</link>
<image>Form</image>
</help-link>
</paragraph>
<paragraph>
The Refund defaults are described in
<help-link>
<name>Refund processing.</name>
<link>menu=AcctRecRefund</link>
<image>Form</image>
</help-link>
</paragraph>
<paragraph>
The Credit card defaults are described in
<help-link>
<name>Credit card processing.</name>
<link>menu=AcctRecCC</link>
<image>Form</image>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ArControl</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="81">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArcReport</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>ARC Report</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.arc</ClassPackage>
		<ClassSourceFile>ArcReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Prints the tickets issued, changed, and cancelled each week.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The ARC report prints all the pending tickets to be submitted to the ARC and changes their status when they are submitted. 
</paragraph>
<paragraph>
All tickets with a status of "Ticketed" and without an ARC
update date with a ticketing date before or on the entered date
will be included in this report. If you post the tickets,
the ticket's ARC update date will be set to the
system date and their status will change to ARC submitted.
</paragraph>
<paragraph>
Tickets which have been changed or cancelled are also
included on this report. The resulting G/L transactions is
similar to the transaction for tickets.
</paragraph>
<paragraph>The ARC transaction will look like this:</paragraph>
<acct-trx>
<date>12/31/07</date>
<debit>
<description>Accounts Payable - Tickets</description>
<amount>75.00</amount>
</debit>
<credit>
<description>Accounts Payable - ARC</description>
<amount>75.00</amount>
</credit>
</acct-trx></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="82">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArcReportFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.arc</ClassPackage>
		<ClassSourceFile>ArcReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="83">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArcReportHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.arc</ClassPackage>
		<ClassSourceFile>ArcReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="84">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArcReportPost</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Post the ARC ticketing report</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.arc</ClassPackage>
		<ClassSourceFile>ArcReportPost</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="85">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArcReportScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.arc</ClassPackage>
		<ClassSourceFile>ArcReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="86">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArcReportToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.arc</ClassPackage>
		<ClassSourceFile>ArcReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="87">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrx</ClassName>
		<BaseClassName>LinkTrx</BaseClassName>
		<ClassDesc>A/R Open File</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ArTrx</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>The accounts receivable transaction detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A/R Transactions are automatically created and updated when the tour price or payments change.
</paragraph>
<paragraph>
A/R Transactions are also linked to the financial systems. All A/R transactions are distributed to the general ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="88">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrxAgentGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Agent A/R Account inquiry</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.display</ClassPackage>
		<ClassSourceFile>ArTrxAgentGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display bookings by agency and the current A/R totals for each booking.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
  Enter an agency ARC or customer number to display the A/R Transaction balances.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="89">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrxAgentHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.display</ClassPackage>
		<ClassSourceFile>ArTrxAgentGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="90">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrxAgentScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Fields for Agency display screen</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.display</ClassPackage>
		<ClassSourceFile>ArTrxAgentGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="94">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Asset</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Fixed Assets</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Asset</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Asset and depreciation maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to maintain your assets.
</paragraph>
<paragraph>
Enter all the information about each asset is this screen.
</paragraph>
<paragraph>
To enter depreciation information, click on the
<help-button>
<name>Detail</name>
<link>screen=AssetDepreciationScreen</link>
<image>Detail</image>
</help-button> button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="95">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetDrControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc>Control File</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AssetDrControl</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Asset/Debt System control information.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The defaults for the Bank Account and Fixed Asset System.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="96">
		<LastChanged>2012-03-28T10:59:38</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetDrControlScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Maintenance screen</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>AssetDrControlScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program handles the Asset/Debt System control file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the default values here.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AssetDebtControl</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="97">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetDepreciation</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Asset Depreciation Detail</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AssetDepreciation</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp type="XML"><paragraph>
Currently this screen is used to document depreciation entries to be made over the life of an asset.
</paragraph>
<paragraph>
<bold>Note:</bold> The amounts entered here are not posted to the General Ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="98">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetDepreciationGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Asset Depreciation Detail</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.asset</ClassPackage>
		<ClassSourceFile>AssetDepreciationScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp type="XML"><paragraph>
Currently this screen is used to document depreciation entries to be made over the life of an asset.
</paragraph>
<paragraph>
<bold>Note:</bold> The amounts entered here are not posted to the General Ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AssetDepreciation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="99">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.asset</ClassPackage>
		<ClassSourceFile>AssetHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="100">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetDepreciationScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Asset Depreciation Detail</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.asset</ClassPackage>
		<ClassSourceFile>AssetDepreciationScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp type="XML"><paragraph>
Currently this screen is used to document depreciation entries to be made over the life of an asset.
</paragraph>
<paragraph>
<bold>Note:</bold> The amounts entered here are not posted to the General Ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AssetDepreciation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="101">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Asset lookup</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Asset</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="102">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Asset Maintenance</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.asset</ClassPackage>
		<ClassSourceFile>AssetScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Asset display.</ClassExplain>
		<ClassHelp>&lt;classinfo name=Asset&gt;&lt;help/&gt;&lt;/classinfo&gt;</ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="103">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AssetScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Asset Maintenance</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.asset</ClassPackage>
		<ClassSourceFile>AssetScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Asset entry and maintenance.</ClassExplain>
		<ClassHelp>&lt;classinfo name=Asset&gt;&lt;help/&gt;&lt;/classinfo&gt;</ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="104">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDist</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Automatic Distribution Entry</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AutoDist</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Transaction Auto Distribution maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Auto-distributions are very simple.
</paragraph>
<paragraph>
    First, enter a descriptive title for the distribution.
</paragraph>
<paragraph>
    Then enter the detail accounts and the percentage to distribute
    to each account. It is recommended that the distribution equal
    100%, but it is not required (to give you the option of
    completing the transaction in Journal Entry).
</paragraph>
<paragraph>
    When you enter an account in Journal Entry that has an auto-distribution, the
    auto-distribution accounts are automatically counter-posted to the
    transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso>AutoDistScreen, AutoDistGridScreen, AutoDistDetailScreen, AutoDistDetailGridScreen</SeeAlso>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="105">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDistDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Automatic Distribution Entry</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AutoDistDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Transaction Auto Distribution maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Auto-distributions are very simple.
</paragraph>
<paragraph>
    First, enter a descriptive title for the distribution.
</paragraph>
<paragraph>
    Then enter the detail accounts and the percentage to distribute
    to each account. It is recommended that the distribution equal
    100%, but it is not required (to give you the option of
    completing the transaction in Journal Entry).
</paragraph>
<paragraph>
    When you enter an account in Journal Entry that has an auto-distribution, the
    auto-distribution accounts are automatically counter-posted to the
    transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AutoDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="106">
		<LastChanged>2012-03-31T22:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDistDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Automatic Distribution Entry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.autodist</ClassPackage>
		<ClassSourceFile>AutoDistScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Transaction Auto Distribution maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Auto-distributions are very simple.
</paragraph>
<paragraph>
    First, enter a descriptive title for the distribution.
</paragraph>
<paragraph>
    Then enter the detail accounts and the percentage to distribute
    to each account. It is recommended that the distribution equal
    100%, but it is not required (to give you the option of
    completing the transaction in Journal Entry).
</paragraph>
<paragraph>
    When you enter an account in Journal Entry that has an auto-distribution, the
    auto-distribution accounts are automatically counter-posted to the
    transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AutoDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="107">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDistHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.autodist</ClassPackage>
		<ClassSourceFile>AutoDistScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Automatic account distribution.</ClassExplain>
		<ClassHelp>&lt;classinfo name=AutoDist&gt;&lt;help/&gt;&lt;/classinfo&gt;</ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="108">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDistDetailScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Automatic Distribution Entry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.autodist</ClassPackage>
		<ClassSourceFile>AutoDistScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Transaction Auto Distribution maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Auto-distributions are very simple.
</paragraph>
<paragraph>
    First, enter a descriptive title for the distribution.
</paragraph>
<paragraph>
    Then enter the detail accounts and the percentage to distribute
    to each account. It is recommended that the distribution equal
    100%, but it is not required (to give you the option of
    completing the transaction in Journal Entry).
</paragraph>
<paragraph>
    When you enter an account in Journal Entry that has an auto-distribution, the
    auto-distribution accounts are automatically counter-posted to the
    transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AutoDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="109">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDistField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Field to use for Auto Distribution selection</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AutoDist</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="110">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDistGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Automatic Distribution Entry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.autodist</ClassPackage>
		<ClassSourceFile>AutoDistScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Transaction Auto Distribution maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Auto-distributions are very simple.
</paragraph>
<paragraph>
    First, enter a descriptive title for the distribution.
</paragraph>
<paragraph>
    Then enter the detail accounts and the percentage to distribute
    to each account. It is recommended that the distribution equal
    100%, but it is not required (to give you the option of
    completing the transaction in Journal Entry).
</paragraph>
<paragraph>
    When you enter an account in Journal Entry that has an auto-distribution, the
    auto-distribution accounts are automatically counter-posted to the
    transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AutoDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="111">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AutoDistScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Automatic Distribution Entry</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.autodist</ClassPackage>
		<ClassSourceFile>AutoDistScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Transaction Auto Distribution maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Auto-distributions are very simple.
</paragraph>
<paragraph>
    First, enter a descriptive title for the distribution.
</paragraph>
<paragraph>
    Then enter the detail accounts and the percentage to distribute
    to each account. It is recommended that the distribution equal
    100%, but it is not required (to give you the option of
    completing the transaction in Journal Entry).
</paragraph>
<paragraph>
    When you enter an account in Journal Entry that has an auto-distribution, the
    auto-distribution accounts are automatically counter-posted to the
    transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AutoDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="114">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankAcctField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Bank Account popup</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankAcct</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="115">
		<LastChanged>2012-03-28T10:59:38</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankAcctGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Bank Accounts</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>BankAcctScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Bank account maintenance and inquiry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to enter and change bank account information.
</paragraph>
<paragraph>
To display the bank account transaction detail, just press the
<help-button>
    <description>Detail</description>
    <link>screen=BankTrxGridScreen</link>
    <image>Detail</image>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankAcct</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="116">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankAcctReport</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Display Accounts</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>BankAcctReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="117">
		<LastChanged>2012-03-28T10:59:38</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankAcctScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Bank Accounts</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>BankAcctScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Bank account maintenance and inquiry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to enter and change bank account information.
</paragraph>
<paragraph>
To display the bank account transaction detail, just press the
<help-button>
    <description>Detail</description>
    <link>screen=BankTrxGridScreen</link>
    <image>Detail</image>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankAcct</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="118">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankAcctScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc>Bank Account Report Fields</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>BankAcctReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="119">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankReconGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Bank Reconciliation</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>BankReconGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to mark transactions as reconciled with a bank statement.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Select an account to reconcile.
</paragraph>
<paragraph>
Click the checkmark next to each item cleared by the bank. 
</paragraph>
<paragraph>
When you are done, press the
<help-button>
<name>Post</name>
<link>screen=BankReconPostScreen</link>
<image>Post</image>
</help-button>
button. If the cleared totals match the
bank statement, press the
<help-button>
<name>Post</name>
<link>screen=BankReconPostScreen</link>
<image>Post</image>
</help-button>
button to mark these items as cleared.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="120">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankReconHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header Screen</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>BankReconGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="121">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankReconScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Bank Reconciliation</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>BankReconGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to mark transactions as reconciled with a bank statement.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Select an account to reconcile.
</paragraph>
<paragraph>
Click the checkmark next to each item cleared by the bank. 
</paragraph>
<paragraph>
When you are done, press the
<help-button>
<name>Post</name>
<link>screen=BankReconPostScreen</link>
<image>Post</image>
</help-button>
button. If the cleared totals match the
bank statement, press the
<help-button>
<name>Post</name>
<link>screen=BankReconPostScreen</link>
<image>Post</image>
</help-button>
button to mark these items as cleared.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankReconGridScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="122">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankReconScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Fields for Bank Acct Reconciliation</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>BankReconGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="123">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrx</ClassName>
		<BaseClassName>BaseTrx</BaseClassName>
		<ClassDesc>Checking account desc.</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankTrx</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Display bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program displays the transactions for a bank account. 
</paragraph>
<paragraph>
To display the current account balance, just check the "Balance?" checkmark.
</paragraph>
<paragraph>
To void a transaction, click on the "delete" button. The
transaction will not be deleted, but will be zeroed and the
G/L postings will be reversed.
</paragraph>
<paragraph>
To display the General Ledger distribution for a bank account transaction detail, just press the
<help-button>
<name>Distribution</name>
<link>screen=BankTrxDistGridScreen</link>
<image>Distribution</image>
</help-button>
button.
</paragraph>
<paragraph>
To display the payment distribution for a bank account transaction detail, just press the
<help-button>
<name>Payment Distribution</name>
<link>screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Price</image>
</help-button>
button.
The screen that displays depends on the type of Bank Transaction:
</paragraph>
<item-list>
<item>If the transaction is an Accounts Receivable deposit,
the
<help-button>
<name>Payment Distribution (A/R)</name>
<link>screen=ArTrxLinkTrxGridScreen</link>
<image>Price</image>
</help-button> screen will display.</item>
<item>If the transaction is an Accounts Payable payment, the
<help-button>
<name>Payment Distribution (A/P)</name>
<link>screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Price</image>
</help-button> screen will display.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="124">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchDetail</ClassName>
		<BaseClassName>BankTrx</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankTrxBatchDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="125">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchDist</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Temporary Distribution file for Bank Transactions.</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankTrxBatchDist</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrxBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="126">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchDistGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrxBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="127">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchDetailHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchDetailHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="128">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchDistScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrxBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="129">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Bank Transactions</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchDetailScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrxBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="130">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchPost</ClassName>
		<BaseClassName>BaseTrxPostScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchDetailScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="132">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxCalcBalance</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Calculate the balance for the bank transactions</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>BankTrxCalcBalance</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="133">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxDistGridScreen</ClassName>
		<BaseClassName>BaseTrxDistGridScreen</BaseClassName>
		<ClassDesc>Account Transaction Distribution</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>BankTrxDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Account Transaction Distribution display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Account Transaction Distribution displays the source of a G/L Transaction.
</paragraph>
<paragraph>
This is the audit trail back to the originating transactions.
</paragraph>
<paragraph>
To display the all of the transaction distribution for this transaction, click on the
<help-button>
<description>Detail</description>
<image>Detail</image>
<link>record=AcctDetailDist</link>
</help-button>
button.<br/>
You would only press this button if you are in the maintenance screen to see the rest of the distribution for this transaction.
Pressing this from the grid screen will redisplay the same data.
</paragraph>
<paragraph>
To display the distribution group, click on the
<help-button>
<description>Group</description>
<image>Group</image>
<link>screen=AcctDetailDistGroupGridScreen</link>
</help-button>
button. The distribution group is the complete original source transaction.
</paragraph>
<paragraph>
To display the source transaction, click on the
<help-button>
<description>Source trx</description>
<image>Source</image>
</help-button>
button. The screen displayed will depend on the source of the transaction.
(ie., For a cash deposit, the original Bank Transaction will display)
</paragraph>
<paragraph>
Often you will see a
<help-button>
<name>Transaction</name>
<link>record=AcctDetail</link>
<image>Transaction</image>
</help-button>
button. This button will display the top-level G/L posting transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctDetailDistGridScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="134">
		<LastChanged>2013-01-22T05:46:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header Screen for Bank Trx dist.</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>BankTrxDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="135">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Checking account desc.</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>BankTrxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program displays the transactions for a bank account. 
</paragraph>
<paragraph>
To display the current account balance, just check the "Balance?" checkmark.
</paragraph>
<paragraph>
To void a transaction, click on the "delete" button. The
transaction will not be deleted, but will be zeroed and the
G/L postings will be reversed.
</paragraph>
<paragraph>
To display the General Ledger distribution for a bank account transaction detail, just press the
<help-button>
<name>Distribution</name>
<link>screen=BankTrxDistGridScreen</link>
<image>Distribution</image>
</help-button>
button.
</paragraph>
<paragraph>
To display the payment distribution for a bank account transaction detail, just press the
<help-button>
<name>Payment Distribution</name>
<link>screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Price</image>
</help-button>
button.
The screen that displays depends on the type of Bank Transaction:
</paragraph>
<item-list>
<item>If the transaction is an Accounts Receivable deposit,
the
<help-button>
<name>Payment Distribution (A/R)</name>
<link>screen=ArTrxLinkTrxGridScreen</link>
<image>Price</image>
</help-button> screen will display.</item>
<item>If the transaction is an Accounts Payable payment, the
<help-button>
<name>Payment Distribution (A/P)</name>
<link>screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Price</image>
</help-button> screen will display.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="136">
		<LastChanged>2012-03-28T11:03:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankAcctHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header screen for acct detail inquiry</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>BankAcctHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="137">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Checking account desc.</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>BankTrxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program displays the transactions for a bank account. 
</paragraph>
<paragraph>
To display the current account balance, just check the "Balance?" checkmark.
</paragraph>
<paragraph>
To void a transaction, click on the "delete" button. The
transaction will not be deleted, but will be zeroed and the
G/L postings will be reversed.
</paragraph>
<paragraph>
To display the General Ledger distribution for a bank account transaction detail, just press the
<help-button>
<name>Distribution</name>
<link>screen=BankTrxDistGridScreen</link>
<image>Distribution</image>
</help-button>
button.
</paragraph>
<paragraph>
To display the payment distribution for a bank account transaction detail, just press the
<help-button>
<name>Payment Distribution</name>
<link>screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Price</image>
</help-button>
button.
The screen that displays depends on the type of Bank Transaction:
</paragraph>
<item-list>
<item>If the transaction is an Accounts Receivable deposit,
the
<help-button>
<name>Payment Distribution (A/R)</name>
<link>screen=ArTrxLinkTrxGridScreen</link>
<image>Price</image>
</help-button> screen will display.</item>
<item>If the transaction is an Accounts Payable payment, the
<help-button>
<name>Payment Distribution (A/P)</name>
<link>screen=PaymentHistoryLinkTrxGridScreen</link>
<image>Price</image>
</help-button> screen will display.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="138">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Params for Bank Trx display</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>BankTrxScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="140">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseArPay</ClassName>
		<BaseClassName>BaseTrx</BaseClassName>
		<ClassDesc>Base payment instrument for A/R (Mcos, Credit Cards, etc.)</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BaseArPay</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="144">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseTrx</ClassName>
		<BaseClassName>Trx</BaseClassName>
		<ClassDesc>Base system transaction</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BaseTrx</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>A Base Trx is the source of an Account Distribution Posting to G/L</ClassExplain>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="145">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BatchSequenceHandler</ClassName>
		<BaseClassName>SequenceHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AutoBatchScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="149">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAgencyScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Booking Profile Information Entry</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.base</ClassPackage>
		<ClassSourceFile>BookingAgencyScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter profile information for a booking</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the profile or main contact information for a booking.
</paragraph>
<paragraph>
You may:<br/>
1. Enter all of the contact information manually, or<br/>
2. Click on the.
<help-button>
<name>Lookup</name>
<link>record=Profile</link>
<image>Lookup</image>
</help-button>
button to select an agency or passenger from the <help-link>
<name>Profile</name>
<link>record=Profile</link>
</help-link> screen, or<br/>
3. Click on the.
<help-button>
<name>Form</name>
<link>record=Profile</link>
<image>Form</image>
</help-button>
button to enter a new <help-link>
<name>Profile</name>
<link>record=Profile</link>
</help-link> and associate it with this booking.<br/>
</paragraph>
<paragraph>
To clear the contact information on this screen, click on the
<help-button>
<name>Reset</name>
<link>record=Profile</link>
<image>Reset</image>
</help-button>
button.
</paragraph>
<paragraph>
Any information that you change in this screen will also be changed in the <help-link>
<name>Profile</name>
<link>record=Profile</link>
</help-link> record.
</paragraph>
<paragraph>
The standard commission field sets the default commission rate for the pricing screen.
The language preference sets the language for the booking and the currency preference sets the currency for the costing and pricing screens. 
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="150">
		<LastChanged>2012-04-12T21:12:56</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields for BkBooking</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>BookingScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="151">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelScreenRecord</ClassName>
		<BaseClassName>BookingDetailScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields for BkBooking</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.hotel</ClassPackage>
		<ClassSourceFile>BookingHotelScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="152">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingMenuScreen</ClassName>
		<BaseClassName>MenuScreen</BaseClassName>
		<ClassDesc>Booking entry</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.base</ClassPackage>
		<ClassSourceFile>BookingHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking lookup and entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Lookup and enter new bookings.
</paragraph>
<paragraph>
In the booking lookup screen you can search for bookings by Booking, Tour Template, or Tour Departure.
</paragraph>
<paragraph>
The booking entry screen allows you to create and modify a booking.<br/>
You can modify your booking using the following sub-screens:
</paragraph>
<item-list>
<item>
<help-link>
<name>Booking Menu</name>
<link>record=Booking</link>
<image>images/tour/buttons/Menu.gif</image>
</help-link>
</item>
<item><help-link>
<name>Summary</name>
<link>screen=BookingSummaryScreen</link>
<image>images/tour/buttons/Summary.gif</image>
</help-link></item>
<item><help-link>
<name>Agency</name>
<link>screen=BookingAgencyScreen</link>
<image>images/tour/buttons/Agency.gif</image>
</help-link></item>
<item><help-link>
<name>Passengers</name>
<link>record=BookingPax</link>
<image>images/tour/buttons/Passenger.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour</name>
<image>images/tour/buttons/Tour.gif</image>
<link>record=Tour</link>
</help-link>
</item>
<item>
<help-link>
<name>Line items</name>
<link>record=BookingLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Payment history</name>
<link>record=ArTrx</link>
<image>images/tour/buttons/Line.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Options</name>
<link>record=BookingAnswer</link>
<image>images/tour/buttons/Options.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Calendar</name>
<link>screen=BookingCalendar</link>
<image>images/tour/buttons/Calendar.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Product detail</name>
<link>screen=BookingDetailGridScreen</link>
<image>images/tour/buttons/Detail.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Itinerary</name>
<link>screen=BookingItinerary</link>
<image>images/tour/buttons/Itinerary.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Vouchers</name>
<link>screen=TourApTrxGridScreen</link>
<image>images/tour/buttons/Status.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour detail</name>
<link>record=BookingTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Air</name>
<link>record=BookingAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Hotel detail</name>
<link>record=BookingHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Land detail</name>
<link>record=BookingLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Car</name>
<link>record=BookingCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Transportation</name>
<link>record=BookingTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Cruise</name>
<link>record=BookingCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Non-tour items</name>
<link>record=BookingItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-link>
</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Booking</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="153">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Tour information</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>BookingTourScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Tour information maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tour information entry screen.
</paragraph>
<paragraph>
Select a tour and a departure date to start the booking process.<br/>
 You may select a tour from the drop-down list or click on the <help-link>
<name>Tour Lookup</name>
<image>Lookup</image>
<link>record=TourHeader</link>
</help-link> button to use the tour header lookup screen.<br/>
Enter a departure date to select a tour header and initiate a booking.<br/>
<bold>Note:</bold> For Series Tours, you may press the <help-button>
<name> </name>
<image>Lookup</image>
</help-button> button next to the departure date to select a series departure.
</paragraph>
<paragraph>
After selecting a tour header and a departure date, the tour screen will be populated from information in the <help-link>
<name>Tour Header</name>
<link>record=TourHeader</link>
</help-link> and the <help-link>
<name>Tour Class</name>
<link>record=TourClass</link>
</help-link> files. Any of these fields may be changed.<br/>
Also, all of the detail screens will be populated depending on the detail information in the <help-link>
<name>Tour Header Option Detail</name>
<link>record=TourHeaderOption</link>
</help-link>.
</paragraph>
<paragraph>
If there are options that require answers, the <help-button>
<name>Options</name>
<image>images/tour/buttons/Options.gif</image>
<link>record=BookingAnswer</link>
</help-button> button will be enabled. If there is any <italic>required</italic> information, you will automatically be switched to the Booking Option<help-button>
<name>Booking Option</name>
<image>images/tour/buttons/Options.gif</image>
<link>record=BookingAnswer</link>
</help-button> screen.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Tour</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="160">
		<LastChanged>2012-04-01T10:52:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LookupScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.lookup</ClassPackage>
		<ClassSourceFile>LookupScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="162">
		<LastChanged>2012-04-06T22:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RoomTypeField</ClassName>
		<BaseClassName>ShortField</BaseClassName>
		<ClassDesc>Room Code Popup</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>RoomTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="163">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingSummaryScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Booking Summary Screen</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.base</ClassPackage>
		<ClassSourceFile>BookingSummaryScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking Summary</ClassExplain>
		<ClassHelp type="XML"><paragraph>This screen displays the basic information for a booking.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="165">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Booking</ClassName>
		<BaseClassName>CustSale</BaseClassName>
		<ClassDesc>Booking entry</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Booking</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking lookup and entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Lookup and enter new bookings.
</paragraph>
<paragraph>
In the booking lookup screen you can search for bookings by Booking, Tour Template, or Tour Departure.
</paragraph>
<paragraph>
The booking entry screen allows you to create and modify a booking.<br/>
You can modify your booking using the following sub-screens:
</paragraph>
<item-list>
<item>
<help-link>
<name>Booking Menu</name>
<link>record=Booking</link>
<image>images/tour/buttons/Menu.gif</image>
</help-link>
</item>
<item><help-link>
<name>Summary</name>
<link>screen=BookingSummaryScreen</link>
<image>images/tour/buttons/Summary.gif</image>
</help-link></item>
<item><help-link>
<name>Agency</name>
<link>screen=BookingAgencyScreen</link>
<image>images/tour/buttons/Agency.gif</image>
</help-link></item>
<item><help-link>
<name>Passengers</name>
<link>record=BookingPax</link>
<image>images/tour/buttons/Passenger.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour</name>
<image>images/tour/buttons/Tour.gif</image>
<link>record=Tour</link>
</help-link>
</item>
<item>
<help-link>
<name>Line items</name>
<link>record=BookingLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Payment history</name>
<link>record=ArTrx</link>
<image>images/tour/buttons/Line.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Options</name>
<link>record=BookingAnswer</link>
<image>images/tour/buttons/Options.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Calendar</name>
<link>screen=BookingCalendar</link>
<image>images/tour/buttons/Calendar.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Product detail</name>
<link>screen=BookingDetailGridScreen</link>
<image>images/tour/buttons/Detail.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Itinerary</name>
<link>screen=BookingItinerary</link>
<image>images/tour/buttons/Itinerary.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Vouchers</name>
<link>screen=TourApTrxGridScreen</link>
<image>images/tour/buttons/Status.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour detail</name>
<link>record=BookingTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Air</name>
<link>record=BookingAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Hotel detail</name>
<link>record=BookingHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Land detail</name>
<link>record=BookingLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Car</name>
<link>record=BookingCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Transportation</name>
<link>record=BookingTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Cruise</name>
<link>record=BookingCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Non-tour items</name>
<link>record=BookingItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-link>
</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="166">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAnswer</ClassName>
		<BaseClassName>BookingSub</BaseClassName>
		<ClassDesc>Booking Answer File</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BookingAnswer</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking option selection</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The booking option selection screen is used to select Tour Options.
The tour options selected will add tour components to a booking.
The components will only be added if the criteria for the option are met,
either automatically (For example, a weekend surcharge selected based on the day of the week) or manually (such as a hotel upgrade).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="167">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingArTrxGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>A/R Open File</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.acctrec</ClassPackage>
		<ClassSourceFile>BookingArTrxGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>The accounts receivable transaction detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A/R Transactions are automatically created and updated when the tour price or payments change.
</paragraph>
<paragraph>
A/R Transactions are also linked to the financial systems. All A/R transactions are distributed to the general ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ArTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="168">
		<LastChanged>2013-01-22T05:54:46</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCalendar</ClassName>
		<BaseClassName>CalendarScreen</BaseClassName>
		<ClassDesc>Booking entry sub-screen to manipulate itinerary using a calendar screen</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.calendar</ClassPackage>
		<ClassSourceFile>BookingCalendar</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking calendar</ClassExplain>
		<ClassHelp type="XML"><paragraph>The calendar screen is the primary screen for FIT building.</paragraph>
<paragraph>
Mouse functions operate as follows:
Clicking on a calendar box selects it.<br/>
Product Icon: Click - selects, Drag and Drop changes.<br/>
Product Description: Click - changes detail info, Drag and Drop changes start date, Shift/Ctrl Click add to selection<br/>
Product end icon: click - selects, Drap and Drop changes end date, Shift/Ctrl click add to selection.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="169">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCalendarItem</ClassName>
		<BaseClassName>CalendarRecordItem</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.calendar</ClassPackage>
		<ClassSourceFile>BookingCalendar</ClassSourceFile>
		<ClassType>Object</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements>CalendarItem</ClassImplements>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="171">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc>Control file</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BookingControl</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking control file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the default booking values.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="172">
		<LastChanged>2012-03-28T16:30:05</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Booking Reference/Lookup Field</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.field</ClassPackage>
		<ClassSourceFile>BookingField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="173">
		<LastChanged>2013-01-22T05:56:12</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Booking entry</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.lookup</ClassPackage>
		<ClassSourceFile>BookingGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking lookup and entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Lookup and enter new bookings.
</paragraph>
<paragraph>
In the booking lookup screen you can search for bookings by Booking, Tour Template, or Tour Departure.
</paragraph>
<paragraph>
The booking entry screen allows you to create and modify a booking.<br/>
You can modify your booking using the following sub-screens:
</paragraph>
<item-list>
<item>
<help-link>
<name>Booking Menu</name>
<link>record=Booking</link>
<image>images/tour/buttons/Menu.gif</image>
</help-link>
</item>
<item><help-link>
<name>Summary</name>
<link>screen=BookingSummaryScreen</link>
<image>images/tour/buttons/Summary.gif</image>
</help-link></item>
<item><help-link>
<name>Agency</name>
<link>screen=BookingAgencyScreen</link>
<image>images/tour/buttons/Agency.gif</image>
</help-link></item>
<item><help-link>
<name>Passengers</name>
<link>record=BookingPax</link>
<image>images/tour/buttons/Passenger.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour</name>
<image>images/tour/buttons/Tour.gif</image>
<link>record=Tour</link>
</help-link>
</item>
<item>
<help-link>
<name>Line items</name>
<link>record=BookingLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Payment history</name>
<link>record=ArTrx</link>
<image>images/tour/buttons/Line.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Options</name>
<link>record=BookingAnswer</link>
<image>images/tour/buttons/Options.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Calendar</name>
<link>screen=BookingCalendar</link>
<image>images/tour/buttons/Calendar.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Product detail</name>
<link>screen=BookingDetailGridScreen</link>
<image>images/tour/buttons/Detail.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Itinerary</name>
<link>screen=BookingItinerary</link>
<image>images/tour/buttons/Itinerary.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Vouchers</name>
<link>screen=TourApTrxGridScreen</link>
<image>images/tour/buttons/Status.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour detail</name>
<link>record=BookingTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Air</name>
<link>record=BookingAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Hotel detail</name>
<link>record=BookingHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Land detail</name>
<link>record=BookingLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Car</name>
<link>record=BookingCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Transportation</name>
<link>record=BookingTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Cruise</name>
<link>record=BookingCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Non-tour items</name>
<link>record=BookingItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-link>
</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Booking</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="174">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHistory</ClassName>
		<BaseClassName>Booking</BaseClassName>
		<ClassDesc>Booking file history</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.history.db</ClassPackage>
		<ClassSourceFile>BookingHistory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="175">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotel</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Booking hotel information</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingHotel</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking hotel display and maintentance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking hotel information can be entered and changed here.
</paragraph>
<paragraph>
Enter a hotel, check in date, and the number of nights.<br/>
You can also set the room class and the rate type for the hotel.<br/>
On the right side of the screen you can select the meals that the hotel should supply. There are fields for the number of meals and the day the meal should be served (where day 0 is the check-in date).<br/>
The system will automatically retrieve the hotel rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Hotel Mainteance</name>
<link>record=Hotel</link> 
<image>Help</image>
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Room pricing</name>
<link>record=HotelPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button>, <help-button>
<name>Meal pricing</name>
<link>record=HotelMealPricing</link>
<image>images/tour/buttons/Meal.gif</image>
</help-button>, and <help-button>
<name>Room inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Help</image>
</help-link> screens. The <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Help</image>
</help-link> screen also explains in detail how messages are send to product vendors.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="176">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Booking hotel information</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.hotel</ClassPackage>
		<ClassSourceFile>BookingHotelScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking hotel display and maintentance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking hotel information can be entered and changed here.
</paragraph>
<paragraph>
Enter a hotel, check in date, and the number of nights.<br/>
You can also set the room class and the rate type for the hotel.<br/>
On the right side of the screen you can select the meals that the hotel should supply. There are fields for the number of meals and the day the meal should be served (where day 0 is the check-in date).<br/>
The system will automatically retrieve the hotel rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Hotel Mainteance</name>
<link>record=Hotel</link> 
<image>Help</image>
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Room pricing</name>
<link>record=HotelPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button>, <help-button>
<name>Meal pricing</name>
<link>record=HotelMealPricing</link>
<image>images/tour/buttons/Meal.gif</image>
</help-button>, and <help-button>
<name>Room inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Help</image>
</help-link> screens. The <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Help</image>
</help-link> screen also explains in detail how messages are send to product vendors.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingHotel</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="178">
		<LastChanged>2013-01-22T05:55:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Booking hotel information</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.hotel</ClassPackage>
		<ClassSourceFile>BookingHotelScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking hotel display and maintentance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking hotel information can be entered and changed here.
</paragraph>
<paragraph>
Enter a hotel, check in date, and the number of nights.<br/>
You can also set the room class and the rate type for the hotel.<br/>
On the right side of the screen you can select the meals that the hotel should supply. There are fields for the number of meals and the day the meal should be served (where day 0 is the check-in date).<br/>
The system will automatically retrieve the hotel rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Hotel Mainteance</name>
<link>record=Hotel</link> 
<image>Help</image>
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Room pricing</name>
<link>record=HotelPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button>, <help-button>
<name>Meal pricing</name>
<link>record=HotelMealPricing</link>
<image>images/tour/buttons/Meal.gif</image>
</help-button>, and <help-button>
<name>Room inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Help</image>
</help-link> screens. The <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Help</image>
</help-link> screen also explains in detail how messages are send to product vendors.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingHotel</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="179">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLand</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Land detail file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingLand</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking land display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking land information can be entered and changed here.
</paragraph>
<paragraph>
Enter a tour code and start date.<br/>
You can also set the tour class and the rate type for the tour.
The tour class is usually selected automatically based on the number of passengers on the tour (If over the cutoff, the private vehicle class is selected)<br/>
The system will automatically retrieve the tour rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Land Maintenance</name>
<link>record=Land</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Tour pricing</name>
<link>record=LandPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Land inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="180">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Land detail file</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.land</ClassPackage>
		<ClassSourceFile>BookingLandScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking land display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking land information can be entered and changed here.
</paragraph>
<paragraph>
Enter a tour code and start date.<br/>
You can also set the tour class and the rate type for the tour.
The tour class is usually selected automatically based on the number of passengers on the tour (If over the cutoff, the private vehicle class is selected)<br/>
The system will automatically retrieve the tour rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Land Maintenance</name>
<link>record=Land</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Tour pricing</name>
<link>record=LandPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Land inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingLand</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="182">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Land detail file</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.land</ClassPackage>
		<ClassSourceFile>BookingLandScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking land display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking land information can be entered and changed here.
</paragraph>
<paragraph>
Enter a tour code and start date.<br/>
You can also set the tour class and the rate type for the tour.
The tour class is usually selected automatically based on the number of passengers on the tour (If over the cutoff, the private vehicle class is selected)<br/>
The system will automatically retrieve the tour rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Land Maintenance</name>
<link>record=Land</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Tour pricing</name>
<link>record=LandPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Land inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingLand</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="183">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLine</ClassName>
		<BaseClassName>BookingSub</BaseClassName>
		<ClassDesc>Booking Line Items</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingLine</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Display and change booking pricing</ClassExplain>
		<ClassHelp type="XML"><paragraph>This screen is used to display and change the booking pricing.</paragraph>
<paragraph>Pricing line items are added automatically as products are added to the booking.
Any item that you add or change will have a pricing status of 'Manual', meaning the the price will not change automatically when the product is changed.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="184">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLineGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>Booking Line Items</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.acctrec</ClassPackage>
		<ClassSourceFile>BookingLineScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display and change booking pricing</ClassExplain>
		<ClassHelp type="XML"><paragraph>This screen is used to display and change the booking pricing.</paragraph>
<paragraph>Pricing line items are added automatically as products are added to the booking.
Any item that you add or change will have a pricing status of 'Manual', meaning the the price will not change automatically when the product is changed.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingLine</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="185">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLineHistory</ClassName>
		<BaseClassName>BookingLine</BaseClassName>
		<ClassDesc>Line history file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.history.db</ClassPackage>
		<ClassSourceFile>BookingLineHistory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="186">
		<LastChanged>2012-04-01T10:52:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLookupQuery</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Booking and Tour Query</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.lookup</ClassPackage>
		<ClassSourceFile>BookingLookupQuery</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="187">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingPax</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Passenger Booking Detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BookingPax</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking passenger entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter or change the passenger information for a booking.
</paragraph>
<paragraph>
The passenger name is automatically split up into Title, First, Middle, and Last name.
The single passenger entry screen allows you to enter these fields individually as well as enter
some additional passenger information.
</paragraph>
<paragraph>
When you select the single passenger entry screen you can lookup a single passenger from the the
<help-link>
<name>Profile lookup</name>
<link>record=Profile</link>
</help-link>screen by clicking on the <help-button>
<image>Lookup</image>
<name> </name>
</help-button>(lookup) button.
</paragraph>
<paragraph>
In addition to the standard toolbar buttons, there are two extra buttons:<br/>
1. The
<help-button>
<name>Select passengers</name>
<link>record=Profile</link>
<image>Lookup</image>
</help-button>
button. When you press this button, the <help-link>
<name>Profile lookup</name>
<link>record=Profile</link>
</help-link>screen will appear displaying only contact type profiles.
Selecting a profile from this screen will add all of the passengers from this profile
to this booking. In adddition, if a profile has not already been selected from the <help-link>
<name>Booking Profile Screen</name>
<link>screen=BookingAgencyScreen</link>
</help-link>,
this profile will be selected as the current booking profile.<br/>
2. The
<help-button>
<name>Add to passengers</name>
<image>tour/buttons/Passenger</image>
</help-button>
button adds all the passengers in this booking to the profile file and then displays the new main <help-link>
<name>Profile</name>
<link>record=Profile</link>
</help-link>in a new window.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="188">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingPaxGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>Passenger Booking Detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.pax</ClassPackage>
		<ClassSourceFile>BookingPaxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking passenger entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter or change the passenger information for a booking.
</paragraph>
<paragraph>
The passenger name is automatically split up into Title, First, Middle, and Last name.
The single passenger entry screen allows you to enter these fields individually as well as enter
some additional passenger information.
</paragraph>
<paragraph>
When you select the single passenger entry screen you can lookup a single passenger from the the
<help-link>
<name>Profile lookup</name>
<link>record=Profile</link>
</help-link>screen by clicking on the <help-button>
<image>Lookup</image>
<name> </name>
</help-button>(lookup) button.
</paragraph>
<paragraph>
In addition to the standard toolbar buttons, there are two extra buttons:<br/>
1. The
<help-button>
<name>Select passengers</name>
<link>record=Profile</link>
<image>Lookup</image>
</help-button>
button. When you press this button, the <help-link>
<name>Profile lookup</name>
<link>record=Profile</link>
</help-link>screen will appear displaying only contact type profiles.
Selecting a profile from this screen will add all of the passengers from this profile
to this booking. In adddition, if a profile has not already been selected from the <help-link>
<name>Booking Profile Screen</name>
<link>screen=BookingAgencyScreen</link>
</help-link>,
this profile will be selected as the current booking profile.<br/>
2. The
<help-button>
<name>Add to passengers</name>
<image>tour/buttons/Passenger</image>
</help-button>
button adds all the passengers in this booking to the profile file and then displays the new main <help-link>
<name>Profile</name>
<link>record=Profile</link>
</help-link>in a new window.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingPax</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="189">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingPaxScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Passenger Booking Detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.pax</ClassPackage>
		<ClassSourceFile>BookingPaxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking passenger entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter or change the passenger information for a booking.
</paragraph>
<paragraph>
The passenger name is automatically split up into Title, First, Middle, and Last name.
The single passenger entry screen allows you to enter these fields individually as well as enter
some additional passenger information.
</paragraph>
<paragraph>
When you select the single passenger entry screen you can lookup a single passenger from the the
<help-link>
<name>Profile lookup</name>
<link>record=Profile</link>
</help-link>screen by clicking on the <help-button>
<image>Lookup</image>
<name> </name>
</help-button>(lookup) button.
</paragraph>
<paragraph>
In addition to the standard toolbar buttons, there are two extra buttons:<br/>
1. The
<help-button>
<name>Select passengers</name>
<link>record=Profile</link>
<image>Lookup</image>
</help-button>
button. When you press this button, the <help-link>
<name>Profile lookup</name>
<link>record=Profile</link>
</help-link>screen will appear displaying only contact type profiles.
Selecting a profile from this screen will add all of the passengers from this profile
to this booking. In adddition, if a profile has not already been selected from the <help-link>
<name>Booking Profile Screen</name>
<link>screen=BookingAgencyScreen</link>
</help-link>,
this profile will be selected as the current booking profile.<br/>
2. The
<help-button>
<name>Add to passengers</name>
<image>tour/buttons/Passenger</image>
</help-button>
button adds all the passengers in this booking to the profile file and then displays the new main <help-link>
<name>Profile</name>
<link>record=Profile</link>
</help-link>in a new window.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingPax</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="190">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHeaderScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Booking entry</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.base</ClassPackage>
		<ClassSourceFile>BookingHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking lookup and entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Lookup and enter new bookings.
</paragraph>
<paragraph>
In the booking lookup screen you can search for bookings by Booking, Tour Template, or Tour Departure.
</paragraph>
<paragraph>
The booking entry screen allows you to create and modify a booking.<br/>
You can modify your booking using the following sub-screens:
</paragraph>
<item-list>
<item>
<help-link>
<name>Booking Menu</name>
<link>record=Booking</link>
<image>images/tour/buttons/Menu.gif</image>
</help-link>
</item>
<item><help-link>
<name>Summary</name>
<link>screen=BookingSummaryScreen</link>
<image>images/tour/buttons/Summary.gif</image>
</help-link></item>
<item><help-link>
<name>Agency</name>
<link>screen=BookingAgencyScreen</link>
<image>images/tour/buttons/Agency.gif</image>
</help-link></item>
<item><help-link>
<name>Passengers</name>
<link>record=BookingPax</link>
<image>images/tour/buttons/Passenger.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour</name>
<image>images/tour/buttons/Tour.gif</image>
<link>record=Tour</link>
</help-link>
</item>
<item>
<help-link>
<name>Line items</name>
<link>record=BookingLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Payment history</name>
<link>record=ArTrx</link>
<image>images/tour/buttons/Line.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Options</name>
<link>record=BookingAnswer</link>
<image>images/tour/buttons/Options.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Calendar</name>
<link>screen=BookingCalendar</link>
<image>images/tour/buttons/Calendar.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Product detail</name>
<link>screen=BookingDetailGridScreen</link>
<image>images/tour/buttons/Detail.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Itinerary</name>
<link>screen=BookingItinerary</link>
<image>images/tour/buttons/Itinerary.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Vouchers</name>
<link>screen=TourApTrxGridScreen</link>
<image>images/tour/buttons/Status.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour detail</name>
<link>record=BookingTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Air</name>
<link>record=BookingAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Hotel detail</name>
<link>record=BookingHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Land detail</name>
<link>record=BookingLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Car</name>
<link>record=BookingCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Transportation</name>
<link>record=BookingTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Cruise</name>
<link>record=BookingCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Non-tour items</name>
<link>record=BookingItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-link>
</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Booking</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="191">
		<LastChanged>2013-01-22T05:54:12</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingScreenHandler</ClassName>
		<BaseClassName>SwitchSubScreenHandler</BaseClassName>
		<ClassDesc>Behavior to switch booking scr</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.base</ClassPackage>
		<ClassSourceFile>BookingHeaderScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="192">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingStatus</ClassName>
		<BaseClassName>BaseProductStatus</BaseClassName>
		<ClassDesc>Booking status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BookingStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking status maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the booking status descriptions.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="193">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingStatusField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BookingStatusField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="196">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrocBundleButton</ClassName>
		<BaseClassName>SButtonBox</BaseClassName>
		<ClassDesc>Bundle button</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>BrocBundleButton</ClassSourceFile>
		<ClassType>ScreenField</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="197">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrocHistButton</ClassName>
		<BaseClassName>SButtonBox</BaseClassName>
		<ClassDesc>Brochure History</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>BrocHistButton</ClassSourceFile>
		<ClassType>ScreenField</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="198">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrocHistList</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>History list</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>BrocHistList</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="199">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrochuresByBundleName</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Brochures by Bundle</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BundleDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="200">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrokerDistGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Broker distribution</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.broker</ClassPackage>
		<ClassSourceFile>BrokerDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Broker distribution entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter foreign currency draft(s)
purchased from a currency broker or a bank.
</paragraph>
<paragraph>
The system needs to know who each draft is payable to, the
amount, and the exchange rates for each draft.
</paragraph>
<paragraph>
First, enter the vendor code of the broker
you are purchasing the draft from (defaults to the broker vendor in the
control file).
</paragraph>
<paragraph>
The current drafts will
display on the screen.
</paragraph>
<paragraph>
For each draft, enter
the vendor code of the payee, and the amount of the draft (The
amount defaults to the current selected amount) and the U.S. Dollar amount of the
purchase, or the exchange rate (the system will
calculate the U.S. dollar amount for you).
</paragraph>
<paragraph>
After all of the amounts have been entered, you should request
either a manual or automatic check request and post the check(s).
</paragraph>
<paragraph>
To see the resulting G/L entries, take a look at
<help-link>
<name>Check printing</name>
<link>?screen=PrintCheckJournal</link>
<image>Form</image>
</help-link>.
</paragraph>
<paragraph>
After the broker is paid, the broker drafts will appear in each vendor's account (it acts just like a prepayment).
<br/>
Then, it will have to be distributed to specific invoices in
<help-link>
<name>Prepayment Distribution</name>
<image>Form</image>
<link>screen=PrepaymentDistScreen</link>
</help-link>.
</paragraph>
<paragraph>
If auto-update is selected in the control file, then the current
exchange rate in the currency file will be updated when the check
for the broker is printed.
</paragraph>
<paragraph>
If the broker charges a service change on the exchange, enter an
invoice amount for the service change. The service charge will
automatically be selected for payment along with the broker
amounts. Do not enter the service charge in this program. To see
the total check amount, use vendor payment selection.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="201">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrokerHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.broker</ClassPackage>
		<ClassSourceFile>BrokerDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="202">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrokerDistScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Broker distribution</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.broker</ClassPackage>
		<ClassSourceFile>BrokerDistGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Broker distribution entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter foreign currency draft(s)
purchased from a currency broker or a bank.
</paragraph>
<paragraph>
The system needs to know who each draft is payable to, the
amount, and the exchange rates for each draft.
</paragraph>
<paragraph>
First, enter the vendor code of the broker
you are purchasing the draft from (defaults to the broker vendor in the
control file).
</paragraph>
<paragraph>
The current drafts will
display on the screen.
</paragraph>
<paragraph>
For each draft, enter
the vendor code of the payee, and the amount of the draft (The
amount defaults to the current selected amount) and the U.S. Dollar amount of the
purchase, or the exchange rate (the system will
calculate the U.S. dollar amount for you).
</paragraph>
<paragraph>
After all of the amounts have been entered, you should request
either a manual or automatic check request and post the check(s).
</paragraph>
<paragraph>
To see the resulting G/L entries, take a look at
<help-link>
<name>Check printing</name>
<link>?screen=PrintCheckJournal</link>
<image>Form</image>
</help-link>.
</paragraph>
<paragraph>
After the broker is paid, the broker drafts will appear in each vendor's account (it acts just like a prepayment).
<br/>
Then, it will have to be distributed to specific invoices in
<help-link>
<name>Prepayment Distribution</name>
<image>Form</image>
<link>screen=PrepaymentDistScreen</link>
</help-link>.
</paragraph>
<paragraph>
If auto-update is selected in the control file, then the current
exchange rate in the currency file will be updated when the check
for the broker is printed.
</paragraph>
<paragraph>
If the broker charges a service change on the exchange, enter an
invoice amount for the service change. The service charge will
automatically be selected for payment along with the broker
amounts. Do not enter the service charge in this program. To see
the total check amount, use vendor payment selection.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BrokerDistGridScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="204">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrokerScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.broker</ClassPackage>
		<ClassSourceFile>BrokerDistGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="205">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BudgetCompField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Budget or Comparative.</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AccountBudget</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="206">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Bundle</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Brochure Bundles</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Bundle</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Brochure bundle maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter and maintain Brochure bundle descriptions and contents.
</paragraph>
<paragraph>
Brochure bundles make brochure entry easier by selecting a bundle
(such as Asia Brochures) instead of having to select each brochure
individually.
</paragraph>
<paragraph>
To specify the particular brochures belonging to a brochure bundle, press the
<help-button>
  <name>Detail</name>
  <image>Detail</image>
  <link>record=BundleDetail</link>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="207">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Brochure Bundle Detail</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BundleDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Specify the brochures belonging to a bundle.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the brochures that make up this bundle of brochures.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="208">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Bundle ID Field</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Bundle</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="209">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleList</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>List of all the bundles</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>BundleList</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="210">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcAcctBalHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>CalcAcctBalHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="212">
		<LastChanged>2012-04-06T10:16:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcBookingDatesHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Recalc bk dates, status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>CalcBookingDatesHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="214">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcEmpTaxesHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Calc the taxes for this emp</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PrTimeTrx</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="215">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcHourlyHandler</ClassName>
		<BaseClassName>ReComputeFieldHandler</BaseClassName>
		<ClassDesc>Calc hourly rate from salary</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="217">
		<LastChanged>2012-03-31T11:28:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcMcoHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Calculate the MCO Net</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>CalcMcoHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="218">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcNewBal</ClassName>
		<BaseClassName>SubFileFilter</BaseClassName>
		<ClassDesc>Add transactions to get bal</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankAcct</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="219">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcNewBalBeh</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Calculate the new balance</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankAcct</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="220">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcOvertimeHandler</ClassName>
		<BaseClassName>ReComputeFieldHandler</BaseClassName>
		<ClassDesc>Calc overtime field</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="223">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Car</ClassName>
		<BaseClassName>Product</BaseClassName>
		<ClassDesc>Rental Car</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>Car</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Rental car information maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Rental car product mainteanance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Rental Car information.
Use the maintenance screen to add and change Rental Cars.
Use the display screen to view all the Rental Cars.
Enter a rate type, class and date to display rental car pricing.
Checking the "Remote lookup?" box will retrieve rental car prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering rental cars, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
There are several detail screens for a rental car:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=CarPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="224">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarClass</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Base product class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarClass</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Product classes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product classes are varing service levels, such as first class, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="225">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Card</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Credit card type</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Card</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Credit Card maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter and change credit card information.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="226">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CardField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Field to display the card type</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Card</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="227">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatch</ClassName>
		<BaseClassName>BankTrxBatch</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CashBatch</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="228">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CashBatchDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="229">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchDetailScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="231">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="232">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header for Cash Batch Detail</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchDetailScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="233">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchPost</ClassName>
		<BaseClassName>BaseArTrxPostScreen</BaseClassName>
		<ClassDesc>Post the Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchPost</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program posts all of the cash receipts detail currently in the system to the A/R detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The current batch header is displayed first. To continue, hit
    return at the CHANGE ITEM prompt.
</paragraph>
<paragraph>
    After the report is finished, review it to make sure it is
    correct. If it is correct, answer yes to the question, "Are you
    sure you want to post to A/R?" The current batch will be posted
    to the A/R detail and cleared from A/R cash entry.
</paragraph>
<paragraph>
    After posting, you will be returned to the A/R main
    menu.
</paragraph>
<paragraph>
    Note: During posting you may get a message that a booking is
    locked. If this happens, have the person locking the booking
    finish their session, then type Yes to continue.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="234">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="235">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Cash Batch Variables</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="236">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashPlanHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Heading</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.cashplan</ClassPackage>
		<ClassSourceFile>CashPlanReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="237">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashPlanReport</ClassName>
		<BaseClassName>AnalysisScreen</BaseClassName>
		<ClassDesc>Cash Receipts Planning Report</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.cashplan</ClassPackage>
		<ClassSourceFile>CashPlanReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the cash receipts planning report.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to estimate future cash receipts based on
    current sales.
</paragraph>
<paragraph>
    Enter the starting date, period length (days) and number of
    periods.
</paragraph>
<paragraph>
    Remember, a tour is only considered if the status is "Okay" or
    some money has been received (This is the definition of an
    accepted tour).
</paragraph>
<paragraph>
    Of course, this program can only estimate future cash
    receipts. To get a more accurate estimate of future cash
    receipts, this report can be run for periods past and then be
    compared against the previous estimates to get an idea of the
    relation between the estimates and the actual values.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="238">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashPlanScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc>Fields for the Cash Receipts Planning Report</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.cashplan</ClassPackage>
		<ClassSourceFile>CashPlanScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="239">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashPlanToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Toolbar</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.cashplan</ClassPackage>
		<ClassSourceFile>CashPlanReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="241">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CertificationType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Profile certifications</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CertificationType</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile certifications maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Profile's certifications such as IATA, ARC, etc.
This information is based on the
<img src="images/buttons/URL.gif"/><html><a href="http://www.opentravel.org">Open Travel</a></html>
specification.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="243">
		<LastChanged>2012-04-07T09:49:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ChangeTourHeaderHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Lookup tour hdr, get tour</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>ChangeTourHeaderHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="246">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckReconDateHandler</ClassName>
		<BaseClassName>CompareFileFilter</BaseClassName>
		<ClassDesc>Only returns checks with this reconciliation date, or a blank recon date</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>BankReconGridScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="247">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckRegister</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Check register</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>CheckRegister</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the current account transaction register.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a valid bank account number and a starting and ending
transaction date. 
</paragraph>
<paragraph>
The valid transactions in this range will print out, with
a starting and ending balance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="248">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckRegisterFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>CheckRegister</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="249">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckRegisterHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Check Register report heading</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>CheckRegister</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="250">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckRegisterToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>CheckRegister</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="251">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ChecksToPrintField</ClassName>
		<BaseClassName>ShortField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>ChecksToPrintField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="252">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckValidEmployee</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Check to see this emp is valid</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PrTimeTrx</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="253">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>City</ClassName>
		<BaseClassName>Location</BaseClassName>
		<ClassDesc>Airports</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>City</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Airport/City codes maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the three letter ARC airport code (or if the city doesn't
    have an airport, make up a unique city code). 
</paragraph>
<paragraph>
The first three description fields are used for different
    purposes. The itinerary description is used for describing the
    airport in an itinerary [ie., Los Angeles (LAX)]; The second is
    the description for a ticket [ie., LOS ANGELES-LAX]; The third
    is for describing the city in an itinerary [ie., Los
    Angeles].
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="254">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CityField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>City Field Type</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CityField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="255">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CityGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Airports</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>CityScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Airport/City codes maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the three letter ARC airport code (or if the city doesn't
    have an airport, make up a unique city code). 
</paragraph>
<paragraph>
The first three description fields are used for different
    purposes. The itinerary description is used for describing the
    airport in an itinerary [ie., Los Angeles (LAX)]; The second is
    the description for a ticket [ie., LOS ANGELES-LAX]; The third
    is for describing the city in an itinerary [ie., Los
    Angeles].
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>City</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="256">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CityScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Airports</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>CityScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Airport/City codes maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the three letter ARC airport code (or if the city doesn't
    have an airport, make up a unique city code). 
</paragraph>
<paragraph>
The first three description fields are used for different
    purposes. The itinerary description is used for describing the
    airport in an itinerary [ie., Los Angeles (LAX)]; The second is
    the description for a ticket [ie., LOS ANGELES-LAX]; The third
    is for describing the city in an itinerary [ie., Los
    Angeles].
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>City</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="266">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CompanyInfo</ClassName>
		<BaseClassName>Company</BaseClassName>
		<ClassDesc>Company Information</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CompanyInfo</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Company address and contact information</ClassExplain>
		<ClassHelp>This information is used in reports and transactions.</ClassHelp>
		<ClassImplements/>
		<SeeAlso>CompanyInfoScreen</SeeAlso>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="267">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CompanyInfoScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Company Information</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>CompanyInfoScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Company address and contact information</ClassExplain>
		<ClassHelp>This information is used in reports and transactions.</ClassHelp>
		<ClassImplements/>
		<SeeAlso>CompanyInfo</SeeAlso>
		<TechnicalInfo/>
		<CopyDescFrom>CompanyInfo</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="269">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Continent</ClassName>
		<BaseClassName>Location</BaseClassName>
		<ClassDesc>Continent</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Continent</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Continent display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Continent maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="270">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ContinentField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Continent</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="273">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CostStatus</ClassName>
		<BaseClassName>BaseDataStatus</BaseClassName>
		<ClassDesc>Cost status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>CostStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Cost status maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Cost status maintenance. The cost status is the current status of the
cost of a product. For example, the cost could currently be in the
process of being retrieved from a vendor site.<br/>
For a description of the status messages, see the <help-link>
<name>Base Message Status</name>
<link>record=BaseMessageStatus</link>
<image>Help</image> 
</help-link> description.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="274">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CostStatusField</ClassName>
		<BaseClassName>BaseDataStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>CostStatus</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="276">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CountMcoAmountHandler</ClassName>
		<BaseClassName>SubCountHandler</BaseClassName>
		<ClassDesc>Count only the MCO amounts</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.pastdue</ClassPackage>
		<ClassSourceFile>PastDueReport</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="277">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Country</ClassName>
		<BaseClassName>Location</BaseClassName>
		<ClassDesc>Country</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Country</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Country file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Country file maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="278">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CountryField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Country</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Country</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="279">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CountryGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>CountryScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="280">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CountryScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>CountryScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="281">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CrDrGridScreen</ClassName>
		<BaseClassName>BookingArTrxGridScreen</BaseClassName>
		<ClassDesc>Debit/Credit entry</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>CrDrGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter credit memos and debit memos.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used for entering credit memos and debit memos
into the A/R open item file. A credit memo
is treated exactly like a payment in the A/R system; It reduces
the amount owed by the customer. A debit memo is treated
exactly like a charge in the A/R system; It increases the
amount owed by the customer.
</paragraph>
<paragraph>
For example, the customer did some marketing for you and
instead of being reimbursed, you could credit the amount to a
booking by entering a credit memo. If a customer bounced a
check, a debit memo would be entered.
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Enter the booking number that you want to adjust. The
booking information and the current A/R transactions will
display.
</paragraph>
<paragraph>
The Transaction code (Credit memo or Debit memo)
will automatically be set depending on whether the
amount is a negative (credit) or positive (debit).
Enter the date (defaults to today), G/L number, and the
comment. The G/L number defaults to the account in the control file.
If you want a specific G/L account, you must enter it in the
Form screen (not the grid display). The counter account is always
the Accounts Receivable set in the control screen.
</paragraph>
<paragraph>
All of the transactions entered will be posted to G/L after
entering the transactions.
</paragraph>
<paragraph>
Sample G/L entries:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/99</date>
<debit>
<description>Marketing Expense</description>
<amount>120.00</amount>
</debit>
<credit>
<description>Accounts Receivable - tours</description>
<amount>120.00</amount>
</credit>
<comment>(Credit booking; Marketing done by agent)</comment>
</acct-trx>
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/99</date>
<debit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</debit>
<credit>
<description>Cash - Trust account</description>
<amount>50.00</amount>
</credit>
<comment>(Debit booking; Bounced check)</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="282">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CrDrScreen</ClassName>
		<BaseClassName>BookingArTrxScreen</BaseClassName>
		<ClassDesc>Debit/Credit entry</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>CrDrGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter credit memos and debit memos.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used for entering credit memos and debit memos
into the A/R open item file. A credit memo
is treated exactly like a payment in the A/R system; It reduces
the amount owed by the customer. A debit memo is treated
exactly like a charge in the A/R system; It increases the
amount owed by the customer.
</paragraph>
<paragraph>
For example, the customer did some marketing for you and
instead of being reimbursed, you could credit the amount to a
booking by entering a credit memo. If a customer bounced a
check, a debit memo would be entered.
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Enter the booking number that you want to adjust. The
booking information and the current A/R transactions will
display.
</paragraph>
<paragraph>
The Transaction code (Credit memo or Debit memo)
will automatically be set depending on whether the
amount is a negative (credit) or positive (debit).
Enter the date (defaults to today), G/L number, and the
comment. The G/L number defaults to the account in the control file.
If you want a specific G/L account, you must enter it in the
Form screen (not the grid display). The counter account is always
the Accounts Receivable set in the control screen.
</paragraph>
<paragraph>
All of the transactions entered will be posted to G/L after
entering the transactions.
</paragraph>
<paragraph>
Sample G/L entries:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/99</date>
<debit>
<description>Marketing Expense</description>
<amount>120.00</amount>
</debit>
<credit>
<description>Accounts Receivable - tours</description>
<amount>120.00</amount>
</credit>
<comment>(Credit booking; Marketing done by agent)</comment>
</acct-trx>
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/99</date>
<debit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</debit>
<credit>
<description>Cash - Trust account</description>
<amount>50.00</amount>
</credit>
<comment>(Debit booking; Bounced check)</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CrDrGridScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="283">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CrDrScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields for Screen Record entry</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>CrDrGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="284">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditApproveGridScreen</ClassName>
		<BaseClassName>CreditBaseGridScreen</BaseClassName>
		<ClassDesc>Update the approved credit card charges</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditApproveGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Update the approved credit card charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Click on the "approved" button for each credit card change approved.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="285">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCard</ClassName>
		<BaseClassName>BaseArPay</BaseClassName>
		<ClassDesc>Credit Cards</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CreditCard</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Display and search credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter a credit card ot booking number to display charges for.
    All matching entries will display.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="286">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardCollPost</ClassName>
		<BaseClassName>McoCollPost</BaseClassName>
		<ClassDesc>Enter Credit payments collected from credit card company</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardCollPost</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Post the credit card collections.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program updates the credit card charge status from approved to paid and posts
an entry in the G/L to negate the A/R (credit card) balance.
</paragraph>
<paragraph>For example, the G/L entry for a batch of credit cards might be:</paragraph>
<acct-trx>
<date>6/21/99</date>
<debit>
  <description>Suspense - Credit cards</description>
  <amount>1400.00</amount>
</debit>
<debit>
  <description>Accounts Receivable - Mastercard</description>
  <amount>1432.00</amount>
</debit>
<credit>
  <description>Credit card Variance</description>
  <amount>32.00</amount>
</credit>
</acct-trx>
<paragraph>
    Remember to Credit the Suspense account (not the A/R  MCO account) when you deposit the
    check in the Asset Debt system.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="288">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Credit Cards</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display and search credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter a credit card ot booking number to display charges for.
    All matching entries will display.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CreditCard</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="289">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Credit Cards</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display and search credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter a credit card ot booking number to display charges for.
    All matching entries will display.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CreditCard</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="290">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardPost</ClassName>
		<BaseClassName>McoPost</BaseClassName>
		<ClassDesc>Post the new credit card batch</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardPost</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Post the credit card batch and post the G/L entries.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    To post credit cards to A/R, you must supply the system with the proper A/R
    account for the credit cards receivable (Defaults to the account in the
    control file). This account is the amount of credit cards collected but
    not yet received from the carriers.
</paragraph>
<paragraph>
    The A/R account that is credited is the one that is listed
    in the credit card record.
</paragraph>
<paragraph>
    If you make a mistake on an credit card and then post it, then you
    will have to run the submission report for the erroneous credit card
    and then credit the A/R account (and the booking) in credit
    entry.
</paragraph>
<paragraph>
    For example, the G/L entry for a batch of Credit cards might be:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/02</date>
<debit>
  <description>Accounts Receivable - Credit cards</description>
  <amount>1432.00</amount>
</debit>
<credit>
  <description>Accounts Receivable - tours (Ar Trx)</description>
  <amount>1432.00</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="291">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardEntryScreen</ClassName>
		<BaseClassName>McoEntryScreen</BaseClassName>
		<ClassDesc>Credit Card File</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardEntryScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter/change credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
  First, enter or lookup the booking number.
  If this credit card should be distributed to multiple
  bookings, you may press the
  <help-button>
    <link>record=CreditCardBatchDist</link>
    <image>Detail</image>
    <name>Distribution</name>
    <description>Distribution</description>
  </help-button>
  button.
</paragraph>
<paragraph>
  For each credit card received, you may enter the credit card number,
  card type, and amount.
</paragraph>
<paragraph>
  To Post the credit cards to the G/L, click on the
  <help-button>
    <link>screen=CreditCardPost</link>
    <image>Post</image>
    <description>Post (Credit card Posting)</description>
  </help-button>
  button
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="292">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCollectGridScreen</ClassName>
		<BaseClassName>CreditBaseGridScreen</BaseClassName>
		<ClassDesc>Enter amount collected from credit card company</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCollectGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter the amount actually collected for each credit card.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the card company that the payment is for.
</paragraph>
<paragraph>
    The credit card charges will default in the order submitted to
    the carrier.
</paragraph>
<paragraph>
    Enter the actual amount received for each charge.
</paragraph>
<paragraph>
    To Post the credit card charges to the G/L, click on the
	<help-button>
      <link>screen=CreditCardCollPost</link>
	  <image>Post</image>
	  <description>Post (Mco Posting)</description>
    </help-button>
    button
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="293">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCollectScreen</ClassName>
		<BaseClassName>CreditBaseScreen</BaseClassName>
		<ClassDesc>Enter amount collected from credit card company</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCollectGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter the amount actually collected for each credit card.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the card company that the payment is for.
</paragraph>
<paragraph>
    The credit card charges will default in the order submitted to
    the carrier.
</paragraph>
<paragraph>
    Enter the actual amount received for each charge.
</paragraph>
<paragraph>
    To Post the credit card charges to the G/L, click on the
	<help-button>
      <link>screen=CreditCardCollPost</link>
	  <image>Post</image>
	  <description>Post (Mco Posting)</description>
    </help-button>
    button
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CreditCollectGridScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="294">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditMemoScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Credit memos</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.drcr</ClassPackage>
		<ClassSourceFile>CreditMemoScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Credit memo entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A credit memo is a credit towards a vendor's account.
The system treats it like an invoice.
Credit memos are used to increase the amount owed to a
vendor. For example, a check is lost in transit. Enter a
credit memo and re-enter the payment.
</paragraph>
<paragraph>
    Enter the vendor number that the credit will be
    applied toward. Enter the tour number if this cost can be
    assigned to a tour.
    Also, enter a short description of the credit, and the
    credit amount. The credit amount immediatedly is added to the
    vendor's open balance. It is also selected for full
    payment.
</paragraph>
<paragraph>
    Next, enter the G/L account that this cost will be charged
    to (debited). This defaults to the G/L account in the vendor
    record. Then enter the A/P account the credit will be applied
    to. This default to the non-tour G/L acct.
</paragraph>
<paragraph>
    This program can also be used to adjust or delete a credit
    memo. The memo can't be adjusted or deleted after the G/L
    update has been done.
</paragraph>
<paragraph>
    The credit memo is posted to the G/L on the entry date. If
    an accrual has to be done, it must be done in the G/L system.
    The amount is converted to US Dollars at the current rate and
    is treated the same as an invoice when payment is made.
</paragraph>
<paragraph>
    <bold>Note:</bold> Internally, a credit memo is treated as an invoice. To
    clear the credit memo from the vendor's account, just include
    it in a check request or distribute a prepayment to it.
</paragraph>
<paragraph>
    A G/L transaction is created for credit memos. For
    example:
</paragraph>
<acct-trx>
<date>4/15/03</date>
<debit>
  <description>Printing Expense</description>
  <amount>1200.00</amount>
</debit>
<credit>
  <description>Accounts Payable - Non - Tour</description>
  <amount>1200.00</amount>
</credit>
<comment>(Printed 1500 brochures)</comment>
</acct-trx>
<paragraph><bold>Remember</bold>: A Credit memo is usually in the form of a DEBIT
    memo from a vendor. Just remember, for a credit memo, the
    vendor is owed the amount of the credit.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="295">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditSubmitGridScreen</ClassName>
		<BaseClassName>CreditBaseGridScreen</BaseClassName>
		<ClassDesc>Submit each card to the credit card company</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditSubmitGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Process a group of credit card charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    First enter the card to submit the credit cards to. Then
    enter the service change (if applicable). 
</paragraph>
<paragraph>
    The program will automatically update the status of the credit cards
    to "Submitted" when you confirm the print-out.
</paragraph>
<paragraph>
    A G/L entry doesn't have to be made, because the adjustment
    to A/R was made already in the credit card entry program.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="296">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Cruise</ClassName>
		<BaseClassName>TransportProduct</BaseClassName>
		<ClassDesc>Cruise</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>Cruise</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Cruise information maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Cruise product maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Cruise information.
Use the maintenance screen to add and change cruises.
Use the display screen to view all the cruises.
Enter a rate type, class and date to display cruise pricing.
Checking the "Remote lookup?" box will retrieve cruise prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering a cruise, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>

<paragraph>
There are several detail screens for a cruise:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=CruisePricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="298">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyReqFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Currency Requirements Report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.curreq</ClassPackage>
		<ClassSourceFile>CurrencyReqReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="299">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyReqHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Currency Requirements Report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.curreq</ClassPackage>
		<ClassSourceFile>CurrencyReqReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="300">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyReqReport</ClassName>
		<BaseClassName>AnalysisScreen</BaseClassName>
		<ClassDesc>Currency Requirements Report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.curreq</ClassPackage>
		<ClassSourceFile>CurrencyReqReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the currency requirements planning report.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program  estimates how much of each currency will be
required to pay vendors in the future.
</paragraph>
<paragraph>
Enter the ranges of dates that you would like to like to
classify the currency requirements. Then enter the length of
the periods to classify (ie., 7 = forcast for each week into
the future).
</paragraph>
<paragraph>
Open items are analyzed as follows:
<item-list><item>
Estimate total for departure estimates</item><item>
Invoice balance for invoices, credit invoices, debit memos, prepayments, and credit memos.
</item><item>The total is the estimate or invoice amount</item>
<item>The total is also converted to local currency at the last exchange rate.</item>
</item-list>
</paragraph>
<paragraph>
<bold>Note:</bold> This program takes a considerable amount of time to
run. It should be run during a non-critical time.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="301">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyReqScreenRecord</ClassName>
		<BaseClassName>ApReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.curreq</ClassPackage>
		<ClassSourceFile>CurrencyReqReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="302">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyReqToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Currency Requirements Report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.curreq</ClassPackage>
		<ClassSourceFile>CurrencyReqReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="303">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Currencys</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Currencies</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Currencys</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Foreign currency maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a currency code to display currency information.
</paragraph>
<paragraph>
The last exchange rate is the rate used by the A/P system for
departure estimates.<br/>
The costing exchange rate is used in
estimating costs for FITs.<br/>
 The round at position tells the system
how many decimal points are used in the currency.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="304">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencysField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Currency ID</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Currencys</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="305">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencysGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Currencies</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>CurrencysGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Foreign currency maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a currency code to display currency information.
</paragraph>
<paragraph>
The last exchange rate is the rate used by the A/P system for
departure estimates.<br/>
The costing exchange rate is used in
estimating costs for FITs.<br/>
 The round at position tells the system
how many decimal points are used in the currency.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Currencys</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="306">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencysScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Currencies</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>CurrencysScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Foreign currency maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a currency code to display currency information.
</paragraph>
<paragraph>
The last exchange rate is the rate used by the A/P system for
departure estimates.<br/>
The costing exchange rate is used in
estimating costs for FITs.<br/>
 The round at position tells the system
how many decimal points are used in the currency.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Currencys</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="307">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrentUserHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Current Employee</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="308">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CustSale</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Customer Sale Base File Class</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>order</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="309">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CustSaleCustNo</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Customer number</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CustSaleCustNo</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="310">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetail</ClassName>
		<BaseClassName>BookingSub</BaseClassName>
		<ClassDesc>Customer Sale Detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking product detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Most of the booking product detail screens share the following fields:
</paragraph>
<item-list>
<item><bold>Total cost</bold> - The total cost of this product in the product and booking currency.</item>
<item><bold>Status</bold> - The overall product status (If the product item is flashing, the information, inventory, cost, or product status are not set)</item>
<item><bold>Info. status</bold> - The status of the information retrieved from the product (ie., vendor, currency, etc).</item>
<item><bold>Inv. status</bold> - The product availability status.</item>
<item><bold>Cost status</bold> - The status of the cost retrieved from the product.</item>
<item><bold>Order status</bold> - The product order status.</item> 
<item><bold>Wait for ack</bold> - The number of days to wait for an order response before flagging the order in the <help-link>
<name>Tour Order Status</name>
<link>record=TourOrderStatus</link>
</help-link> report.</item> 
<item><bold>Markup fm last</bold> - If the current year's prices are not available, the cost will be calculated by marking up last year's cost by this amount.</item> 
</item-list>
<paragraph>
Most of the product detail status process messages in the same way:<br/>
If the information can be retrieved automatically (such as direct lookup, local message, or Web Services) the message will be immediately sent to the vendor.<br/>
If the information has to be processed manually by the vendor (such as email, etc) the message will not be sent until you press the status button.<br/>
If the status has changed manually (such as a phone call to the res center) you will have to change the transport method to "manual" and then change the status on the screen.<br/>
If the status is showing "error" or "data required" just press the message button to display the actual error in the status bar at the bottom of the screen.<br/>
For a description of each message transport type, see the <help-link>
<name>Message Transport</name>
<link>record=MessageTransport</link>
<image>Help</image>
</help-link> information. For a description of the status, see the <help-link>
<name>Base Message Status</name>
<link>record=BaseMessageStatus</link>
<image>Help</image>
</help-link> information.
</paragraph>
<item-list>
<item><bold>Product Information</bold>- When enough information exists to retrieve the product information (usually just the product and a date), the detail product is created from the product information and the tour information. Information such as rate type and product class are filled in here.</item>
<item><bold>Product Cost and Pricing Information</bold> - Once enough information is available to retrieve a cost (Usually date, rate type, and rate class), the product cost is retrieved. The method of contacting the product's vendor is retrieved from the first non-blank message type in this hierarchy: Product Record -&gt; Product Control File -&gt; Vendor Record -&gt; Vendor control file. The instruction for sending this message (and receiving a response) are retrieved from first non-blank entry in the same hierarchy.<br/>
The Cost status will change to "in-process" until a response has been received. Clicking on the "Manual Cost" checkbox will change the status to "Okay" and enable the cost fields so you can manually enter the cost.</item>
<item><bold>Product Inventory Information</bold> - </item>
<item><bold>Product Sales Information</bold> - </item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="312">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingSub</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Customer Sale Sub-File</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingSub</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="316">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DaysOfWeekField</ClassName>
		<BaseClassName>ShortField</BaseClassName>
		<ClassDesc><![CDATA[Days of week - Each bit represents a day of the week.
0 = Sunday, etc.
If the bit is ZERO (0) then the day is valid.
If this field is null, all days are valid.
]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>DaysOfWeekField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="317">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>Product detail display</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.detail</ClassPackage>
		<ClassSourceFile>BookingDetailGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Product detail display</ClassExplain>
		<ClassHelp type="XML"><paragraph>This screen displays all the Product detail in date order.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="318">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DebitMemoScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Debit memos</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.drcr</ClassPackage>
		<ClassSourceFile>DebitMemoScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Debit memo entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A debit memo is a charge against a vendor's account (Debit
A/P). It is treated just like an prepayment.
The major difference is that a check doesn't have
to be printed to affect the vendor's account balance. 
For example, you pay a tour
operator in merchandise, instead of cash. The amount which the
vendor values the merchandise is the amount of the debit
memo.
A frequent use for debit memo entry is to correct errors in
estimates or invoices after they have been posted to A/P.
</paragraph>
<paragraph>
Enter the Vendor, the Debit Description, and
amount. If the debit memo is in a currency other than U.S.
dollars, then you will be asked for the USD amount. This is the
amount posted to the General Ledger. Next, enter the A/P number
to debit (Defaults to Vendor's default) and the account to
Credit (defaults to the prepayment default).
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a negative amount against a tour, use invoice
entry and type a negative amount (For a credit invoice).
</paragraph>
<paragraph>
<bold>Note:</bold> Internally, debit memos are treated the same as
prepayments. You must use the prepayment distribution program
to distribute the amounts to specific invoices.
</paragraph>
<paragraph>
G/L entries are created automatically:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/03</date>
<debit>
<description>Prepayment for services (Debit memo)</description>
<amount>500.00</amount>
</debit>
<credit>
<description>Flight bag expense (decrease)</description>
<amount>500.00</amount>
</credit>
<comment>(Gave flight bags to tour operator)</comment>
</acct-trx>
</paragraph>
<paragraph>
This program is also used to fix estimates and invoices
after they have been posted to A/P. You can zero out the
incorrect invoice by distributing a debit memo to it.
</paragraph>
<paragraph>
For example, say you enter a departure estimate for 910.00
rather than 190.00 and you didn't catch it on the edit list. To
fix it, enter a fake invoice for the 910.00, enter a debit memo
for 910.00 and then distribute the debit memo to the invoice to
cancel it out. Go back and enter the correct departure
estimate. (Usually you wouldn't go through all this trouble for
an estimate. You would only do it for an incorrect invoice)
</paragraph>
<paragraph>
The entry from the debit memo posting would be:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/03</date>
<debit>
<description>Accounts Payable - Tours</description>
<amount>910.00</amount>
</debit>
<credit>
<description>Cost of Tours</description>
<amount>910.00</amount>
</credit>
<comment>(Reverse incorrect entry)</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="319">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DebitMemoScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.drcr</ClassPackage>
		<ClassSourceFile>DebitMemoScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="320">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DeductionField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>D/E Code Lookup</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Deduction</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="321">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Deduction</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Deduction and Earning Codes</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Deduction</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Deduction maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the Payroll Deduction and Earnings information.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="322">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DeductionScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Deduction and Earning Codes</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>DeductionScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Deduction maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the Payroll Deduction and Earnings information.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Deduction</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="323">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Department</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Departments</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Department</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Department maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Employee Department maintenance.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="324">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DepartmentScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Departments</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>DepartmentScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Department maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Employee Department maintenance.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Department</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="326">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DepEstHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Make sure this is a Fin Est or Manual Dep Est, and change to Dep Est</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.findepest</ClassPackage>
		<ClassSourceFile>DepEstScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="327">
		<LastChanged>2013-01-22T05:45:18</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DepEstScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Departure estimates</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.findepest</ClassPackage>
		<ClassSourceFile>DepEstScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Departure estimate entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A Departure estimate is the cost of a tour on the departure date of a
tour.
</paragraph>
<paragraph>
This program is rarely used. Departure estimates
are automatically created for each vendor at the tour finalization date.
</paragraph>
<paragraph>
<bold>Note:</bold> Departure estimates do not have to be entered on
the departure date. The system will automatically post the
entry on the departure date.<br/>
<bold>Note:</bold> If there is a difference in the cost of a tour at the invoice or payment date,
the (typically immaterial) amount will be recoginized then.
</paragraph>
<paragraph>
The G/L entry is posted automatically. For example:
</paragraph>
<acct-trx>
<date>5/12/08</date>
<debit>
<description>Cost of Tours - Group Series</description>
<amount>925.00</amount>
</debit>
<credit>
<description>Accounts Payable - Tours - Estimate</description>
<amount>925.00</amount>
</credit>
<comment>(Departure date estimate)</comment>
</acct-trx>
<paragraph>
<bold>Remember:</bold> Manually entered departure estimates will
override the computer generated estimates. This means that once
you enter a manual departure estimate, the computer will NOT generate or modify the
estimate.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="328">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DeprTypeField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Depreciation Type</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>DeprTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="329">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DedEarnTypeField</ClassName>
		<BaseClassName>ShortField</BaseClassName>
		<ClassDesc>Deduction/Earnings Type</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>DedEarnTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="330">
		<LastChanged>2012-04-12T21:07:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DisplayTypeField</ClassName>
		<BaseClassName>ShortField</BaseClassName>
		<ClassDesc>Type of display</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>DisplayTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="334">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Document</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Documents detail</ClassDesc>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>Document</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile documents.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the documents that belong to this profile.
<br/>Documents include passports, visas, etc.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="337">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DrCrField</ClassName>
		<BaseClassName>CurrencyField</BaseClassName>
		<ClassDesc>Debit/Credit Field</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>DrCrField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="338">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EAddressType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Electronic address type</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>EAddressType</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Electronic address type maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Electronic address types based on the 
<img src="images/buttons/URL.gif"/><html><a href="http://www.opentravel.org">Open Travel</a></html>
specification.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="340">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Employee</ClassName>
		<BaseClassName>Person</BaseClassName>
		<ClassDesc>Employees</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Employee maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter and change employee information.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="341">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeBuiltin</ClassName>
		<BaseClassName>EmployeeQuery</BaseClassName>
		<ClassDesc>Built-in Query</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="342">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc>Employee Control File</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>EmployeeControl</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Employee control file mainteance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Control values for the payroll system.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="343">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Employee popup</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="344">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Employees</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Employee maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter and change employee information.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Employee</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="345">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeLookup</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Current Employees</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="346">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeQuery</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Employee Manual Query</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="347">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Employees</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Employee maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter and change employee information.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Employee</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="348">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="349">
		<LastChanged>2011-08-05T15:59:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeStatus</ClassName>
		<BaseClassName>Employee</BaseClassName>
		<ClassDesc>Sub-Selection of Employee</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="350">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmpMaintScreenBeh</ClassName>
		<BaseClassName>SwitchSubScreenHandler</BaseClassName>
		<ClassDesc>Employee Maintenance</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmpMaintScreenBeh</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="352">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Extension</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Profile extensions</ClassDesc>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>Extension</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile specific information.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the extensions that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="354">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FedRadioConverter</ClassName>
		<BaseClassName>RadioConverter</BaseClassName>
		<ClassDesc>Radio Converter</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.tax</ClassPackage>
		<ClassSourceFile>FedRadioConverter</ClassSourceFile>
		<ClassType>ScreenField</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="370">
		<LastChanged>2012-04-02T08:20:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmt</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Financial Statement</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>FinStmt</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Financial Statements setup</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    The sequence number determines the order in which the
    statements are evaluated. This is important if the later
    statements contain data from earlier statements. 
</paragraph>
<paragraph>
    Next, enter the description of the statement.
</paragraph>
<paragraph>
    If the statement is an Income Statement or Balance sheet,
    select the appropriate Statement type, otherwise leave the
    statement type blank.
</paragraph>
<paragraph>
    There are two possible statement formats; a three column
    format or a single column and a ratio.
</paragraph>
<paragraph>
    Select the value that you want in the statement, either the
    Net change in the period (ie., Income Statement) or the To-date
    balance (ie., Balance Sheet).
</paragraph>
<paragraph>
    The 
    <help-button>
    <image>Go</image>
    <name>Validate</name>
    </help-button>
    button checks the Financial Statements to make
    sure all of the accounts are contained in the Financial
    Statements. If an account is missing, it is added to the
    end of the last statement. It is a good idea to press
    this button every once in a while to make sure all the accounts
    are included.
</paragraph>
<paragraph>
    The statements might contain an Income Statement, Statement
    of Retained Earnings, and a Balance Sheet. Or it might only
    contain a Statement of Changes in Financial Position.
</paragraph>
<paragraph>
    To see the statement detail click the
    <help-button>
    <image>Detail</image>
    <link>record=FinStmtDetail</link>
    <description>Statement Detail</description>
    </help-button>
    button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="371">
		<LastChanged>2012-04-02T08:21:19</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Financial Statement Detail</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>This program is used to format the Financial Statements.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These are the fields you can change on this screen:<br/>
<item-list>
<item>The sequence number. This determines the ordering of this item on the financial statement.</item>
<item>The G/L account number. This is not mandatory, you can leave this line blank and enter text to appear on the financial statement.</item>
<item>The Description. This field defaults to the description in the chart of accounts, but you may change it to a description which is more appropiate for a financial statement. If you don't want the description to display, you will have to check the "invisible" check mark.</item>
<item>Indent. Enter a number, up to three to determine the amount this description is indented.</item>
<item>Invisible. If this field is set to Yes, this field will not display. The amount will be added to the subsequent field.</item>
<item>Parenthesis control. If the amount is not this balance, a parenthesis will be around the amount in the statement.</item>
<item>Sub-total Level. Total all amount of this level or smaller. 9 is the highest sub-total level. (For example, if you do a level 3 sub-total all amount up to the last level 3 subtotal will be aggregated and level 1,2, and 3 subtotals will be reset). Remember that sub-totals span all the statements, so for example, the income amount can be moved to the retained earnings statement by using sub-totals.</item>
<item>Column. For multi-column formats, this field specifies the column to have this amount appear. (3 columns maximum)</item>
<item>Special. Special XML Tag to place around this amount. (Typically an XSL-FO style). Special formats come from the
<help-button>
<name>Special Format</name>
<link>record=SpecialFormat</link>
<image>Form</image>
</help-button> screen.</item> 
<item>The statement. You can switch an account to another statement by changing this field.</item>
<item>Number formats come from the
<help-button>
<name>Number Format</name>
<link>record=NumberFormat</link>
<image>Form</image>
</help-button> screen.
</item><item>Special functions come from the
<help-button>
<name>Special Functions</name>
<link>record=SpecialFunction</link>
<image>Form</image>
</help-button> screen.</item>
</item-list>
</paragraph>
<paragraph>
The <help-button>
<name>Renumber</name>
<image>Go</image>
</help-button> button is used to renumber
the sequence numbers by 10, so it is easier to add and move around accounts.
</paragraph>
<paragraph>
These are the general capabilities of the statement
formatting program:
</paragraph>
<paragraph>
<item-list>
<item>Add detail accounts together to arrive at a sub-total
account (whether profit center accounts or sub-accounts)
(also consolidate accounts into a postable or fake
account)</item>
<item>Sub-totals at any level (up to grand total)</item>
<item>Move profit/loss from Income Statement to Balance
Sheet (through retained earnings report)</item>
<item>Ratios on Income Statement and supporting schedules
(option to include each line in ratio control)</item>
<item>Column control on Balance Sheet</item>
<item>Inventory handling in Income statement (Beginning
&amp; End) and in Balance Sheet (end)</item>
<item>Blank lines</item>
<item>Page feed</item>
<item>Headers</item>
<item>Multiple line headers and text</item>
<item>Statement title format</item>
<item>Underlines &amp; double underlines</item>
</item-list>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="372">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Financial Statement Detail</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt.screen</ClassPackage>
		<ClassSourceFile>FinStmtDetailScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to format the Financial Statements.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These are the fields you can change on this screen:<br/>
<item-list>
<item>The sequence number. This determines the ordering of this item on the financial statement.</item>
<item>The G/L account number. This is not mandatory, you can leave this line blank and enter text to appear on the financial statement.</item>
<item>The Description. This field defaults to the description in the chart of accounts, but you may change it to a description which is more appropiate for a financial statement. If you don't want the description to display, you will have to check the "invisible" check mark.</item>
<item>Indent. Enter a number, up to three to determine the amount this description is indented.</item>
<item>Invisible. If this field is set to Yes, this field will not display. The amount will be added to the subsequent field.</item>
<item>Parenthesis control. If the amount is not this balance, a parenthesis will be around the amount in the statement.</item>
<item>Sub-total Level. Total all amount of this level or smaller. 9 is the highest sub-total level. (For example, if you do a level 3 sub-total all amount up to the last level 3 subtotal will be aggregated and level 1,2, and 3 subtotals will be reset). Remember that sub-totals span all the statements, so for example, the income amount can be moved to the retained earnings statement by using sub-totals.</item>
<item>Column. For multi-column formats, this field specifies the column to have this amount appear. (3 columns maximum)</item>
<item>Special. Special XML Tag to place around this amount. (Typically an XSL-FO style). Special formats come from the
<help-button>
<name>Special Format</name>
<link>record=SpecialFormat</link>
<image>Form</image>
</help-button> screen.</item> 
<item>The statement. You can switch an account to another statement by changing this field.</item>
<item>Number formats come from the
<help-button>
<name>Number Format</name>
<link>record=NumberFormat</link>
<image>Form</image>
</help-button> screen.
</item><item>Special functions come from the
<help-button>
<name>Special Functions</name>
<link>record=SpecialFunction</link>
<image>Form</image>
</help-button> screen.</item>
</item-list>
</paragraph>
<paragraph>
The <help-button>
<name>Renumber</name>
<image>Go</image>
</help-button> button is used to renumber
the sequence numbers by 10, so it is easier to add and move around accounts.
</paragraph>
<paragraph>
These are the general capabilities of the statement
formatting program:
</paragraph>
<paragraph>
<item-list>
<item>Add detail accounts together to arrive at a sub-total
account (whether profit center accounts or sub-accounts)
(also consolidate accounts into a postable or fake
account)</item>
<item>Sub-totals at any level (up to grand total)</item>
<item>Move profit/loss from Income Statement to Balance
Sheet (through retained earnings report)</item>
<item>Ratios on Income Statement and supporting schedules
(option to include each line in ratio control)</item>
<item>Column control on Balance Sheet</item>
<item>Inventory handling in Income statement (Beginning
&amp; End) and in Balance Sheet (end)</item>
<item>Blank lines</item>
<item>Page feed</item>
<item>Headers</item>
<item>Multiple line headers and text</item>
<item>Statement title format</item>
<item>Underlines &amp; double underlines</item>
</item-list>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>FinStmtDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="373">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtDetailScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Financial Statement Detail</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt.screen</ClassPackage>
		<ClassSourceFile>FinStmtDetailScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to format the Financial Statements.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These are the fields you can change on this screen:<br/>
<item-list>
<item>The sequence number. This determines the ordering of this item on the financial statement.</item>
<item>The G/L account number. This is not mandatory, you can leave this line blank and enter text to appear on the financial statement.</item>
<item>The Description. This field defaults to the description in the chart of accounts, but you may change it to a description which is more appropiate for a financial statement. If you don't want the description to display, you will have to check the "invisible" check mark.</item>
<item>Indent. Enter a number, up to three to determine the amount this description is indented.</item>
<item>Invisible. If this field is set to Yes, this field will not display. The amount will be added to the subsequent field.</item>
<item>Parenthesis control. If the amount is not this balance, a parenthesis will be around the amount in the statement.</item>
<item>Sub-total Level. Total all amount of this level or smaller. 9 is the highest sub-total level. (For example, if you do a level 3 sub-total all amount up to the last level 3 subtotal will be aggregated and level 1,2, and 3 subtotals will be reset). Remember that sub-totals span all the statements, so for example, the income amount can be moved to the retained earnings statement by using sub-totals.</item>
<item>Column. For multi-column formats, this field specifies the column to have this amount appear. (3 columns maximum)</item>
<item>Special. Special XML Tag to place around this amount. (Typically an XSL-FO style). Special formats come from the
<help-button>
<name>Special Format</name>
<link>record=SpecialFormat</link>
<image>Form</image>
</help-button> screen.</item> 
<item>The statement. You can switch an account to another statement by changing this field.</item>
<item>Number formats come from the
<help-button>
<name>Number Format</name>
<link>record=NumberFormat</link>
<image>Form</image>
</help-button> screen.
</item><item>Special functions come from the
<help-button>
<name>Special Functions</name>
<link>record=SpecialFunction</link>
<image>Form</image>
</help-button> screen.</item>
</item-list>
</paragraph>
<paragraph>
The <help-button>
<name>Renumber</name>
<image>Go</image>
</help-button> button is used to renumber
the sequence numbers by 10, so it is easier to add and move around accounts.
</paragraph>
<paragraph>
These are the general capabilities of the statement
formatting program:
</paragraph>
<paragraph>
<item-list>
<item>Add detail accounts together to arrive at a sub-total
account (whether profit center accounts or sub-accounts)
(also consolidate accounts into a postable or fake
account)</item>
<item>Sub-totals at any level (up to grand total)</item>
<item>Move profit/loss from Income Statement to Balance
Sheet (through retained earnings report)</item>
<item>Ratios on Income Statement and supporting schedules
(option to include each line in ratio control)</item>
<item>Column control on Balance Sheet</item>
<item>Inventory handling in Income statement (Beginning
&amp; End) and in Balance Sheet (end)</item>
<item>Blank lines</item>
<item>Page feed</item>
<item>Headers</item>
<item>Multiple line headers and text</item>
<item>Statement title format</item>
<item>Underlines &amp; double underlines</item>
</item-list>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>FinStmtDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="374">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="375">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Financial Statement</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt.screen</ClassPackage>
		<ClassSourceFile>FinStmtScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Financial Statements setup</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    The sequence number determines the order in which the
    statements are evaluated. This is important if the later
    statements contain data from earlier statements. 
</paragraph>
<paragraph>
    Next, enter the description of the statement.
</paragraph>
<paragraph>
    If the statement is an Income Statement or Balance sheet,
    select the appropriate Statement type, otherwise leave the
    statement type blank.
</paragraph>
<paragraph>
    There are two possible statement formats; a three column
    format or a single column and a ratio.
</paragraph>
<paragraph>
    Select the value that you want in the statement, either the
    Net change in the period (ie., Income Statement) or the To-date
    balance (ie., Balance Sheet).
</paragraph>
<paragraph>
    The 
    <help-button>
    <image>Go</image>
    <name>Validate</name>
    </help-button>
    button checks the Financial Statements to make
    sure all of the accounts are contained in the Financial
    Statements. If an account is missing, it is added to the
    end of the last statement. It is a good idea to press
    this button every once in a while to make sure all the accounts
    are included.
</paragraph>
<paragraph>
    The statements might contain an Income Statement, Statement
    of Retained Earnings, and a Balance Sheet. Or it might only
    contain a Statement of Changes in Financial Position.
</paragraph>
<paragraph>
    To see the statement detail click the
    <help-button>
    <image>Detail</image>
    <link>record=FinStmtDetail</link>
    <description>Statement Detail</description>
    </help-button>
    button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>FinStmt</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="376">
		<LastChanged>2012-04-02T08:21:09</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtHeader</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Financial Statements</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtHeader</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Financial Statement setup</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a short description for each set of Financial Statements.
</paragraph>
<paragraph>
    A Financial Statements refers to a COMPLETE set of
    statements utilizing ALL of the accounts in the chart of
    accounts. The statements might contain an Income Statement,
    Statement of Retained Earnings, and a Balance Sheet. Or it
    might contain a Statement of Changes in Financial Position.
</paragraph>
<paragraph>
    To see the individual statements contained in a set of
    financial statements select the
    <help-button>
        <image>Detail</image>
        <link>record=tour.genled.FinStmt</link>
        <description>Statements Detail</description>
    </help-button> 
    button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="377">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtHeaderField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtHeaderField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="378">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtHeaderGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Financial Statements</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt.screen</ClassPackage>
		<ClassSourceFile>FinStmtHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Financial Statement setup</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a short description for each set of Financial Statements.
</paragraph>
<paragraph>
    A Financial Statements refers to a COMPLETE set of
    statements utilizing ALL of the accounts in the chart of
    accounts. The statements might contain an Income Statement,
    Statement of Retained Earnings, and a Balance Sheet. Or it
    might contain a Statement of Changes in Financial Position.
</paragraph>
<paragraph>
    To see the individual statements contained in a set of
    financial statements select the
    <help-button>
        <image>Detail</image>
        <link>record=tour.genled.FinStmt</link>
        <description>Statements Detail</description>
    </help-button> 
    button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>FinStmtHeader</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="379">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtHeaderScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Financial Statements</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt.screen</ClassPackage>
		<ClassSourceFile>FinStmtHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Financial Statement setup</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a short description for each set of Financial Statements.
</paragraph>
<paragraph>
    A Financial Statements refers to a COMPLETE set of
    statements utilizing ALL of the accounts in the chart of
    accounts. The statements might contain an Income Statement,
    Statement of Retained Earnings, and a Balance Sheet. Or it
    might contain a Statement of Changes in Financial Position.
</paragraph>
<paragraph>
    To see the individual statements contained in a set of
    financial statements select the
    <help-button>
        <image>Detail</image>
        <link>record=tour.genled.FinStmt</link>
        <description>Statements Detail</description>
    </help-button> 
    button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>FinStmtHeader</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="382">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtReportScreen</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Financial Statements</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtReportScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the Financial Statements</ClassExplain>
		<ClassHelp type="XML"><paragraph>
To print Financial Statments enter:
</paragraph>
<item-list>
<item>The set of statements that you would like to print (this is required).</item>
<item>The specific statement to print (If left blank, all the statements in this header will print).</item>
<item>Whether you would like budgets or comparatives to be included.</item>
<item>The starting and ending statement dates.</item>
<item>The (optional) starting and ending transaction entry dates.</item>
<item>Whether to exclude auto-closing entry (Typically you would exclude them since this program auto-calculates changes in balances as well as ending balances).</item>
<item>An (optional) profit center.</item>
<item>The xsl template you would like to use for this statement.</item>
</item-list>
<paragraph>
Financial statements are set up in 
<help-link>
<name>Financial Statement setup</name>
<description>Financial Statement setup</description>
<link>?record=FinStmtHeader</link>
<image>Form</image>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="383">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtReportScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc>Financial Statement Params</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtReportScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="384">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Financial Statement</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt.screen</ClassPackage>
		<ClassSourceFile>FinStmtScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Financial Statements setup</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    The sequence number determines the order in which the
    statements are evaluated. This is important if the later
    statements contain data from earlier statements. 
</paragraph>
<paragraph>
    Next, enter the description of the statement.
</paragraph>
<paragraph>
    If the statement is an Income Statement or Balance sheet,
    select the appropriate Statement type, otherwise leave the
    statement type blank.
</paragraph>
<paragraph>
    There are two possible statement formats; a three column
    format or a single column and a ratio.
</paragraph>
<paragraph>
    Select the value that you want in the statement, either the
    Net change in the period (ie., Income Statement) or the To-date
    balance (ie., Balance Sheet).
</paragraph>
<paragraph>
    The 
    <help-button>
    <image>Go</image>
    <name>Validate</name>
    </help-button>
    button checks the Financial Statements to make
    sure all of the accounts are contained in the Financial
    Statements. If an account is missing, it is added to the
    end of the last statement. It is a good idea to press
    this button every once in a while to make sure all the accounts
    are included.
</paragraph>
<paragraph>
    The statements might contain an Income Statement, Statement
    of Retained Earnings, and a Balance Sheet. Or it might only
    contain a Statement of Changes in Financial Position.
</paragraph>
<paragraph>
    To see the statement detail click the
    <help-button>
    <image>Detail</image>
    <link>record=FinStmtDetail</link>
    <description>Statement Detail</description>
    </help-button>
    button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>FinStmt</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="385">
		<LastChanged>2012-03-31T22:20:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Params for the Financial Statement reports</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtToolbar</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="386">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Air</ClassName>
		<BaseClassName>TransportProduct</BaseClassName>
		<ClassDesc>Flights</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>Air</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Flight information file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This information is used for flight displays in booking
entry and flight information defaults in flight entry.
</paragraph>
<paragraph>
Use these screens to display and maintain the Air flight information.
Use the maintenance screen to add and change flights.
Use the display screen to view all the flights.
Enter a rate type, class and date to display air pricing.
Checking the "Remote lookup?" box will retrieve air prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
There are several detail screens for air:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=AirPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="387">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Flight information file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the two letter IATA airline code and the flight number.
Next, enter the flight information in the OAG standard format. 
</paragraph>
<paragraph>
This information is used for flight displays in booking
entry and flight information defaults in flight entry.
</paragraph>
<paragraph>
You have to enter the first four fields to retrieve a flight.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Flight</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="388">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Flight information file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the two letter IATA airline code and the flight number.
Next, enter the flight information in the OAG standard format. 
</paragraph>
<paragraph>
This information is used for flight displays in booking
entry and flight information defaults in flight entry.
</paragraph>
<paragraph>
You have to enter the first four fields to retrieve a flight.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Flight</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="389">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="391">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FMEmployee</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="392">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenderField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Gender (Male or Female)</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>GenderField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="393">
		<LastChanged>2012-03-31T22:21:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenledScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc>Params for General Ledger Print-out</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>GenledScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="394">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenPaymentDetail</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.genpymt</ClassPackage>
		<ClassSourceFile>GenPaymentSelect</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="395">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenPaymentFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.genpymt</ClassPackage>
		<ClassSourceFile>GenPaymentSelect</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="396">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenPaymentHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.genpymt</ClassPackage>
		<ClassSourceFile>GenPaymentSelect</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="397">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenPaymentScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen fields</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.genpymt</ClassPackage>
		<ClassSourceFile>GenPaymentSelect</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="398">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenPaymentSelect</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Generalized payment selection</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.genpymt</ClassPackage>
		<ClassSourceFile>GenPaymentSelect</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Automatic generation of check requests.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Generalized payment selection automates the process of selecting
invoices to pay and creating a check request for a batch of vendors.
</paragraph>
<paragraph>
Select the bank account you would like to generate check requests
for. Then, select the payment code of vendors to select.
</paragraph>
<paragraph>
    If you would like a hard-copy of
    everything that was selected press the print or display button.
    A report will print of the vendors and items to be selected when
    you press the select button.
</paragraph>
<paragraph>
    The system will only request checks for vendors in the
    currency of the bank account selected. If the vendor already
    has a check selected, the amount is changed to the amount of
    the current selection.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="399">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GenPaymentToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.genpymt</ClassPackage>
		<ClassSourceFile>GenPaymentSelect</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="404">
		<LastChanged>2012-04-01T09:50:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TimeTrxScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Query</ClassDesc>
		<ClassProjectID>1,048,622</ClassProjectID>
		<ClassPackage>.report.payroll</ClassPackage>
		<ClassSourceFile>TimeTrxScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="405">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HistoryDisplay</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Brochure History Display</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>RequestHistory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="406">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Hotel</ClassName>
		<BaseClassName>Product</BaseClassName>
		<ClassDesc>Hotel</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>Hotel</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Hotel file maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use these screens to display and maintain the Hotel information. Use the maintenance screen to add and change hotels. Use the display screen to view all the hotels. Enter a rate type, class and date to display hotel pricing. Checking the "Remote lookup?" box will retrieve hotel prices from remote sources.
</paragraph>
<paragraph>
When entering a hotel, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system. If the hotel address is the same as the vendor address, check the "Same as ven?" checkbox.
</paragraph>
<paragraph>
The "Free Room Type" item on the screen refers to the room type that a tour
escort will get when the "No. pax=free" passengers are booked. (Twin share or Single).
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
There are several detail screens for a hotel:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=HotelPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
<item><help-button>
<name>Meal pricing</name>
<image>images/tour/buttons/Meal.gif</image>
<link>record=HotelMealPricing</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="407">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelClass</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Hotel classes</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelClass</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Hotel room classes.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Hotel room classes such as standard, superior, ocean view, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="408">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelClassField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc>Hotel Class ID</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelClass</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="409">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelClassGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Hotel classes</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelClassScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel room classes.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Hotel room classes such as standard, superior, ocean view, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="410">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelClassSelect</ClassName>
		<BaseClassName>HotelClassField</BaseClassName>
		<ClassDesc>Same as HotelClass + Null opt</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelClassSelect</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="411">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelClassScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Hotel classes</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelClassScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel room classes.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Hotel room classes such as standard, superior, ocean view, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="412">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelDetBox</ClassName>
		<BaseClassName>SButtonBox</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelPricing</ClassSourceFile>
		<ClassType>ScreenField</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="413">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc>Hotel Record Reference</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="414">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelFreeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>Hotel</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="415">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc>Hotel</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel file maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use these screens to display and maintain the Hotel information. Use the maintenance screen to add and change hotels. Use the display screen to view all the hotels. Enter a rate type, class and date to display hotel pricing. Checking the "Remote lookup?" box will retrieve hotel prices from remote sources.
</paragraph>
<paragraph>
When entering a hotel, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system. If the hotel address is the same as the vendor address, check the "Same as ven?" checkbox.
</paragraph>
<paragraph>
The "Free Room Type" item on the screen refers to the room type that a tour
escort will get when the "No. pax=free" passengers are booked. (Twin share or Single).
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
There are several detail screens for a hotel:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=HotelPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
<item><help-button>
<name>Meal pricing</name>
<image>images/tour/buttons/Meal.gif</image>
<link>record=HotelMealPricing</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Hotel</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="416">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelInventoryGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="417">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelList</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>For Product display</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>Hotel</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="418">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelMealPricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc>Hotel meal pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelMealPricing</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Hotel meal pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to keep track of the hotel meal costs.
</paragraph>
<paragraph>
Enter the meal code (any valid 2 character code will word), the
date range, category, and cost. All of the valid meals will be
displayed in FIT hotel entry.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="419">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelMealPricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc>Hotel meal pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelMealPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel meal pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to keep track of the hotel meal costs.
</paragraph>
<paragraph>
Enter the meal code (any valid 2 character code will word), the
date range, category, and cost. All of the valid meals will be
displayed in FIT hotel entry.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelMealPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="420">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelMealPricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc>Hotel meal pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelMealPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel meal pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to keep track of the hotel meal costs.
</paragraph>
<paragraph>
Enter the meal code (any valid 2 character code will word), the
date range, category, and cost. All of the valid meals will be
displayed in FIT hotel entry.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelMealPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="422">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelPricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc>Hotel pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelPricing</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Hotel pricing maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to maintain the hotel cost and pricing information.
</paragraph>
<paragraph>
Enter a hotel code a the prompt, and the current hotel prices
will display.
</paragraph>
<paragraph>
If a hotel rate/class cost is exactly the same as another cost,
leave all the information blank, except the date range and the
"Use R/C" column. Enter the rate/class of the rate which is
exactly the same.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="423">
		<LastChanged>2011-08-05T15:59:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelPricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc>Hotel pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel pricing maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to maintain the hotel cost and pricing information.
</paragraph>
<paragraph>
Enter a hotel code a the prompt, and the current hotel prices
will display.
</paragraph>
<paragraph>
If a hotel rate/class cost is exactly the same as another cost,
leave all the information blank, except the date range and the
"Use R/C" column. Enter the rate/class of the rate which is
exactly the same.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="424">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelHeaderScreen</ClassName>
		<BaseClassName>ProductHeaderScreen</BaseClassName>
		<ClassDesc>Hotel Room Pricing Maintenance</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This screen is used to maintain the hotel room prices.</ClassExplain>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="425">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelPricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc>Hotel pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel pricing maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to maintain the hotel cost and pricing information.
</paragraph>
<paragraph>
Enter a hotel code a the prompt, and the current hotel prices
will display.
</paragraph>
<paragraph>
If a hotel rate/class cost is exactly the same as another cost,
leave all the information blank, except the date range and the
"Use R/C" column. Enter the rate/class of the rate which is
exactly the same.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="426">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc>Hotel Pricing Grid Screen Search Params</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="427">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRate</ClassName>
		<BaseClassName>BaseRate</BaseClassName>
		<ClassDesc>Hotel rate type</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelRate</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Hotel pricing rate type</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Hotel pricing rate type such as Rack rate, Ad hoc group rate, Interline rate, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="428">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateField</ClassName>
		<BaseClassName>BaseRateField</BaseClassName>
		<ClassDesc>Hotel Rates</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelRateField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="429">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Hotel rate type</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelRateGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel pricing rate type</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Hotel pricing rate type such as Rack rate, Ad hoc group rate, Interline rate, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="430">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateSelect</ClassName>
		<BaseClassName>HotelRateField</BaseClassName>
		<ClassDesc>Same as Hotel Rate + Null opt</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelRate</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="432">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Hotel rate type</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelRateScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel pricing rate type</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Hotel pricing rate type such as Rack rate, Ad hoc group rate, Interline rate, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>HotelRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="433">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc>Hotel</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Hotel file maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use these screens to display and maintain the Hotel information. Use the maintenance screen to add and change hotels. Use the display screen to view all the hotels. Enter a rate type, class and date to display hotel pricing. Checking the "Remote lookup?" box will retrieve hotel prices from remote sources.
</paragraph>
<paragraph>
When entering a hotel, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system. If the hotel address is the same as the vendor address, check the "Same as ven?" checkbox.
</paragraph>
<paragraph>
The "Free Room Type" item on the screen refers to the room type that a tour
escort will get when the "No. pax=free" passengers are booked. (Twin share or Single).
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
There are several detail screens for a hotel:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=HotelPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
<item><help-button>
<name>Meal pricing</name>
<image>images/tour/buttons/Meal.gif</image>
<link>record=HotelMealPricing</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Hotel</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="437">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InitBookingDetailHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Init fields in cust detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>InitBookingDetailHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="438">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InitUserIDHandler</ClassName>
		<BaseClassName>CurrentUserHandler</BaseClassName>
		<ClassDesc>Init this field to the user ID</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="440">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Interest</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Travel interest detail</ClassDesc>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>Interest</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile travel interest list.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the travel interests that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="441">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Inventory</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>Inventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="442">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryStatus</ClassName>
		<BaseClassName>BaseDataStatus</BaseClassName>
		<ClassDesc>Inventory status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>InventoryStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Inventory status in the Booking Detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Inventory status in the Booking Detail.<br/>
For a description of the status messages, see the <help-link>
<name>Base Message Status</name>
<link>record=BaseMessageStatus</link>
<image>Help</image> 
</help-link> description.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="443">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryStatusField</ClassName>
		<BaseClassName>BaseDataStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>InventoryStatus</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="444">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InvoiceAcctHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>If there is no tour, set the default A/P Account and Cost account</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.invoice</ClassPackage>
		<ClassSourceFile>InvoiceScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="447">
		<LastChanged>2013-01-22T05:45:36</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InvoiceScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Invoice entry</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.invoice</ClassPackage>
		<ClassSourceFile>InvoiceScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter invoices from Vendors</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter invoices from vendors. 
You typically will select estimates from the vendor estimate display.
You may also enter or change a manual invoice here.
</paragraph>
<paragraph>
Enter the Vendor, tour (optional), Invoice number, date and amount
for each invoice. The A/P and cost accounts are only for non-tour
invoices.
</paragraph>
<paragraph>
All of the invoices entered are automatically selected for
payment, so creating the check in
<help-button>
<name>Payment Selection</name>
<link>screen=GenPaymentSelect</link>
<image>Form</image>
</help-button>
will be simple.
</paragraph>
<paragraph>
If the invoice amount is different from the departure estimated
a gain or loss will be recognized.
</paragraph>
<paragraph>
<bold>Note:</bold> This system should be used to enter all costs directly
related to a tour. For example, Tour director checks should be entered here,
then a check should be requested in this system, rather than entering the
check in Asset/Debt maintenance.
</paragraph>
<paragraph>
<bold>Note:</bold> Also remember that invoices are posted to the General Ledger on the Invoice date.
If you have material cost for a tour, enter it in the
<help-button>
<name>Departure estimate</name>
<link>?screen=DepEstScreen</link>
<image>Form</image>
</help-button> screen, so the cost will be posted on the tour departure date.
</paragraph>
<paragraph>
Sample G/L entries:
</paragraph>
<paragraph>
<acct-trx>
<date>2/12/08</date>
<debit>
<description>Accounts Payable - Tours (Estimate)</description>
<amount>925.00</amount>
</debit>
<credit>
<description>Over/Under estimate of tour cost</description>
<amount>5.00</amount>
</credit>
<credit>
<description>Accounts Payable - Tours</description>
<amount>920.00</amount>
</credit>
<comment>(Hyatt invoice - M/M Jones)</comment>
</acct-trx>
</paragraph>
<paragraph>
<acct-trx>
<date>2/12/08</date>
<debit>
<description>Mailing Cost</description>
<amount>234.12</amount>
</debit>
<credit>
<description>Accounts Payable</description>
<amount>234.12</amount>
</credit>
<comment>(Mailing Cost)</comment>
</acct-trx>
</paragraph>
<paragraph><bold>Note:</bold> If you enter a negative amount a credit invoice will be created. A credit invoice is typically used to cancel out an invoice. Credit invoices are distributed to invoices in the
<help-link>
<description>prepayment distribution</description>
<link>screen=PrepaymentDistScreen</link>
<image>Form</image>
</help-link>
screen.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="448">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InvoiceScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Fields for the Invoice Screen</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.invoice</ClassPackage>
		<ClassSourceFile>InvoiceScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="449">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Brochure</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Brochures</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.shared</ClassPackage>
		<ClassSourceFile>Brochure</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Brochure maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter and maintain descriptions for each brochure.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="450">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrochureField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Brochure Popup Field</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.shared</ClassPackage>
		<ClassSourceFile>Brochure</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="451">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Job</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Jobs/Tours</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>order</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="457">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Land</ClassName>
		<BaseClassName>Product</BaseClassName>
		<ClassDesc>Land</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>Land</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Land information maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use these screens to display and maintain the Land information.<br/>
Use the maintenance screen to add and change land items.
Use the display screen to view all the land items.
Enter the number of passengers and a date to display land pricing.
Checking the "Remote lookup?" box will retrieve land prices from remote sources.
</paragraph>
<paragraph>
When entering land, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
Remember to enter the XML for the itinerary description. This description is used to build an itinerary in booking entry.
</paragraph>
<paragraph>
There are several detail screens for land:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=LandPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="458">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandDetBox</ClassName>
		<BaseClassName>SButtonBox</BaseClassName>
		<ClassDesc>Land Detail Maint Button</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandPricing</ClassSourceFile>
		<ClassType>ScreenField</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="459">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc>Land</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Land information maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use these screens to display and maintain the Land information.<br/>
Use the maintenance screen to add and change land items.
Use the display screen to view all the land items.
Enter the number of passengers and a date to display land pricing.
Checking the "Remote lookup?" box will retrieve land prices from remote sources.
</paragraph>
<paragraph>
When entering land, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
Remember to enter the XML for the itinerary description. This description is used to build an itinerary in booking entry.
</paragraph>
<paragraph>
There are several detail screens for land:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=LandPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Land</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="460">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandInventoryGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="461">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandList</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Used for Product display</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>Land</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="463">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandPricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc>Land pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandPricing</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Land pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter and maintain land cost information.
</paragraph>
<paragraph>
Leave the rate and/or class blank if they are not applicable.
</paragraph>
<paragraph>
There are two possible classes, <bold>Seat-in-Car/Seat-in-Motorcoach</bold> or <bold>private vehicle</bold>.
If a SIC price exists, the user will be offered a choice of SIC or Private Car/Coach in FIT Land entry.<br/>
You may enter a passenger category to cost by individual passenger or per room type (ie., single supplement per person, etc...)<br/>
The "<help-link>
<name>Varies by code</name>
<link>record=LandVaries</link>
<image>Help</image>
</help-link>" is used to enter costs or prices that vary by another factor than passenger. Costs can vary by per-person cost, fixed cost to be allocated to all the passengers proportionately, or room cost. If you selected the "manual" version, the user will be prompted for a value before arriving at a cost. (ie., for a per-day cost on a Rent-a-Car, the user would be asked for the number of days in booking entry)
</paragraph>
<paragraph>
<bold>Note:</bold> Remember the answer to a variable question is a two digit
number. If the number requires a larger number use a larger base (For example, miles X 100).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="464">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandPricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc>Land pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Land pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter and maintain land cost information.
</paragraph>
<paragraph>
Leave the rate and/or class blank if they are not applicable.
</paragraph>
<paragraph>
There are two possible classes, <bold>Seat-in-Car/Seat-in-Motorcoach</bold> or <bold>private vehicle</bold>.
If a SIC price exists, the user will be offered a choice of SIC or Private Car/Coach in FIT Land entry.<br/>
You may enter a passenger category to cost by individual passenger or per room type (ie., single supplement per person, etc...)<br/>
The "<help-link>
<name>Varies by code</name>
<link>record=LandVaries</link>
<image>Help</image>
</help-link>" is used to enter costs or prices that vary by another factor than passenger. Costs can vary by per-person cost, fixed cost to be allocated to all the passengers proportionately, or room cost. If you selected the "manual" version, the user will be prompted for a value before arriving at a cost. (ie., for a per-day cost on a Rent-a-Car, the user would be asked for the number of days in booking entry)
</paragraph>
<paragraph>
<bold>Note:</bold> Remember the answer to a variable question is a two digit
number. If the number requires a larger number use a larger base (For example, miles X 100).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>LandPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="465">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandHeaderScreen</ClassName>
		<BaseClassName>ProductHeaderScreen</BaseClassName>
		<ClassDesc>Land Price Maintenance</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="466">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandPricingScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="467">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandPricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc>Land pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Land pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter and maintain land cost information.
</paragraph>
<paragraph>
Leave the rate and/or class blank if they are not applicable.
</paragraph>
<paragraph>
There are two possible classes, <bold>Seat-in-Car/Seat-in-Motorcoach</bold> or <bold>private vehicle</bold>.
If a SIC price exists, the user will be offered a choice of SIC or Private Car/Coach in FIT Land entry.<br/>
You may enter a passenger category to cost by individual passenger or per room type (ie., single supplement per person, etc...)<br/>
The "<help-link>
<name>Varies by code</name>
<link>record=LandVaries</link>
<image>Help</image>
</help-link>" is used to enter costs or prices that vary by another factor than passenger. Costs can vary by per-person cost, fixed cost to be allocated to all the passengers proportionately, or room cost. If you selected the "manual" version, the user will be prompted for a value before arriving at a cost. (ie., for a per-day cost on a Rent-a-Car, the user would be asked for the number of days in booking entry)
</paragraph>
<paragraph>
<bold>Note:</bold> Remember the answer to a variable question is a two digit
number. If the number requires a larger number use a larger base (For example, miles X 100).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>LandPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="468">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc>Land</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Land information maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use these screens to display and maintain the Land information.<br/>
Use the maintenance screen to add and change land items.
Use the display screen to view all the land items.
Enter the number of passengers and a date to display land pricing.
Checking the "Remote lookup?" box will retrieve land prices from remote sources.
</paragraph>
<paragraph>
When entering land, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
Remember to enter the XML for the itinerary description. This description is used to build an itinerary in booking entry.
</paragraph>
<paragraph>
There are several detail screens for land:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=LandPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Land</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="469">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandTypeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc>Type of Land Record</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>Land</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="470">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandVaries</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Land varies codes</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandVaries</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Land varies codes maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The land varies codes are used to specify how each component
of the land cost is calculated. (ie., by passenger, by day, etc.)
</paragraph>
<paragraph>
The Varies by field determines how this field is included in the land cost:
</paragraph>
<item-list>
<item><bold>Per person</bold> - will be included for each passenger</item>
<item><bold>Fixed</bold> - will be added once to the tour cost</item>
<item><bold>Per room</bold> - will be added for each room</item>
</item-list>
<paragraph>
Each of these items also has a version that is manual. This means that the user will be prompted for a quantity before the cost can be determined. This can be useful for example for a per-day or per-mile charge. Remember to select the correct manual cost (ie., per-day-per-passenger).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="471">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandVariesField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Varies Field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandVaries</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="472">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandVariesGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Land varies codes</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Land varies codes maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The land varies codes are used to specify how each component
of the land cost is calculated. (ie., by passenger, by day, etc.)
</paragraph>
<paragraph>
The Varies by field determines how this field is included in the land cost:
</paragraph>
<item-list>
<item><bold>Per person</bold> - will be included for each passenger</item>
<item><bold>Fixed</bold> - will be added once to the tour cost</item>
<item><bold>Per room</bold> - will be added for each room</item>
</item-list>
<paragraph>
Each of these items also has a version that is manual. This means that the user will be prompted for a quantity before the cost can be determined. This can be useful for example for a per-day or per-mile charge. Remember to select the correct manual cost (ie., per-day-per-passenger).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>LandVaries</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="473">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandVariesScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Land varies codes</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandPricingScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Land varies codes maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The land varies codes are used to specify how each component
of the land cost is calculated. (ie., by passenger, by day, etc.)
</paragraph>
<paragraph>
The Varies by field determines how this field is included in the land cost:
</paragraph>
<item-list>
<item><bold>Per person</bold> - will be included for each passenger</item>
<item><bold>Fixed</bold> - will be added once to the tour cost</item>
<item><bold>Per room</bold> - will be added for each room</item>
</item-list>
<paragraph>
Each of these items also has a version that is manual. This means that the user will be prompted for a quantity before the cost can be determined. This can be useful for example for a per-day or per-mile charge. Remember to select the correct manual cost (ie., per-day-per-passenger).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>LandVaries</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="474">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Language</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Languages</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Language</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Languages maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
All the ISO langage descriptions and codes.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="475">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LanguageField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Language Field</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Language</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="484">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LookupInventoryHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Lookup inv on valid rec</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>LookupInventoryHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="486">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MaritalStatusField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc>Marital Status for Taxes</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>MaritalStatusField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="488">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Mco</ClassName>
		<BaseClassName>BaseArPay</BaseClassName>
		<ClassDesc>MCOs</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Mco</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Display and search for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    You can access an MCO either by the booking number, or the
    actual MCO number. Entering the first numbers of the MCO number
    will display all matching MCOs in order. 
</paragraph>
<paragraph>
    If there are more than one MCOs for one booking, then they
    will all display.
</paragraph>
<paragraph>
    If the MCO has not been posted to the General Ledger yet,
    the amounts may be changed. The amounts may only be changed for
    report use, the actual amount posted to the booking may not be
    changed.
</paragraph>
<paragraph>
    If the amount posted to a booking is incorrect, first change
    the MCO information to the correct values, so the MCO
    submission will be correct, then enter a credit or debit memo
    to the booking with distribution to the MCO variance account.
    This will insure all entries are correct.
</paragraph>
<paragraph>
    For example:
</paragraph>
<paragraph>
    MCO net should have been $900, but was posted as $1000.
</paragraph>
<paragraph>
    First, change the MCO amount to 1000. Then enter a debit
    memo for $100. The booking will show the correct amount. If the
    carrier pays $1000, the G/L entries will be:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>Cash</description>
  <amount>1000.00</amount>
</debit>
<credit>
  <description>A/R MCOs</description>
  <amount>900.00</amount>
</credit>
<credit>
  <description>MCO Variances</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
  The debit memo will produce:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>MCO Variance</description>
  <amount>100.00</amount>
</debit>
<credit>
  <description>Accounts Receivable</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
leaving all accounts in the correct state.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso>McoPost</SeeAlso>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="489">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoCollCalcNetBeh</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Calc the Service charge and net on this Mco</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoCollGridScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="490">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoCollGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Mco Collection Display/Entry</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoCollGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to enter the amount received from a carrier for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the carrier code that the payment is for.
</paragraph>
<paragraph>
    The MCOs submitted will default in the order submitted to
    the carrier or you can enter the MCO numbers.
</paragraph>
<paragraph>
    Enter the actual amount received for each MCO.
</paragraph>
<paragraph>
    To Post the MCOs to the G/L, click on the
	<help-button>
      <link>screen=McoCollPost</link>
	  <image>Post</image>
	  <description>Post (Mco Posting)</description>
    </help-button>
    button
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="491">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoCollPost</ClassName>
		<BaseClassName>BaseArTrxPostScreen</BaseClassName>
		<ClassDesc>Post the collections to A/R</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoCollGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used update the amount received from a carrier for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program updates the MCO status from submited to paid and posts
an entry in the G/L to negate the A/R (mco) balance.
</paragraph>
<paragraph>For example, the G/L entry for a batch of MCOs might be:</paragraph>
<acct-trx>
<date>6/21/99</date>
<debit>
  <description>Suspense-MCOs (Mco)</description>
  <amount>1400.00</amount>
</debit>
<debit>
  <description>Accounts Receivable - Air France(Ar Trx)</description>
  <amount>1432.00</amount>
</debit>
<credit>
  <description>MCO Variance</description>
  <amount>32.00</amount>
</credit>
</acct-trx>
<paragraph>
    Remember to Credit the Suspense account (not the A/R  MCO account) when you deposit the
    check in the Asset Debt system.
</paragraph>
<paragraph>
    If the difference in an MCO is collected later, just enter
    the MCO as a new sale, with the distribution (income) going to
    the variance account. This will provide the most accurate
    representation of the transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="492">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoCollScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Mco carrier collection entry screen</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoCollGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to enter the amount received from a carrier for MCOs.</ClassExplain>
		<ClassHelp>&lt;classinfo name=McoCollGridScreen&gt;&lt;help/&gt;&lt;/classinfo&gt;</ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="493">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoEntryGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>MCO Entry</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoEntryScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter and apply MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
  First, enter or lookup the booking number.
  If this MCO should be distributed to multiple
  bookings, you may press the
  <help-button>
    <link>screen=McoBatchDistScreen</link>
    <image>Detail</image>
    <name>Distribution</name>
    <description>Distribution</description>
  </help-button>
  button.
</paragraph>
<paragraph>
  For each MCO received, you may enter the MCO number,
  carrier code, Net MCO amount, Commission percentage or amount,
  Tax box, and the service charge percentage or amount. The net
  amount will display automatically.
</paragraph>
<paragraph>
  The MCO calculations are done as follows:
</paragraph>
<paragraph>
  Net = Gross - Commission - Taxes - Service charge
<br/>
  Commission = Gross * Commission %
<br/>
  Taxes = Gross * Tax %
<br/>
  Service charge = Gross * Service charge %
</paragraph>
<paragraph>
  To Post the MCOs to the G/L, click on the
  <help-button>
    <link>screen=McoPost</link>
    <image>Post</image>
    <description>Post (Mco Posting)</description>
  </help-button>
  button
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso>McoPost</SeeAlso>
		<TechnicalInfo/>
		<CopyDescFrom>McoEntryScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="494">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>MCOs</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display and search for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    You can access an MCO either by the booking number, or the
    actual MCO number. Entering the first numbers of the MCO number
    will display all matching MCOs in order. 
</paragraph>
<paragraph>
    If there are more than one MCOs for one booking, then they
    will all display.
</paragraph>
<paragraph>
    If the MCO has not been posted to the General Ledger yet,
    the amounts may be changed. The amounts may only be changed for
    report use, the actual amount posted to the booking may not be
    changed.
</paragraph>
<paragraph>
    If the amount posted to a booking is incorrect, first change
    the MCO information to the correct values, so the MCO
    submission will be correct, then enter a credit or debit memo
    to the booking with distribution to the MCO variance account.
    This will insure all entries are correct.
</paragraph>
<paragraph>
    For example:
</paragraph>
<paragraph>
    MCO net should have been $900, but was posted as $1000.
</paragraph>
<paragraph>
    First, change the MCO amount to 1000. Then enter a debit
    memo for $100. The booking will show the correct amount. If the
    carrier pays $1000, the G/L entries will be:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>Cash</description>
  <amount>1000.00</amount>
</debit>
<credit>
  <description>A/R MCOs</description>
  <amount>900.00</amount>
</credit>
<credit>
  <description>MCO Variances</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
  The debit memo will produce:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>MCO Variance</description>
  <amount>100.00</amount>
</debit>
<credit>
  <description>Accounts Receivable</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
leaving all accounts in the correct state.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Mco</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="495">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>MCOs</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display and search for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    You can access an MCO either by the booking number, or the
    actual MCO number. Entering the first numbers of the MCO number
    will display all matching MCOs in order. 
</paragraph>
<paragraph>
    If there are more than one MCOs for one booking, then they
    will all display.
</paragraph>
<paragraph>
    If the MCO has not been posted to the General Ledger yet,
    the amounts may be changed. The amounts may only be changed for
    report use, the actual amount posted to the booking may not be
    changed.
</paragraph>
<paragraph>
    If the amount posted to a booking is incorrect, first change
    the MCO information to the correct values, so the MCO
    submission will be correct, then enter a credit or debit memo
    to the booking with distribution to the MCO variance account.
    This will insure all entries are correct.
</paragraph>
<paragraph>
    For example:
</paragraph>
<paragraph>
    MCO net should have been $900, but was posted as $1000.
</paragraph>
<paragraph>
    First, change the MCO amount to 1000. Then enter a debit
    memo for $100. The booking will show the correct amount. If the
    carrier pays $1000, the G/L entries will be:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>Cash</description>
  <amount>1000.00</amount>
</debit>
<credit>
  <description>A/R MCOs</description>
  <amount>900.00</amount>
</credit>
<credit>
  <description>MCO Variances</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
  The debit memo will produce:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>MCO Variance</description>
  <amount>100.00</amount>
</debit>
<credit>
  <description>Accounts Receivable</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
leaving all accounts in the correct state.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Mco</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="496">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoPost</ClassName>
		<BaseClassName>BaseArTrxPostScreen</BaseClassName>
		<ClassDesc>Post the MCOs</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoPost</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to post the MCOs to the A/R system and update the booking balances.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
To post to A/R, you must supply the system with the proper A/R
account for the MCOs receivable (Defaults to the account in the
control file). This account is the amount of MCOs collected but
not yet received from the carriers.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the MCO record.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of MCOs might be:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Accounts Receivable-MCOs (Mco)</description>
<amount>1432.00</amount>
</debit>
<credit>
<description>Accounts Receivable - Tours (Ar Trx)</description>
<amount>1432.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
<bold>Note:</bold> If you make a mistake on an MCO and then post it, then you
will have to run the submission report for the erroneous MCO
and then credit the A/R account (and the booking) in credit
entry.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="497">
		<LastChanged>2012-07-16T10:41:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoEntryScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>MCO Entry</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoEntryScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter and apply MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
  First, enter or lookup the booking number.
  If this MCO should be distributed to multiple
  bookings, you may press the
  <help-button>
    <link>screen=McoBatchDistScreen</link>
    <image>Detail</image>
    <name>Distribution</name>
    <description>Distribution</description>
  </help-button>
  button.
</paragraph>
<paragraph>
  For each MCO received, you may enter the MCO number,
  carrier code, Net MCO amount, Commission percentage or amount,
  Tax box, and the service charge percentage or amount. The net
  amount will display automatically.
</paragraph>
<paragraph>
  The MCO calculations are done as follows:
</paragraph>
<paragraph>
  Net = Gross - Commission - Taxes - Service charge
<br/>
  Commission = Gross * Commission %
<br/>
  Taxes = Gross * Tax %
<br/>
  Service charge = Gross * Service charge %
</paragraph>
<paragraph>
  To Post the MCOs to the G/L, click on the
  <help-button>
    <link>screen=McoPost</link>
    <image>Post</image>
    <description>Post (Mco Posting)</description>
  </help-button>
  button
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="498">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields for MCO reports</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoSubmitReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="499">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoSubmitCalcNetBeh</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Calculate the net MCO amount</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoSubmitReport</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="500">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoSubmitFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Footing</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoSubmitReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="501">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoSubmitHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Heading for MCO Submission Report</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoSubmitReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="502">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoSubmitReport</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>MCO carrier submission report</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoSubmitReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>This program is used to print-out the current group of MCOs to submit to a carrier for payment.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    First enter the carrier number to submit the MCOs to. Then
    enter the service change (if applicable). 
</paragraph>
<paragraph>
    The program will automatically update the status of the MCOs
    to "Submitted" when you confirm the print-out.
</paragraph>
<paragraph>
    A G/L entry doesn't have to be made, because the adjustment
    to A/R was made already in the MCO entry program.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="503">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoSubmitToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Toolbar for MCO submissions</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoSubmitReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="504">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MealDays</ClassName>
		<BaseClassName>ShortField</BaseClassName>
		<ClassDesc>Days for Meals</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>MealPlan</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="505">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MealPlan</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Meal plan</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>MealPlan</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Meal plan maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Meal plans for use in hotel, air, land, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="506">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MealPlanField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc>Meal Plan ID</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>MealPlan</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="507">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MealPlanGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Meal plan</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>MealPlanScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Meal plan maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Meal plans for use in hotel, air, land, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>MealPlan</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="508">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MealPlanScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Meal plan</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>MealPlanScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Meal plan maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Meal plans for use in hotel, air, land, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>MealPlan</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="509">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Memberships</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Membership detail</ClassDesc>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>Memberships</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile membership detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the memberships this profile belongs to.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="511">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MEmpAddress</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Employee Address sub-screen</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>MEmpAddress</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="512">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MEmpDedEarn</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Deduction/Earnings</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="513">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MEmpSalary</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Employee Salary Info</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="514">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MEmpTaxDis</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Tax Totals Display</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="515">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MEmpTaxes</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Employee Tax sub-screen</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>EmployeeScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="521">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ModifyCodeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc>Tour Detail Mod Code</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>ModifyCodeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="526">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverrideFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="527">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverrideGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Enter override information</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter air overrides paid by an airline.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Override processing is done is two steps:
</paragraph>
<item-list>
<item>1. Submit an override report to the carrier.</item>
<item>2. Enter the actual overrides received for each ticket in the override screen.</item>
</item-list>
<paragraph>
To use the override entry screen, enter the carrier code and
the starting and ending TICKET
departure date to process overrides receipts for (The same
dates entered when the submission report was run).
</paragraph>
<paragraph>
All the tickets in the range for the carrier selected will
display in departure date order.
</paragraph>
<paragraph>
For each ticket, enter the amount of override received. The amount
defaults to the amount submitted to the carrier.
</paragraph>
<paragraph>
You may change a receipt by entering the ticket number and
re-entering the amount.
</paragraph>
<paragraph>
The overrides will immediately be posted to the General Ledger. For example:
<acct-trx>
<date>11/17/07</date>
<debit>
<description>Override Summary Account</description>
<amount>55.50</amount>
</debit>
<credit>
<description>Gain/Loss on Overrides recvd</description>
<amount>11.50</amount>
</credit>
<credit>
<description>Overrides Receivable</description>
<amount>67.00</amount>
</credit>
</acct-trx>
<bold>Note:</bold> It is therefore important that the check received from the
carrier is distributed to the override summary account:
<acct-trx>
<date>11/17/07</date>
<debit>
<description>Cash</description>
<amount>55.50</amount>
</debit>
<credit>
<description>Override Summary Account</description>
<amount>55.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>OverrideScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="528">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverrideHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="529">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverrideReport</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Override review report</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Override review report</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Override processing is done is two steps:
</paragraph>
<item-list>
<item>1. Submit an override report to the carrier.</item>
<item>2. Enter the actual overrides received for each ticket in the override screen.</item>
</item-list>
<paragraph>
Enter the carrier code and the starting and ending TICKET
departure date to process overrides receipts for.
</paragraph>
<paragraph>
All the tickets in the range for the carrier selected will
print in ticket departure date order.
</paragraph>
<paragraph>
If you enter an override date, all the paid overrides entered for that date will print.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="530">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverrideScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Enter override information</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter air overrides paid by an airline.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Override processing is done is two steps:
</paragraph>
<item-list>
<item>1. Submit an override report to the carrier.</item>
<item>2. Enter the actual overrides received for each ticket in the override screen.</item>
</item-list>
<paragraph>
To use the override entry screen, enter the carrier code and
the starting and ending TICKET
departure date to process overrides receipts for (The same
dates entered when the submission report was run).
</paragraph>
<paragraph>
All the tickets in the range for the carrier selected will
display in departure date order.
</paragraph>
<paragraph>
For each ticket, enter the amount of override received. The amount
defaults to the amount submitted to the carrier.
</paragraph>
<paragraph>
You may change a receipt by entering the ticket number and
re-entering the amount.
</paragraph>
<paragraph>
The overrides will immediately be posted to the General Ledger. For example:
<acct-trx>
<date>11/17/07</date>
<debit>
<description>Override Summary Account</description>
<amount>55.50</amount>
</debit>
<credit>
<description>Gain/Loss on Overrides recvd</description>
<amount>11.50</amount>
</credit>
<credit>
<description>Overrides Receivable</description>
<amount>67.00</amount>
</credit>
</acct-trx>
<bold>Note:</bold> It is therefore important that the check received from the
carrier is distributed to the override summary account:
<acct-trx>
<date>11/17/07</date>
<debit>
<description>Cash</description>
<amount>55.50</amount>
</debit>
<credit>
<description>Override Summary Account</description>
<amount>55.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="531">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverrideScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="532">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverrideToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="533">
		<LastChanged>2012-04-12T21:08:37</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxDetailSelectHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Move Info On Select</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>PaxDetailSelectHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="534">
		<LastChanged>2012-04-12T21:08:26</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaPaxSelectHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Add the profile detail records to this booking</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>PaPaxSelectHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="535">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PastDueHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Check to see if this booking is past-due</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.pastdue</ClassPackage>
		<ClassSourceFile>PastDueReport</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="536">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PastDueFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Footing for the past due report</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.pastdue</ClassPackage>
		<ClassSourceFile>PastDueReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="537">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PastDueHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Heading</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.pastdue</ClassPackage>
		<ClassSourceFile>PastDueReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="538">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PastDueReport</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Print past due reports and notices</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.pastdue</ClassPackage>
		<ClassSourceFile>PastDueReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Review bookings with overdue payments</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the "Past due as of" date (defaults to todays
    date). If a payment is past due as of this date, then it will be
    included on the report. 
</paragraph>
<paragraph>
    The next two questions ask if you want to check the deposit
    and/or final payment dates. Both of the answers default to yes.
    The MCO margin keeps deposits which are within the entered
    percentage from printing on the report (MCO deposits often are
    written as commissionable).
</paragraph>
<paragraph>
    You have three options for handling the past due items in the
    report.<br/>
   First, you can print the report.<br/>
   Second, you can print reminder notices<br/>
   Or, you can export the past due data into an XML file to be
   processed on your own.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="539">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PastDueScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc>Screen variables</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.pastdue</ClassPackage>
		<ClassSourceFile>PastDueReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="540">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PastDueToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Input screen for the past-due report</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.pastdue</ClassPackage>
		<ClassSourceFile>PastDueReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="541">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxCategory</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Passenger price category</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>PaxCategory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Passenger price category maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This table is used in the passenger price file to specify the passenger category.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="542">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxCategoryField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Passenger Category</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>PaxCategory</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="543">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxGroup</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Booking Pax Group</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PaxGroup</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="548">
		<LastChanged>2012-04-12T21:08:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxSelectHandler</ClassName>
		<BaseClassName>SubCountHandler</BaseClassName>
		<ClassDesc>Count the Passengers and types</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>PaPaxSelectHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="549">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PayAtField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc>Pay At</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>PayAtField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="550">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentCode</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Payment codes</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApPaymentCode</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Generalized payment selection codes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Payment codes are user defined codes for selecting a batch of vendors for payments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="551">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentCodeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Payment Cycle</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApPaymentCode</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="552">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentCycle</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Billing cycle</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApPaymentCycle</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Billing cycle</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When to bill a vendor.
<br/>
Typically at Invoice, statement, end of month, or prepay.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="553">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentCycleField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApPaymentCycle</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="555">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentRequest</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Payment Request</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PaymentRequest</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Request checks for printing.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter the vendor code, amount, and a comment for the check.
    The amount defaults to current selection. If the
    amount is different from the vendor selection amount,
    the amount will be set up as a prepayment.
</paragraph>
<paragraph>
To enter a manually written check, click the Allow manual checks button and enter
the check number in the screen. When automated checks are printed, this check
will not be included, but when the checks are posted the manual check will be included.
</paragraph>
<paragraph>
To print the requested checks, click the
  <help-button>
    <name>Print checks</name>
    <link>screen=PrintCheckJournal</link>
    <image>Print</image>
  </help-button>
button.<br/>
To select checks for a batch of vendors, click on the
  <help-button>
    <name>Generalized selection</name>
    <link>screen=GenPaymentSelect</link>
    <image>Select</image>
  </help-button>
button.
</paragraph>
<paragraph>
    To see the resulting G/L entries, see the
  <help-button>
    <name>Check printing</name>
    <link>screen=PrintCheckJournal</link>
    <image>Print</image>
  </help-button>
    program.
    Check printing is where the posting is done.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="557">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentRequestGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Payment Request</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.pymtreq</ClassPackage>
		<ClassSourceFile>PaymentRequestGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Request checks for printing.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter the vendor code, amount, and a comment for the check.
    The amount defaults to current selection. If the
    amount is different from the vendor selection amount,
    the amount will be set up as a prepayment.
</paragraph>
<paragraph>
To enter a manually written check, click the Allow manual checks button and enter
the check number in the screen. When automated checks are printed, this check
will not be included, but when the checks are posted the manual check will be included.
</paragraph>
<paragraph>
To print the requested checks, click the
  <help-button>
    <name>Print checks</name>
    <link>screen=PrintCheckJournal</link>
    <image>Print</image>
  </help-button>
button.<br/>
To select checks for a batch of vendors, click on the
  <help-button>
    <name>Generalized selection</name>
    <link>screen=GenPaymentSelect</link>
    <image>Select</image>
  </help-button>
button.
</paragraph>
<paragraph>
    To see the resulting G/L entries, see the
  <help-button>
    <name>Check printing</name>
    <link>screen=PrintCheckJournal</link>
    <image>Print</image>
  </help-button>
    program.
    Check printing is where the posting is done.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>PaymentRequest</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="558">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentRequestHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.pymtreq</ClassPackage>
		<ClassSourceFile>PaymentRequestGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="559">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentRequestScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Payment Request</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.pymtreq</ClassPackage>
		<ClassSourceFile>PaymentRequestGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Request checks for printing.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter the vendor code, amount, and a comment for the check.
    The amount defaults to current selection. If the
    amount is different from the vendor selection amount,
    the amount will be set up as a prepayment.
</paragraph>
<paragraph>
To enter a manually written check, click the Allow manual checks button and enter
the check number in the screen. When automated checks are printed, this check
will not be included, but when the checks are posted the manual check will be included.
</paragraph>
<paragraph>
To print the requested checks, click the
  <help-button>
    <name>Print checks</name>
    <link>screen=PrintCheckJournal</link>
    <image>Print</image>
  </help-button>
button.<br/>
To select checks for a batch of vendors, click on the
  <help-button>
    <name>Generalized selection</name>
    <link>screen=GenPaymentSelect</link>
    <image>Select</image>
  </help-button>
button.
</paragraph>
<paragraph>
    To see the resulting G/L entries, see the
  <help-button>
    <name>Check printing</name>
    <link>screen=PrintCheckJournal</link>
    <image>Print</image>
  </help-button>
    program.
    Check printing is where the posting is done.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>PaymentRequest</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="560">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentRequestScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.pymtreq</ClassPackage>
		<ClassSourceFile>PaymentRequestGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="562">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Period</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Periods</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Period</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Accounting periods</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Account postings are summarized into these time periods.
</paragraph>
<paragraph>
    Most journal entries will be posted to the period that contains
    the current date, although it is possible to post in a previous
    or future period.
</paragraph>
<paragraph>
    To prevent posting from being made in a past period, just enter
    the current date in the "Closed on" date. Any postings
    attempted in a closed period, will appear in the first open
    period. Any postings attempted past the last period will be
    summarized in the month the transaction is posted.
</paragraph>
<paragraph>
    <bold>Note:</bold> If you do not summarize your financial
    information monthly, you should enter your
    financial periods far into the future to avoid having the system
    automatically summarize your transactions by month.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo>This is one of the few record that don't have an Object ID. No record should every reference a Period directly.</TechnicalInfo>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="565">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EmployeeControlScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Employee Control File</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>EmployeeControlScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Employee control file mainteance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Control values for the payroll system.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>EmployeeControl</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="566">
		<LastChanged>2012-04-01T11:21:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentAcctHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Default to the correct prepayment account depending on tour/non-tour</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>PrepaymentAcctHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="567">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentCutoffFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ppcutoff</ClassPackage>
		<ClassSourceFile>PrepaymentCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="568">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentCutoffHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ppcutoff</ClassPackage>
		<ClassSourceFile>PrepaymentCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="569">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentCutoffReport</ClassName>
		<BaseClassName>ApBaseCutoffReport</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ppcutoff</ClassPackage>
		<ClassSourceFile>PrepaymentCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the A/P payment cutoff report.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
  The cutoff report details the payments made but not yet distributed as of
  the cut-off date.
  This program is typically used to verify the prepaid cost amount in the
  General Ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="570">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentCutoffScreenRecord</ClassName>
		<BaseClassName>ApReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ppcutoff</ClassPackage>
		<ClassSourceFile>PrepaymentCutoffReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="571">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentCutoffToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ppcutoff</ClassPackage>
		<ClassSourceFile>PrepaymentCutoffReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="572">
		<LastChanged>2013-01-22T05:46:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentDistScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Prepayment distribution</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.prepymt</ClassPackage>
		<ClassSourceFile>PrepaymentDistScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Distribute prepayments, debit memos, and broker drafts to specific invoices.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
To start, enter the entry number of the <help-link>
<name>prepayment</name>
<image>Form</image>
<link>?screen=PrepaymentScreen</link>
</help-link> to
distribute.
</paragraph>
<paragraph>
Once the prepayment is selected, the current selection for
this vendor will display. The selection must be equal to or
less than the prepayment amount. You don't have to distribute
the whole amount. The prepayment may be reduced in more than
one distribution.
</paragraph>
<paragraph>
<bold>Notes:</bold> This program is also used to distribute <help-link>
<name>debit memos</name>
<image>Form</image>
<link>?screen=DebitMemoScreen</link>
</help-link> and
<help-link>
<name>broker payments</name>
<image>Form</image>
<link>?screen=BrokerDistGridScreen</link>
</help-link>.
Program operation is exactly the same.
</paragraph>
<paragraph>
A G/L entry is generated for the items distributed to, for
example:
</paragraph>
<acct-trx>
<date>4/15/91</date>
<debit>
<description>Cost of Tours - FIT</description>
<amount>500.00</amount>
</debit>
<credit>
<description>Gain/Loss on curr exch (loss)</description>
<amount>10.00</amount>
</credit>
<credit>
<description>Prepayments to Vendors</description>
<amount>510.00</amount>
</credit>
</acct-trx>
<paragraph>
<bold>Note:</bold> Usually, a zero prepayment or debit memo amount cannot
be distributed to invoices, because after distribution the
internal status is changed to "fully distributed." There is an
exception which is allowed to distribute to invoices which are
for a zero amount. In this case, a debit memo can be created
for a zero amount, and then distribtued to selected invoices
with zero amounts. This provides a way of clearing departure
estimates for which an amount is never invioced.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="573">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Prepayments</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.prepymt</ClassPackage>
		<ClassSourceFile>PrepaymentScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Prepayment entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
To enter a prepayment,
enter the vendor and the amount of the prepayment. If the
prepayment is for a specific tour, enter the tour
also.
</paragraph>
<paragraph>
You may also enter a starting service date,
a description of the prepayment, and
an invoice or estimate if this
prepayment is for a specific item.
</paragraph>
<paragraph>
After entering a prepayment request, it will be
automatically selected for payment.
</paragraph>
<paragraph>
Most prepayments requests are automatically generated by the booking system
for services that must be paid in advance.
</paragraph>
<paragraph>
To see the resulting G/L entries, take a look at
<help-link>
<name>Check printing</name>
<link>?screen=PrintCheckJournal</link>
<image>Form</image>
</help-link>.
Prepayment requests aren't posted until the are paid.
</paragraph>
<paragraph>
After a prepayment is created and paid, it will have to be distributed to specific invoices in
<help-link>
<name>Prepayment Distribution</name>
<image>Form</image>
<link>screen=PrepaymentDistScreen</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This program is also used to change and delete current
prepayment requests. Once the
prepayment request has been paid, it can't be changed or deleted.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="574">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepayType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApPrepayType</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Payment or prepayment types</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This table tells the system whether to auto-select invoices or prepayments for payment.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="575">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepayTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Prepayment Type</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApPrepayType</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="576">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckDetail</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Detail distribution for a check</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="577">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="578">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="579">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckJournal</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Check journal</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print requested checks</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the bank account you want to print
checks for. 
</paragraph>
<paragraph>
Then you must decide whether you want to print the automated
checks or print a check register for the manually entered
checks. If you select both, then the automated checks will
print and the check register will include both the automated
checks and the manual checks.
</paragraph>
<paragraph>
Next, enter the starting check number.
The program will ask you to load the
checks into the printer before starting to print.
</paragraph>
<paragraph>
The system automatically prints the checks and posts the
proper amounts to the General Ledger Distribtion file.
</paragraph>
<paragraph>
After the checks have been printed, click on the
<help-button>
<name>Post</name>
<image>Post</image>
</help-button> button to post the checks.
</paragraph>
<paragraph>
The General Ledger distribtion depends on the type of
payment. A few samples follow:
</paragraph>
<paragraph>
<acct-trx>
<date>11/21/03</date>
<debit>
<description>Accounts Payable - Tours</description>
<amount>230.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>230.00</amount>
</credit>
<comment>(Payment to a USD vendor)</comment>
</acct-trx>
</paragraph>
<paragraph>
<acct-trx>
<date>11/21/03</date>
<debit>
<description>Accounts Payable - Tours</description>
<amount>920.00</amount>
</debit>
<credit>
<description>Gain or Loss on Curr. exchange (Gain)</description>
<amount>20.00</amount>
</credit>
<credit>
<description>Cash</description>
<amount>900.00</amount>
</credit>
<comment>(Broker payment - multiple vendors)</comment>
</acct-trx>
</paragraph>
<paragraph>
<acct-trx>
<date>11/21/03</date>
<debit>
<description>Prepayments to Vendors</description>
<amount>200.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>200.00</amount>
</credit>
<comment>(Prepayment)</comment>
</acct-trx>
</paragraph>
<paragraph>
<bold>Note:</bold> The transactions posted here will trace back to the payment history rather than the specific A/P transaction, since multiple payment may be made for a single transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="580">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckPost</ClassName>
		<BaseClassName>BaseApTrxPostScreen</BaseClassName>
		<ClassDesc>Post the A/P Checks</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckPost</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="581">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckScreenRecord</ClassName>
		<BaseClassName>CheckScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="582">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="583">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Product</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Product</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>Product</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Product information</ClassExplain>
		<ClassHelp type="XML"><paragraph>
There are several <bold>message transport</bold> fields that determine how information is retrieved from this vendor:
</paragraph>
<item-list>
<item><bold>Information</bold> - General information such as Product name, etc.</item>
<item><bold>Inventory</bold> - Product availability</item>
<item><bold>Cost</bold> - Product cost</item>
<item><bold>Ordering</bold> - Book the product</item>
</item-list>
<paragraph>
Each one of these items have two selections; <bold>message transport</bold> and <bold>initial status</bold>. If these values are blank here, the values in the <help-link>
<name>Product Type</name>
<link>record=ProductType</link>
<image>Help</image>
</help-link> record are used. If the message transport is blank in the product type field also, the value in the <help-link>
<name>Vendor</name>
<link>record=Vendor</link>
<image>Help</image>
</help-link> file is used.
</paragraph>
<paragraph>
<bold>Note:</bold> Leave these fields blank to have the system determine the best way to get the requested information.
</paragraph></ClassHelp>
		<ClassImplements>MessageDetailTarget</ClassImplements>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="584">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductCategory</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Tour Product Category</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductCategory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Product G/L account information.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter product General Ledger account information.
</paragraph>
<paragraph>
This information is used in the tour header file.
</paragraph>
<paragraph>
The accounts are used in automatic G/L posting:<br/>
The booking transactions on the accounts receivable side are posted like this:<br/>
<acct-trx>
<date>10/15/08</date>
<debit><description>Accounts Receivable - Tours</description><amount>1000.00</amount></debit>
<credit><description>Customer Tour Prepayments</description><amount>1000.00</amount></credit>
<comment>Booking accepted (okayed) by customer (usually deposit received date)</comment>
</acct-trx>
<br/>

<acct-trx>
<date>10/15/08</date>
<debit><description>Cash</description><amount>200.00</amount></debit>
<credit><description>Accounts Receivable - Tours</description><amount>200.00</amount></credit>
<comment>Deposit received</comment>
</acct-trx>
<br/>


<acct-trx>
<date>12/15/08</date>
<debit><description>Cash</description><amount>800.00</amount></debit>
<credit><description>Accounts Receivable - Tours</description><amount>800.00</amount></credit>
<comment>Final payment received</comment>
</acct-trx>
<br/>

<acct-trx>
<date>2/08/08</date>
<debit><description>Customer Tour Prepayments</description><amount>1000.00</amount></debit>
<credit><description>Income from tours</description><amount>1000.00</amount></credit>
<comment>Departure date (Recognize income)</comment>
</acct-trx>
The account 'Customer Tour Prepayments' description may not seem accurate, but actually on the financial statement this account is shown
netted with the 'Accounts Receivable - Tours' account(s). Since the A/R account is reduced with each payment, the 'Customer Tour Prepayments'
account gives an accurate liability amount until it is recognized as income on the departure date.
</paragraph>

<paragraph>
The booking transactions on the accounts payable side are posted like this:<br/>

<acct-trx>
<date>10/20/08</date>
<debit><description>Prepayment</description><amount>200.00</amount></debit>
<credit><description>Cash</description><amount>200.00</amount></credit>
<comment>Prepayment for hotel</comment>
</acct-trx>
<br/>

<acct-trx>
<date>2/08/08</date>
<debit><description>Cost of Tour - South Pacific</description><amount>800.00</amount></debit>
<credit><description>Uninvoiced Tour Cost</description><amount>800.00</amount></credit>
<comment>Departure date (Recognize expense)</comment>
</acct-trx>
<br/>

<acct-trx>
<date>2/28/08</date>
<debit><description>Uninvoiced Tour Cost</description><amount>800.00</amount></debit>
<credit><description>Accounts Payable</description><amount>750.00</amount></credit>
<credit><description>(Gain)/Loss on Cost Over/Under estimate</description><amount>50.00</amount></credit>
<comment>Invoice date</comment>
</acct-trx>
<br/>

<acct-trx>
<date>3/2/08</date>
<debit><description>Accounts Payable</description><amount>200.00</amount></debit>
<credit><description>Prepayment</description><amount>200.00</amount></credit>
<comment>Distribute prepayment to invoice</comment>
</acct-trx>
<br/>

<acct-trx>
<date>3/2/08</date>
<debit><description>Accounts Payable</description><amount>600.00</amount></debit>
<credit><description>Cash</description><amount>500.00</amount></credit>
<credit><description>(Gain)/Loss on Currency Exchange</description><amount>100.00</amount></credit>
<comment>Final payment</comment>
</acct-trx>
<br/>

The 'Uninvoiced Tour Cost' account is usually netted with the 'Accounts Payable' account on the balance sheet, giving an accurate estimated accounts payable amount.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="585">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductCategoryField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductCategory</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="586">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductPricing</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Product Cost Detail</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductPricing</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="587">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductDesc</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Product Description</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>Product</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="588">
		<LastChanged>2012-04-12T21:09:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductDescConverter</ClassName>
		<BaseClassName>FieldConverter</BaseClassName>
		<ClassDesc>Convert product name to long</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>ProductDescConverter</ClassSourceFile>
		<ClassType>Converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="589">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductDescSort</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Desc sort field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>Product</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="590">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Base Screen to display/search product</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="591">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductInventoryGridScreen</ClassName>
		<BaseClassName>ProductDetailGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductInventoryGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="592">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductList</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Product Merge Table</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductList</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="594">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductMerge</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Source for Product Tree</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductMerge</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="596">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductStatus</ClassName>
		<BaseClassName>BaseDataStatus</BaseClassName>
		<ClassDesc>Product status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking detail order status</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter product status information.
</paragraph>
<paragraph>
This information is used in the the booking detail screens to show the current status
of a product line-item.<br/>
For a description of the status messages, see the <help-link>
<name>Base Message Status</name>
<link>record=BaseMessageStatus</link>
<image>Help</image> 
</help-link> description.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="597">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductStatusField</ClassName>
		<BaseClassName>BaseDataStatusField</BaseClassName>
		<ClassDesc>Product Status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductStatus</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="598">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTerms</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Terms</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductTerms</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Product terms</ClassExplain>
		<ClassHelp type="XML"><paragraph>
General product pricing terms used to calculate the net price.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="599">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTermsField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Terms Field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductTerms</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="600">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTermsGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Terms</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductTermsScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Product terms</ClassExplain>
		<ClassHelp type="XML"><paragraph>
General product pricing terms used to calculate the net price.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ProductTerms</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="601">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTermsScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Terms</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductTermsScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Product terms</ClassExplain>
		<ClassHelp type="XML"><paragraph>
General product pricing terms used to calculate the net price.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ProductTerms</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="604">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Product Type</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductType</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Product type</ClassExplain>
		<ClassHelp type="XML"><paragraph>
List of all tour product types.
</paragraph>
<paragraph>
This record also contains the default message transport and initial status when an item of this type is entered in a booking.
This field is used if the value in the product record is left blank.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="605">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Record for Hotel search variables</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="606">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Profile</ClassName>
		<BaseClassName>Company</BaseClassName>
		<ClassDesc>Passenger and Agency Profile</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Profile</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Customer and contact maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Profiles may be retrieved either by their code (ie., ARC
    number), or by using the agency name and zip code search.
</paragraph>
<paragraph>
    <bold>Note:</bold> This system is not accessible to the reservation
    agent; They can only access agencies in agency selection and
    brochure requests.
</paragraph>
<paragraph>
From the toolbar, you also have access to the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements>MessageDetailTarget</ClassImplements>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="607">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileClass</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Profile Classifications</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileClass</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile classification maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Profile classes are user-defined but usually reflect the profile's sales category (Top 5%, Next 10% etc).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="608">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileClassField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileClassField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="609">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc>Control File</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileControl</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Defaults and system variables for the profile system.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The values entered here are the default values used in
<help-link>
<name>Profile maintenance.</name>
<link>record=Profile</link>
<image>Help</image>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements>MessageDetailTarget</ClassImplements>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="610">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileCreditCard</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Credit cards</ClassDesc>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>ProfileCreditCard</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile credit card detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the credit cards that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="611">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileField</ClassName>
		<BaseClassName>CustSaleCustNo</BaseClassName>
		<ClassDesc>Profile field</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="612">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Passenger and Agency Profile</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>ProfileScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Customer and contact maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Profiles may be retrieved either by their code (ie., ARC
    number), or by using the agency name and zip code search.
</paragraph>
<paragraph>
    <bold>Note:</bold> This system is not accessible to the reservation
    agent; They can only access agencies in agency selection and
    brochure requests.
</paragraph>
<paragraph>
From the toolbar, you also have access to the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Profile</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="613">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Passenger and Agency Profile</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>ProfileScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Customer and contact maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Profiles may be retrieved either by their code (ie., ARC
    number), or by using the agency name and zip code search.
</paragraph>
<paragraph>
    <bold>Note:</bold> This system is not accessible to the reservation
    agent; They can only access agencies in agency selection and
    brochure requests.
</paragraph>
<paragraph>
From the toolbar, you also have access to the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Profile</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="614">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>ProfileScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="615">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileStatus</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Profile Status</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile status maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Profile status can be any user-defined descriptions.<br/>
Usually it is a subjective classification (Excellent/Good/Blacklist/etc.).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="616">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileStatusField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileStatusField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="617">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Profile type</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileType</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Type of profile.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the type of profile, such as travel agent, passenger, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="618">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileType</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="619">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfitCenter</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Profit Centers</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfitCenter</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profit center descriptions</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The profit center is the three-digit extension on the General Ledger Account number.
</paragraph>
<paragraph>
    Since account numbers and profit centers are options, Profit
    center descriptions are also optional.
    Enter the three-digit entension and the profit center
    description for each profit center.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo>This record does not contain an objectID, as it is never referenced directly.</TechnicalInfo>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="620">
		<LastChanged>2012-03-31T22:20:21</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfitCenterField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>ProfitCenterField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="621">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PeriodTypeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc>Pay Frequency Field</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>PeriodTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="622">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PayTypeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc>Pay Type</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PayTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="623">
		<LastChanged>2012-04-01T09:50:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrPrtCheck</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Print the Checks</ClassDesc>
		<ClassProjectID>1,048,622</ClassProjectID>
		<ClassPackage>.report.payroll</ClassPackage>
		<ClassSourceFile>PrPrtCheck</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="627">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>QEmployee</ClassName>
		<BaseClassName>BaseScreen</BaseClassName>
		<ClassDesc>Employee Maintenance</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.emp</ClassPackage>
		<ClassSourceFile>QEmployee</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="640">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundCheckFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Footing for the Refund check journal</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="641">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundCheckHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Report heading</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="642">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundCheckJournal</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Print refund checks</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print refund journal and refund checks</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Select the bank account refunds are made from.
    Then enter the date and starting check number. 
</paragraph>
<paragraph>
    Pressing the
<help-button>
  <name>Print</name>
  <link>screen=RefundCheckJournal</link>
  <image>Print</image>
</help-button>
    button will print the Refund Journal. This is a summary of
    the checks that will be printed and to what bookings they
    apply.
</paragraph>
<paragraph>
    Pressing the
<help-button>
  <name>XML checks</name>
  <link>screen=RefundCheckXMLPrint</link>
  <image>Print</image>
</help-button>
    button or the
<help-button>
  <name>Canned checks</name>
  <link>screen=RefundCheckPrint</link>
  <image>Print</image>
</help-button>
    button will print the checks in either XML
    format or straight to the printer.
</paragraph>
<paragraph>
    If the checks are all right, click on the
<help-button>
  <name>Post</name>
  <link>screen=RefundCheckPost</link>
  <image>Post</image>
</help-button>
    button to go to the posting screen.
</paragraph>    
<paragraph>
    If a refund was done manually, the refund should be entered
    as a debit memo. Describe the refund on the A/R comment
    line.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="643">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundCheckPost</ClassName>
		<BaseClassName>BaseArTrxPostScreen</BaseClassName>
		<ClassDesc>Refund check posting</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Post the refund checks to G/L</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    When you post the refund checks, the status of the transaction
    is updated to "Paid", the refund will be posted to the G/L and
    the check is entered as a bank transaction.
</paragraph>    
<paragraph>
The G/L Transaction will look like this:
<acct-trx>
<date>16-Feb-03</date>
<debit>
 <description>Refunds Pending</description>
 <amount>212.45</amount>
</debit>
<credit>
 <description>Cash - Bank account A</description>
 <amount>212.45</amount>
</credit>
<comment>Refund paid.</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="644">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundCheckToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Toolbar for the check printing program</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckJournal</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="645">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundGridScreen</ClassName>
		<BaseClassName>BookingArTrxGridScreen</BaseClassName>
		<ClassDesc>Enter refunds</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter requests for refund checks</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter the booking number that you want to enter a refund for. The booking
    information and the current A/R transactions will display. 
</paragraph>
<paragraph>
    Enter a date (defaults to today), amount, and a remark.
</paragraph>
<paragraph>
    Once you enter the refund request, a G/L transaction
    will be generated. The G/L accounts come from
    the A/R control file. A temporary liability called
    refund pending will be set up until the check
    is printed.
    The transaction will look something like this:
<acct-trx>
<date>15-Feb-03</date>
<debit>
 <description>Accounts Receivable</description>
 <amount>212.45</amount>
</debit>
<credit>
 <description>Refunds Pending</description>
 <amount>212.45</amount>
</credit>
<comment>Request for refund (Temporary transaction).</comment>
</acct-trx>
</paragraph>
<paragraph>
Refund requests cannot be changed or cancelled once they are
entered. To modify or cancel a refund request, use the
<help-button>
  <name>Refund Review</name>
  <link>screen=RefundPendGridScreen</link>
  <image>Grid</image>
</help-button>
screen.
</paragraph>
<paragraph>
<bold>Note:</bold>
This screen is usually used to enter refund checks for overpayments
or other atypical transactions. Most refund requests are created
automatically when a booking is cancelled.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="646">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundPendGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Review the pending refunds</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundPendGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Review or change pending refunds.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    All of the pending refunds will display.
</paragraph>
<paragraph>
    You can hold a refund or mark it as manually paid. 
    Held refunds will stay in the list until they are changed
    back to submitted.
</paragraph>
<paragraph>
    Refunds marked as manually
    paid will no longer appear in the list. You must enter
    a manual G/L entry to apply the refund pending
    to the correct account after marking a refund as
    manually paid.
</paragraph>
<paragraph>
<bold>Note:</bold>You can only mark a refund as
    manually paid in the single entry screen, this option
    does not appear in the grid view.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="647">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundPendScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Enter refunds</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundPendGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter requests for refund checks</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter the booking number that you want to enter a refund for. The booking
    information and the current A/R transactions will display. 
</paragraph>
<paragraph>
    Enter a date (defaults to today), amount, and a remark.
</paragraph>
<paragraph>
    Once you enter the refund request, a G/L transaction
    will be generated. The G/L accounts come from
    the A/R control file. A temporary liability called
    refund pending will be set up until the check
    is printed.
    The transaction will look something like this:
<acct-trx>
<date>15-Feb-03</date>
<debit>
 <description>Accounts Receivable</description>
 <amount>212.45</amount>
</debit>
<credit>
 <description>Refunds Pending</description>
 <amount>212.45</amount>
</credit>
<comment>Request for refund (Temporary transaction).</comment>
</acct-trx>
</paragraph>
<paragraph>
Refund requests cannot be changed or cancelled once they are
entered. To modify or cancel a refund request, use the
<help-button>
  <name>Refund Review</name>
  <link>screen=RefundPendGridScreen</link>
  <image>Grid</image>
</help-button>
screen.
</paragraph>
<paragraph>
<bold>Note:</bold>
This screen is usually used to enter refund checks for overpayments
or other atypical transactions. Most refund requests are created
automatically when a booking is cancelled.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>RefundScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="648">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundScreen</ClassName>
		<BaseClassName>BookingArTrxScreen</BaseClassName>
		<ClassDesc>Enter refunds</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter requests for refund checks</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter the booking number that you want to enter a refund for. The booking
    information and the current A/R transactions will display. 
</paragraph>
<paragraph>
    Enter a date (defaults to today), amount, and a remark.
</paragraph>
<paragraph>
    Once you enter the refund request, a G/L transaction
    will be generated. The G/L accounts come from
    the A/R control file. A temporary liability called
    refund pending will be set up until the check
    is printed.
    The transaction will look something like this:
<acct-trx>
<date>15-Feb-03</date>
<debit>
 <description>Accounts Receivable</description>
 <amount>212.45</amount>
</debit>
<credit>
 <description>Refunds Pending</description>
 <amount>212.45</amount>
</credit>
<comment>Request for refund (Temporary transaction).</comment>
</acct-trx>
</paragraph>
<paragraph>
Refund requests cannot be changed or cancelled once they are
entered. To modify or cancel a refund request, use the
<help-button>
  <name>Refund Review</name>
  <link>screen=RefundPendGridScreen</link>
  <image>Grid</image>
</help-button>
screen.
</paragraph>
<paragraph>
<bold>Note:</bold>
This screen is usually used to enter refund checks for overpayments
or other atypical transactions. Most refund requests are created
automatically when a booking is cancelled.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>RefundGridScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="649">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundScreenRecord</ClassName>
		<BaseClassName>CheckScreenRecord</BaseClassName>
		<ClassDesc>Fields for the refund screens</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundPendGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="650">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Region</ClassName>
		<BaseClassName>Location</BaseClassName>
		<ClassDesc>Region</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Region</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Region file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Region file maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="651">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RegionField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Region ID</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Region</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="655">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Request</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Brochure Requests</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Request</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Enter brochure requests.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Entering a value in the "Code" field (ie., IATA number for Agencies) will retrieve the Profile Information.
To enter a manual Brochure request, tab past this field.
</paragraph>
<paragraph>
Pressing the lookup
<help-link>
<image>Lookup</image>
</help-link>
button will
display the 
<help-link>
<name>Profile Lookup Screen</name>
<link>record=Profile</link>
<image>Help</image>
</help-link>
where you can select a profile.<br/>
Pressing the form
<help-link>
<image>Form</image>
</help-link>
button will
display the 
<help-link>
<name>Profile Maintenance Screen</name>
<link>record=Profile</link>
<image>Help</image>
</help-link>
where you can enter, lookup, or change a profile.
Any changes to the main record is reflected in the current
brochure request.
</paragraph>
<paragraph>
The
<help-link>
<name>Send Via</name>
<link>record=SendVia</link>
<image>Help</image>
</help-link>
popup box can be
used to select the method to mail brochures, or to group
brochure requests so they will not auto-print with the general
brochure requests. This field defaults to the value in the
<help-link>
<name>Agency Control File</name>
<link>record=ProfileControl</link>
<image>Help</image>
</help-link>
the first time
this screen is entered.
</paragraph>
<paragraph>
The "Bundle" and "Quantity" fields can be used to select a
<help-link>
<name>bundle</name>
<link>record=Bundle</link>
<image>Help</image>
</help-link>
of brochures to mail.
These fields also default to the
<help-link>
<name>Agency Control File</name>
<link>record=ProfileControl</link>
<image>Help</image>
</help-link>
values for the
first brochure request.
</paragraph>
<paragraph>
The Text field can be used to enter free text to appear on
the brochure request label.
</paragraph>
<paragraph>
The
<help-button>
<name>Request Detail</name>
<link>record=record=RequestHistory</link>
<image>Help</image>
</help-button>
button
brings up the
<help-link>
<name>Brochure Request History Display Screen</name>
<link>record=RequestHistory</link>
<image>Help</image>
</help-link>
which displays the brochures mailed to this
agency or passenger in the past. The history screen tracks
<help-link>
<name>bundle</name>
<link>record=Bundle</link>
<image>Help</image>
</help-link>
and individual
<help-link>
<name>brochures</name>
<link>record=Item</link>
<image>Help</image>
</help-link>
mailed.
</paragraph>
<paragraph>
<bold>Note:</bold> If you are requesting brochures from a web-browser (html),
you will have a different version of
<help-link>
<name>brochure requests</name>
<link>screen=RequestHtmlScreen</link>
<image>Help</image>
</help-link>
and if you are running this as an applet, you will have the thin version of the
<help-link>
<name>brochure requests</name>
<link>screen=PopupMainScreen</link>
<image>Help</image>
</help-link> program.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="656">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestCannedButton</ClassName>
		<BaseClassName>SCannedBox</BaseClassName>
		<ClassDesc><![CDATA[A canned button that does the action on the agency or pax file depending on the A/P field	]]></ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>RequestsScreen</ClassSourceFile>
		<ClassType>ScreenField</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="657">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc>Control File</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>RequestControl</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Defaults and system variables for the brochure request system.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter and change variables pertaining to brochure requests.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="658">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Brochure request detail</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>RequestDetail</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Request detail entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the individual brochures to send on this request.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="659">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHistory</ClassName>
		<BaseClassName>Request</BaseClassName>
		<ClassDesc>Brochure Request History</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>RequestHistory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Brochure Request history display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the brochures mailed to this profile.
</paragraph>
<paragraph>
To display the individual brochures mailed, press the
<help-button>
  <name>Detail</name>
  <link>record=RequestHistoryDetail</link>
  <image>Grid</image>
</help-button>
button.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="660">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHistoryDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Brochure Request Detail History</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>RequestHistory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Brochure Request Detail History display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the actual items mailed on this request.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="661">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestInput</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Input Fields</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>RequestInput</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="662">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestInputDisplay</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Brochure Req detail display</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>RequestInputDisplay</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="663">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Brochure Requests</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>RequestScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter brochure requests.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Entering a value in the "Code" field (ie., IATA number for Agencies) will retrieve the Profile Information.
To enter a manual Brochure request, tab past this field.
</paragraph>
<paragraph>
Pressing the lookup
<help-link>
<image>Lookup</image>
</help-link>
button will
display the 
<help-link>
<name>Profile Lookup Screen</name>
<link>record=Profile</link>
<image>Help</image>
</help-link>
where you can select a profile.<br/>
Pressing the form
<help-link>
<image>Form</image>
</help-link>
button will
display the 
<help-link>
<name>Profile Maintenance Screen</name>
<link>record=Profile</link>
<image>Help</image>
</help-link>
where you can enter, lookup, or change a profile.
Any changes to the main record is reflected in the current
brochure request.
</paragraph>
<paragraph>
The
<help-link>
<name>Send Via</name>
<link>record=SendVia</link>
<image>Help</image>
</help-link>
popup box can be
used to select the method to mail brochures, or to group
brochure requests so they will not auto-print with the general
brochure requests. This field defaults to the value in the
<help-link>
<name>Agency Control File</name>
<link>record=ProfileControl</link>
<image>Help</image>
</help-link>
the first time
this screen is entered.
</paragraph>
<paragraph>
The "Bundle" and "Quantity" fields can be used to select a
<help-link>
<name>bundle</name>
<link>record=Bundle</link>
<image>Help</image>
</help-link>
of brochures to mail.
These fields also default to the
<help-link>
<name>Agency Control File</name>
<link>record=ProfileControl</link>
<image>Help</image>
</help-link>
values for the
first brochure request.
</paragraph>
<paragraph>
The Text field can be used to enter free text to appear on
the brochure request label.
</paragraph>
<paragraph>
The
<help-button>
<name>Request Detail</name>
<link>record=record=RequestHistory</link>
<image>Help</image>
</help-button>
button
brings up the
<help-link>
<name>Brochure Request History Display Screen</name>
<link>record=RequestHistory</link>
<image>Help</image>
</help-link>
which displays the brochures mailed to this
agency or passenger in the past. The history screen tracks
<help-link>
<name>bundle</name>
<link>record=Bundle</link>
<image>Help</image>
</help-link>
and individual
<help-link>
<name>brochures</name>
<link>record=Item</link>
<image>Help</image>
</help-link>
mailed.
</paragraph>
<paragraph>
<bold>Note:</bold> If you are requesting brochures from a web-browser (html),
you will have a different version of
<help-link>
<name>brochure requests</name>
<link>screen=RequestHtmlScreen</link>
<image>Help</image>
</help-link>
and if you are running this as an applet, you will have the thin version of the
<help-link>
<name>brochure requests</name>
<link>screen=PopupMainScreen</link>
<image>Help</image>
</help-link> program.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Request</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="664">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Brochure Requests</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>RequestScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter brochure requests.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Entering a value in the "Code" field (ie., IATA number for Agencies) will retrieve the Profile Information.
To enter a manual Brochure request, tab past this field.
</paragraph>
<paragraph>
Pressing the lookup
<help-link>
<image>Lookup</image>
</help-link>
button will
display the 
<help-link>
<name>Profile Lookup Screen</name>
<link>record=Profile</link>
<image>Help</image>
</help-link>
where you can select a profile.<br/>
Pressing the form
<help-link>
<image>Form</image>
</help-link>
button will
display the 
<help-link>
<name>Profile Maintenance Screen</name>
<link>record=Profile</link>
<image>Help</image>
</help-link>
where you can enter, lookup, or change a profile.
Any changes to the main record is reflected in the current
brochure request.
</paragraph>
<paragraph>
The
<help-link>
<name>Send Via</name>
<link>record=SendVia</link>
<image>Help</image>
</help-link>
popup box can be
used to select the method to mail brochures, or to group
brochure requests so they will not auto-print with the general
brochure requests. This field defaults to the value in the
<help-link>
<name>Agency Control File</name>
<link>record=ProfileControl</link>
<image>Help</image>
</help-link>
the first time
this screen is entered.
</paragraph>
<paragraph>
The "Bundle" and "Quantity" fields can be used to select a
<help-link>
<name>bundle</name>
<link>record=Bundle</link>
<image>Help</image>
</help-link>
of brochures to mail.
These fields also default to the
<help-link>
<name>Agency Control File</name>
<link>record=ProfileControl</link>
<image>Help</image>
</help-link>
values for the
first brochure request.
</paragraph>
<paragraph>
The Text field can be used to enter free text to appear on
the brochure request label.
</paragraph>
<paragraph>
The
<help-button>
<name>Request Detail</name>
<link>record=record=RequestHistory</link>
<image>Help</image>
</help-button>
button
brings up the
<help-link>
<name>Brochure Request History Display Screen</name>
<link>record=RequestHistory</link>
<image>Help</image>
</help-link>
which displays the brochures mailed to this
agency or passenger in the past. The history screen tracks
<help-link>
<name>bundle</name>
<link>record=Bundle</link>
<image>Help</image>
</help-link>
and individual
<help-link>
<name>brochures</name>
<link>record=Item</link>
<image>Help</image>
</help-link>
mailed.
</paragraph>
<paragraph>
<bold>Note:</bold> If you are requesting brochures from a web-browser (html),
you will have a different version of
<help-link>
<name>brochure requests</name>
<link>screen=RequestHtmlScreen</link>
<image>Help</image>
</help-link>
and if you are running this as an applet, you will have the thin version of the
<help-link>
<name>brochure requests</name>
<link>screen=PopupMainScreen</link>
<image>Help</image>
</help-link> program.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Request</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="665">
		<LastChanged>2012-04-12T21:09:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RoomConverter</ClassName>
		<BaseClassName>FieldConverter</BaseClassName>
		<ClassDesc>Convert Pax in room to rooms</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>BookingPax</ClassSourceFile>
		<ClassType>Converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="666">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Salesperson</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Salesperson</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Salesperson</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Salespeople mainteance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter salesperson information.
</paragraph>
<paragraph>
Salesperson's territories are entered in the
<help-link>
<name>SCF</name>
<link>record=SCF</link>
<image>Help</image>
</help-link>
file.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="667">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SalespersonField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Salesperson</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="668">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SalesRegion</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Sales Region</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SalesRegion</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Sales region maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Descriptions of the sales regions.
</paragraph>
<paragraph>
Sales Regions are designated in the
<help-link>
<name>SCF</name>
<link>record=SCF</link>
<image>Help</image>
</help-link>
file.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="669">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SalesRegionField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SalesRegion</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="671">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEntryScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen Fields</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>BkEntTour</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="674">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SCF</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>SCF Control</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SCF</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Zip code range maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The SCF is the first 3 digit of U.S. and Canadian postal codes.
</paragraph>
<paragraph>
    Enter a starting SCF number; If any SCF records contain this
    range, they are read, otherwise you may enter a new SCF
    record. 
</paragraph>
<paragraph>
This file contains Salesperson's areas, Sales territories, and UPS and USPS postal zones.
</paragraph>
<paragraph>
    <bold>Note:</bold> When entering the SCF area description, always include
    the state code at the end, for state sales analysis. (ie., Los
    Angeles, CA)
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="675">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ScfFrom</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Zip SCF From</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SCF</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="676">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ScfTo</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Zip Scf To</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SCF</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="688">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SeatChoice</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Seat choice</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.shared</ClassPackage>
		<ClassSourceFile>SeatChoice</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Flight seat preference.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Flight seat preferences.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="689">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SeatChoiceField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.shared</ClassPackage>
		<ClassSourceFile>SeatChoiceField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="693">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SendVia</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Send Via Codes</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SendVia</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Shipping method maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Descriptions of all possible shipping methods.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="694">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SendViaField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Send Via Code</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SendVia</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="696">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetAgencyCommHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Set up the agency commission %</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.event</ClassPackage>
		<ClassSourceFile>SetAgencyCommHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="697">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetBrocDetailHandler</ClassName>
		<BaseClassName>FieldReSelectHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>SetBrocDetailHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="698">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetCrDrTypeHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[Set this A/R Trx to a Credit or Debit Memo depending on whether it
is positive or negative.]]></ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>CrDrGridScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="701">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetupBrocDetailHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>SetupBrocDetailHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="705">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SmokerField</ClassName>
		<BaseClassName>BooleanThreeStateField</BaseClassName>
		<ClassDesc>Special 3 state Yes/No/null popup control for this Yes/No field</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.field</ClassPackage>
		<ClassSourceFile>SmokerField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="709">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SourceCrossRef</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Source Cross-Reference Report</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.xref</ClassPackage>
		<ClassSourceFile>SourceCrossRef</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Ledger source cross-reference.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program prints an audit-trail of all transactions entered
into the general ledger. The entries are printed in
transaction-date order within each source code. This organizes all
the transactions by their source code (ie., AR, AP, PR, etc.). 
</paragraph>
<paragraph>
You will be asked to enter the following information (all optional):
</paragraph>
<item-list>
<item>A starting and ending source code.</item>
<item>Beginning and ending transaction date.</item>
<item>Beginning and ending transaction entry date.</item>
</item-list>
<paragraph>
This is the report to use to print auto-posted transaction from each sub-system.
</paragraph>
<paragraph>
The posting codes for the sub-systems are:
</paragraph>
<item-list>
<item>accctrec - Accts/Rec</item>
<item>acctpay - Accts/Pay</item>
<item>assetdr - Asset Debt System</item>
<item>air - Ticketing System</item>
<item>payroll - Payroll System</item>
</item-list>
<paragraph>
This report will print a sub-total for each source code and a grand total for all the transactions.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="710">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SourceCrossRefFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Footing</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.xref</ClassPackage>
		<ClassSourceFile>SourceCrossRef</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="711">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SourceCrossRefHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Header lines</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.xref</ClassPackage>
		<ClassSourceFile>SourceCrossRef</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="712">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SourceCrossRefToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.xref</ClassPackage>
		<ClassSourceFile>SourceCrossRef</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="713">
		<LastChanged>2012-04-02T08:19:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SpecialFormatField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc><![CDATA[Special formats:
This special format is added as an XML tag on F/S output.]]></ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>SpecialFormatField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="719">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>State</ClassName>
		<BaseClassName>Location</BaseClassName>
		<ClassDesc>States</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>State</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>States or Provicences within Countries.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
States or Provicences within Countries.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="720">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StateField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>State</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="721">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StateGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>States</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>StateScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>States or Provicences within Countries.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
States or Provicences within Countries.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>State</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="722">
		<LastChanged>2012-04-02T08:19:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StatementFormatField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc><![CDATA[Statement format:
(C)olumnar
(R)atio]]></ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>StatementFormatField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="723">
		<LastChanged>2012-04-02T08:19:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StatementNumberField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc><![CDATA[Number to display on Financial Statement:
(T)o-date
(N)et change in period]]></ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>StatementNumberField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="724">
		<LastChanged>2010-03-17T15:20:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StatementTypeField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc><![CDATA[Statement type:
(B)alance sheet
(I)ncome statement
null=Other]]></ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>StatementTypeField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="725">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StateRadioConverter</ClassName>
		<BaseClassName>RadioConverter</BaseClassName>
		<ClassDesc>State Tax Code Radio Button</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.tax</ClassPackage>
		<ClassSourceFile>StateRadioConverter</ClassSourceFile>
		<ClassType>Converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="726">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StateScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>States</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>StateScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>States or Provicences within Countries.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
States or Provicences within Countries.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>State</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="736">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TaxRate</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Tax Rates</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TaxRate</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tax rate maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tax rate display and maintenance.
</paragraph>
<paragraph>
To display the tax rate for a particuar category, click either the Federal Taxes radio button
or the State Taxes button (enter a state to display). Then select the Maritial status popup box.
</paragraph>
<paragraph>
In the grid, enter the starting annual pay amount and the tax rate that applies to amounts over this cutoff amount.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="737">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TaxRateGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Tax Rates</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.tax</ClassPackage>
		<ClassSourceFile>TaxRateGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Tax rate maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tax rate display and maintenance.
</paragraph>
<paragraph>
To display the tax rate for a particuar category, click either the Federal Taxes radio button
or the State Taxes button (enter a state to display). Then select the Maritial status popup box.
</paragraph>
<paragraph>
In the grid, enter the starting annual pay amount and the tax rate that applies to amounts over this cutoff amount.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TaxRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="738">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TaxRateScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Tax Rates</ClassDesc>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.tax</ClassPackage>
		<ClassSourceFile>TaxRateScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Tax rate maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tax rate display and maintenance.
</paragraph>
<paragraph>
To display the tax rate for a particuar category, click either the Federal Taxes radio button
or the State Taxes button (enter a state to display). Then select the Maritial status popup box.
</paragraph>
<paragraph>
In the grid, enter the starting annual pay amount and the tax rate that applies to amounts over this cutoff amount.
</paragraph>
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TaxRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="739">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Ten99Footing</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>1099 Printing</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ten99</ClassPackage>
		<ClassSourceFile>Ten99Report</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="740">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Ten99Heading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>1099 Printing</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ten99</ClassPackage>
		<ClassSourceFile>Ten99Report</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="741">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Ten99Report</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>1099 Printing</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ten99</ClassPackage>
		<ClassSourceFile>Ten99Report</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the 1099 reports at year-end.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
   Enter a starting and ending vendor number, a starting and
    ending check date (usually the range for last year) and whether
    you want the check detail to print. 
</paragraph>
<paragraph>
    The system will read thru the vendor file, stopping at each
    vendor with "Y" in the "Independent Contractor" field. Then the
    payment history of every invoice for this vendor will be
    searched for payments made in the entered range. The total, and
    optionally the detail, will print on the report.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="742">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Ten99Toolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>1099 Printing</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ten99</ClassPackage>
		<ClassSourceFile>Ten99Report</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="744">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAir</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Booking Ticket Segment Detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingAir</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking air detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking air information can be entered and changed here.
</paragraph>
<paragraph>
Enter a flight and departure date.<br/>
You can also set the cabin class and the rate type for the flight.<br/>
The system will automatically retrieve the flight rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Flight Mainteance</name>
<link>record=Air</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Flight pricing</name>
<link>record=AirPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Flight inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="745">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.report</ClassPackage>
		<ClassSourceFile>TicketReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="746">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirHeader</ClassName>
		<BaseClassName>BookingSub</BaseClassName>
		<ClassDesc>Booking Ticket Header Detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingAirHeader</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Booking Air Header maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking hotel information can be entered and changed here.
</paragraph>
<paragraph>
Enter a hotel, check in date, and the number of nights.<br/>
You can also set the room class and the rate type for the hotel.<br/>
On the right side of the screen you can select the meals that the hotel should supply. There are fields for the number of meals and the day the meal should be served (where day 0 is the check-in date).<br/>
The system will automatically retrieve the hotel rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Hotel Mainteance</name>
<link>record=Hotel</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Room pricing</name>
<link>record=HotelPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button>, <help-button>
<name>Meal pricing</name>
<link>record=HotelMealPricing</link>
<image>images/tour/buttons/Meal.gif</image>
</help-button>, and <help-button>
<name>Room inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="747">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.report</ClassPackage>
		<ClassSourceFile>TicketReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="748">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketReport</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Ticket analysis</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.report</ClassPackage>
		<ClassSourceFile>TicketReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Ticket analysis report</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This report filters out tickets by several criteria for analysis.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="749">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketReportOrderField</ClassName>
		<BaseClassName>ShortField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.report</ClassPackage>
		<ClassSourceFile>TicketReportOrderField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="750">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.report</ClassPackage>
		<ClassSourceFile>TicketReport</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="751">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.report</ClassPackage>
		<ClassSourceFile>TicketReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="752">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketTrx</ClassName>
		<BaseClassName>ApTrx</BaseClassName>
		<ClassDesc>Airline Tickets</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TicketTrx</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Airline Tickets</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Ticket transactions are very similar to A/P transactions
with a few extra transactions to deal with.
</paragraph>
<paragraph>
When a tour is finalized, the transaction is similar to a normal A/P transaction.
Typically, a ticket is confirmed upon finalization.
<acct-trx>
<date>11/15/07 (Departure date)</date>
<debit>
<description>Cost of Air</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Prepaid ticket - Air - Estimate</description>
<amount>845.22</amount>
</credit>
<comment>Finalization - reserve ticket - Similar to a normal A/P transaction</comment>
</acct-trx>
</paragraph>
<paragraph>
When the ticket is actually issued to the individual passengers, the transaction is similar to a transaction for an A/P invoice:
<acct-trx>
<date>10/31/07</date>
<debit>
<description>Prepaid ticket - Air - Estimate</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Accounts Payable - Air</description>
<amount>845.22</amount>
</credit>
<comment>Issue ticket.</comment>
</acct-trx>
</paragraph>
<paragraph>
If the ARC is used to clear tickets, a transaction is posted to reflect the transfer of the liabilty to ARC:
<acct-trx>
<date>11/2/07</date>
<debit>
<description>Accounts Payable - Air</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Accounts Payable - ARC</description>
<amount>845.22</amount>
</credit>
<comment>ARC Report transmission</comment>
</acct-trx>
</paragraph>
<paragraph>
When you actually pay the ARC (by bank transfer), just clear out the ARC liability:
<acct-trx>
<date>11/4/90</date>
<debit>
<description>Accounts Payable - ARC</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Cash</description>
<amount>845.22</amount>
</credit>
<comment>Pay ARC</comment>
</acct-trx>
</paragraph>
<paragraph>
<bold>Note:</bold> The dates are not in order here. The first transaction is posted last (at the departure date).
This leaves a prepaid ticket asset on the books between the issue date and the departure date.
</paragraph>
<paragraph>
Tickets which have been changed or cancelled are also
included on this report. The resulting G/L transactions is
similar to the transaction for tickets.
</paragraph>
<paragraph>
<bold>Note:</bold> Although air purchased with a credit card is more
likely to be paid for with an MCO, it is possible for the
credit portion of the ticket to be validated by a wholesaler.
For example, in the previous example, The ticket face value
(with taxes) was 1075.00, leaving $75.00 of commissions to be
collected from the ARC. The $1075 was colected directly from
the customer by using the credit form on the ticket. The Issue
transaction would be the same:
</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Prepaid Tickets</description>
<amount>1000.00</amount>
</debit>
<credit>
<description>Accounts Receivable - ARC</description>
<amount>1000.00</amount>
</credit>
</acct-trx>
<paragraph>The ARC transaction would be:</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Cash</description>
<amount>75.00</amount>
</debit>
<credit>
<description>Accounts Receivable - ARC</description>
<amount>75.00</amount>
</credit>
</acct-trx>
<paragraph>
Because there would be no cash payment, a debit memo must be
entered into A/R, with the distribution reducing the receivable
to the ARC:
</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Accounts Receivable - ARC</description>
<amount>1075.00</amount>
</debit>
<credit>
<description>Accounts Receivable - FITs</description>
<amount>1075.00</amount>
</credit>
</acct-trx>
<paragraph>
In any case, the ARC Receivable account is only a control
account, all transactions will eventually zero out this
account.
</paragraph>
<paragraph>
<bold>Note:</bold> If you change the ARC summary account be careful try
to do it before you do the A/R posting. It is possible to post
issued tickets until the end of a period (with the original ARC
acct), then change the ARC acct and run the ARC report with the
new ARC number. All transactions after the end of the period
would have the new ARC A/R acct. You would then use the ticket
tranaction review report to set up the distribution for the ARC
payment.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="753">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketTrxGridScreen</ClassName>
		<BaseClassName>VendorApTrxGridScreen</BaseClassName>
		<ClassDesc>Airline Tickets</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.ticket</ClassPackage>
		<ClassSourceFile>TicketTrxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Airline Tickets</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Ticket transactions are very similar to A/P transactions
with a few extra transactions to deal with.
</paragraph>
<paragraph>
When a tour is finalized, the transaction is similar to a normal A/P transaction.
Typically, a ticket is confirmed upon finalization.
<acct-trx>
<date>11/15/07 (Departure date)</date>
<debit>
<description>Cost of Air</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Prepaid ticket - Air - Estimate</description>
<amount>845.22</amount>
</credit>
<comment>Finalization - reserve ticket - Similar to a normal A/P transaction</comment>
</acct-trx>
</paragraph>
<paragraph>
When the ticket is actually issued to the individual passengers, the transaction is similar to a transaction for an A/P invoice:
<acct-trx>
<date>10/31/07</date>
<debit>
<description>Prepaid ticket - Air - Estimate</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Accounts Payable - Air</description>
<amount>845.22</amount>
</credit>
<comment>Issue ticket.</comment>
</acct-trx>
</paragraph>
<paragraph>
If the ARC is used to clear tickets, a transaction is posted to reflect the transfer of the liabilty to ARC:
<acct-trx>
<date>11/2/07</date>
<debit>
<description>Accounts Payable - Air</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Accounts Payable - ARC</description>
<amount>845.22</amount>
</credit>
<comment>ARC Report transmission</comment>
</acct-trx>
</paragraph>
<paragraph>
When you actually pay the ARC (by bank transfer), just clear out the ARC liability:
<acct-trx>
<date>11/4/90</date>
<debit>
<description>Accounts Payable - ARC</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Cash</description>
<amount>845.22</amount>
</credit>
<comment>Pay ARC</comment>
</acct-trx>
</paragraph>
<paragraph>
<bold>Note:</bold> The dates are not in order here. The first transaction is posted last (at the departure date).
This leaves a prepaid ticket asset on the books between the issue date and the departure date.
</paragraph>
<paragraph>
Tickets which have been changed or cancelled are also
included on this report. The resulting G/L transactions is
similar to the transaction for tickets.
</paragraph>
<paragraph>
<bold>Note:</bold> Although air purchased with a credit card is more
likely to be paid for with an MCO, it is possible for the
credit portion of the ticket to be validated by a wholesaler.
For example, in the previous example, The ticket face value
(with taxes) was 1075.00, leaving $75.00 of commissions to be
collected from the ARC. The $1075 was colected directly from
the customer by using the credit form on the ticket. The Issue
transaction would be the same:
</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Prepaid Tickets</description>
<amount>1000.00</amount>
</debit>
<credit>
<description>Accounts Receivable - ARC</description>
<amount>1000.00</amount>
</credit>
</acct-trx>
<paragraph>The ARC transaction would be:</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Cash</description>
<amount>75.00</amount>
</debit>
<credit>
<description>Accounts Receivable - ARC</description>
<amount>75.00</amount>
</credit>
</acct-trx>
<paragraph>
Because there would be no cash payment, a debit memo must be
entered into A/R, with the distribution reducing the receivable
to the ARC:
</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Accounts Receivable - ARC</description>
<amount>1075.00</amount>
</debit>
<credit>
<description>Accounts Receivable - FITs</description>
<amount>1075.00</amount>
</credit>
</acct-trx>
<paragraph>
In any case, the ARC Receivable account is only a control
account, all transactions will eventually zero out this
account.
</paragraph>
<paragraph>
<bold>Note:</bold> If you change the ARC summary account be careful try
to do it before you do the A/R posting. It is possible to post
issued tickets until the end of a period (with the original ARC
acct), then change the ARC acct and run the ARC report with the
new ARC number. All transactions after the end of the period
would have the new ARC A/R acct. You would then use the ticket
tranaction review report to set up the distribution for the ARC
payment.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TicketTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="754">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TicketTrxScreen</ClassName>
		<BaseClassName>ApTrxScreen</BaseClassName>
		<ClassDesc>Airline Tickets</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.ticket</ClassPackage>
		<ClassSourceFile>TicketTrxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Airline Tickets</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Ticket transactions are very similar to A/P transactions
with a few extra transactions to deal with.
</paragraph>
<paragraph>
When a tour is finalized, the transaction is similar to a normal A/P transaction.
Typically, a ticket is confirmed upon finalization.
<acct-trx>
<date>11/15/07 (Departure date)</date>
<debit>
<description>Cost of Air</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Prepaid ticket - Air - Estimate</description>
<amount>845.22</amount>
</credit>
<comment>Finalization - reserve ticket - Similar to a normal A/P transaction</comment>
</acct-trx>
</paragraph>
<paragraph>
When the ticket is actually issued to the individual passengers, the transaction is similar to a transaction for an A/P invoice:
<acct-trx>
<date>10/31/07</date>
<debit>
<description>Prepaid ticket - Air - Estimate</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Accounts Payable - Air</description>
<amount>845.22</amount>
</credit>
<comment>Issue ticket.</comment>
</acct-trx>
</paragraph>
<paragraph>
If the ARC is used to clear tickets, a transaction is posted to reflect the transfer of the liabilty to ARC:
<acct-trx>
<date>11/2/07</date>
<debit>
<description>Accounts Payable - Air</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Accounts Payable - ARC</description>
<amount>845.22</amount>
</credit>
<comment>ARC Report transmission</comment>
</acct-trx>
</paragraph>
<paragraph>
When you actually pay the ARC (by bank transfer), just clear out the ARC liability:
<acct-trx>
<date>11/4/90</date>
<debit>
<description>Accounts Payable - ARC</description>
<amount>845.22</amount>
</debit>
<credit>
<description>Cash</description>
<amount>845.22</amount>
</credit>
<comment>Pay ARC</comment>
</acct-trx>
</paragraph>
<paragraph>
<bold>Note:</bold> The dates are not in order here. The first transaction is posted last (at the departure date).
This leaves a prepaid ticket asset on the books between the issue date and the departure date.
</paragraph>
<paragraph>
Tickets which have been changed or cancelled are also
included on this report. The resulting G/L transactions is
similar to the transaction for tickets.
</paragraph>
<paragraph>
<bold>Note:</bold> Although air purchased with a credit card is more
likely to be paid for with an MCO, it is possible for the
credit portion of the ticket to be validated by a wholesaler.
For example, in the previous example, The ticket face value
(with taxes) was 1075.00, leaving $75.00 of commissions to be
collected from the ARC. The $1075 was colected directly from
the customer by using the credit form on the ticket. The Issue
transaction would be the same:
</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Prepaid Tickets</description>
<amount>1000.00</amount>
</debit>
<credit>
<description>Accounts Receivable - ARC</description>
<amount>1000.00</amount>
</credit>
</acct-trx>
<paragraph>The ARC transaction would be:</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Cash</description>
<amount>75.00</amount>
</debit>
<credit>
<description>Accounts Receivable - ARC</description>
<amount>75.00</amount>
</credit>
</acct-trx>
<paragraph>
Because there would be no cash payment, a debit memo must be
entered into A/R, with the distribution reducing the receivable
to the ARC:
</paragraph>
<acct-trx>
<date>12/31/90</date>
<debit>
<description>Accounts Receivable - ARC</description>
<amount>1075.00</amount>
</debit>
<credit>
<description>Accounts Receivable - FITs</description>
<amount>1075.00</amount>
</credit>
</acct-trx>
<paragraph>
In any case, the ARC Receivable account is only a control
account, all transactions will eventually zero out this
account.
</paragraph>
<paragraph>
<bold>Note:</bold> If you change the ARC summary account be careful try
to do it before you do the A/R posting. It is possible to post
issued tickets until the end of a period (with the original ARC
acct), then change the ARC acct and run the ARC report with the
new ARC number. All transactions after the end of the period
would have the new ARC A/R acct. You would then use the ticket
tranaction review report to set up the distribution for the ARC
payment.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TicketTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="756">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TimeTrx</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Timecard entry</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PrTimeTrx</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Employee timecard entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter Employee Timecards.
</paragraph> 
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="757">
		<LastChanged>2012-04-01T09:50:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TimeTrxGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Timecard entry</ClassDesc>
		<ClassProjectID>1,048,622</ClassProjectID>
		<ClassPackage>.report.payroll</ClassPackage>
		<ClassSourceFile>PrTimeTrxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Employee timecard entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter Employee Timecards.
</paragraph> 
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TimeTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="758">
		<LastChanged>2012-04-01T09:50:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TimeTrxHeader</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Header Screen for time trx</ClassDesc>
		<ClassProjectID>1,048,622</ClassProjectID>
		<ClassPackage>.report.payroll</ClassPackage>
		<ClassSourceFile>PrTimeTrxHeader</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="759">
		<LastChanged>2012-04-01T09:50:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TimeTrxScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Timecard entry</ClassDesc>
		<ClassProjectID>1,048,622</ClassProjectID>
		<ClassPackage>.report.payroll</ClassPackage>
		<ClassSourceFile>PrTimeTrxScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Employee timecard entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to enter Employee Timecards.
</paragraph> 
<paragraph>
<bold>Note:</bold> Since the payroll system is not complete these values are not used yet.
</paragraph> </ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TimeTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="760">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TitleField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Title (popup)</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.field</ClassPackage>
		<ClassSourceFile>TitleField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="762">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Tour</ClassName>
		<BaseClassName>Job</BaseClassName>
		<ClassDesc>Tour information</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Tour</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain>Tour information maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tour information entry screen.
</paragraph>
<paragraph>
Select a tour and a departure date to start the booking process.<br/>
 You may select a tour from the drop-down list or click on the <help-link>
<name>Tour Lookup</name>
<image>Lookup</image>
<link>record=TourHeader</link>
</help-link> button to use the tour header lookup screen.<br/>
Enter a departure date to select a tour header and initiate a booking.<br/>
<bold>Note:</bold> For Series Tours, you may press the <help-button>
<name> </name>
<image>Lookup</image>
</help-button> button next to the departure date to select a series departure.
</paragraph>
<paragraph>
After selecting a tour header and a departure date, the tour screen will be populated from information in the <help-link>
<name>Tour Header</name>
<link>record=TourHeader</link>
</help-link> and the <help-link>
<name>Tour Class</name>
<link>record=TourClass</link>
</help-link> files. Any of these fields may be changed.<br/>
Also, all of the detail screens will be populated depending on the detail information in the <help-link>
<name>Tour Header Option Detail</name>
<link>record=TourHeaderOption</link>
</help-link>.
</paragraph>
<paragraph>
If there are options that require answers, the <help-button>
<name>Options</name>
<image>images/tour/buttons/Options.gif</image>
<link>record=BookingAnswer</link>
</help-button> button will be enabled. If there is any <italic>required</italic> information, you will automatically be switched to the Booking Option<help-button>
<name>Booking Option</name>
<image>images/tour/buttons/Options.gif</image>
<link>record=BookingAnswer</link>
</help-button> screen.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="763">
		<LastChanged>2013-01-22T05:51:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourApTrxGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>Tour A/P detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.acctpay</ClassPackage>
		<ClassSourceFile>TourApTrxGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display the A/P detail by tour.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter a tour to display the current A/P transactions.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="765">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourClass</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Tour class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourClass</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour class and event maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
General tour information such as final payment due dates, default product classes, etc.
</paragraph>
<paragraph>
This information is entered in the tour header.
</paragraph>
<paragraph>
For each tour class you may also enter <help-button>
<name>Event schedule</name>
<link>record=TourEventSchedule</link>
<image>Grid</image>
</help-button> detail.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="766">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourClassField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Tour Header Class (contains accounting info, etc..)</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourClass</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="767">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourCodeConverter</ClassName>
		<BaseClassName>FieldConverter</BaseClassName>
		<ClassDesc>Filter incoming tour code</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>TourCodeConverter</ClassSourceFile>
		<ClassType>Converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="768">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourCostAnalysis</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Tour cost analysis report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourcost</ClassPackage>
		<ClassSourceFile>TourCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the Tour Cost Analysis for a range of tours.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to analyze costs for each tour. 
</paragraph>
<paragraph>
This program prints all the A/P transactions by tour.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="769">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourCostAnalysisFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Tour cost analysis report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourcost</ClassPackage>
		<ClassSourceFile>TourCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="770">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourCostAnalysisHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Tour cost analysis report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourcost</ClassPackage>
		<ClassSourceFile>TourCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="772">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourCostAnalysisToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Tour cost analysis report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourcost</ClassPackage>
		<ClassSourceFile>TourCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="774">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Tour detail report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourdet</ClassPackage>
		<ClassSourceFile>TourDetailReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="775">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Tour detail report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourdet</ClassPackage>
		<ClassSourceFile>TourDetailReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="776">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailReport</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Tour detail report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourdet</ClassPackage>
		<ClassSourceFile>TourDetailReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the tour A/P detail report.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program lets you print the current A/P status of any range of tours.
</paragraph>
<paragraph>
Enter the filters for the tours that you want to print. If you
want to include estimates in the print-out, answer Yes to the
last question. If you include estimates, the estimate amount will
be includes as the amount and balance.
</paragraph>
<paragraph>
The system prints information on all the invoices, credit
invoices, credit memos, prepayment requests, and departure
estimates for this tour.
</paragraph>
<paragraph>
They will be displayed by the starting service date.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="777">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Tour detail report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourdet</ClassPackage>
		<ClassSourceFile>TourDetailReport</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="779">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventSchedule</ClassName>
		<BaseClassName>PropertiesRecord</BaseClassName>
		<ClassDesc>Tour operation schedule</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>TourEventSchedule</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour event action scheduler</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Tour event action scheduler specifies the operation parameters for a tour.
</paragraph>
<paragraph>
For this tour class, specify what actions to execute automatically when an <help-link>
<name>event</name>
<link>record=TourEvent</link>
<image>Help</image>
</help-link> occurs. You simply enter the event to trigger on, the action to execute, and whether this task should be executed for all tour classes that are based on this class, or only tours that specify this tour class directly.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="780">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEvent</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Tour event descriptions</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>TourEvent</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour event maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tour events are triggers that occur during the life of a booking and tour.
</paragraph>
<paragraph>
<bold>Booking or Tour</bold> - There are booking events and tour events. Booking events are connected to the customer (such as money received) and Tour events are related to the tour (such as ordering components).
</paragraph>
<paragraph>
<bold>Event Type</bold> - There are events that occur when a booking changes (such as a booking deposit received or notification that all components have been confirmed), and there are events that occur on a specific date. These event are run using the <help-button>
<name>Tour Event Scheduler</name>
<link>record=TourEventSchedule</link>
<image>Form</image>
</help-button>.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="781">
		<LastChanged>2012-03-31T21:39:38</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.field</ClassPackage>
		<ClassSourceFile>TourField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="782">
		<LastChanged>2013-01-22T05:56:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Booking entry</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.lookup</ClassPackage>
		<ClassSourceFile>TourGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking lookup and entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Lookup and enter new bookings.
</paragraph>
<paragraph>
In the booking lookup screen you can search for bookings by Booking, Tour Template, or Tour Departure.
</paragraph>
<paragraph>
The booking entry screen allows you to create and modify a booking.<br/>
You can modify your booking using the following sub-screens:
</paragraph>
<item-list>
<item>
<help-link>
<name>Booking Menu</name>
<link>record=Booking</link>
<image>images/tour/buttons/Menu.gif</image>
</help-link>
</item>
<item><help-link>
<name>Summary</name>
<link>screen=BookingSummaryScreen</link>
<image>images/tour/buttons/Summary.gif</image>
</help-link></item>
<item><help-link>
<name>Agency</name>
<link>screen=BookingAgencyScreen</link>
<image>images/tour/buttons/Agency.gif</image>
</help-link></item>
<item><help-link>
<name>Passengers</name>
<link>record=BookingPax</link>
<image>images/tour/buttons/Passenger.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour</name>
<image>images/tour/buttons/Tour.gif</image>
<link>record=Tour</link>
</help-link>
</item>
<item>
<help-link>
<name>Line items</name>
<link>record=BookingLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Payment history</name>
<link>record=ArTrx</link>
<image>images/tour/buttons/Line.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Options</name>
<link>record=BookingAnswer</link>
<image>images/tour/buttons/Options.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Calendar</name>
<link>screen=BookingCalendar</link>
<image>images/tour/buttons/Calendar.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Product detail</name>
<link>screen=BookingDetailGridScreen</link>
<image>images/tour/buttons/Detail.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Itinerary</name>
<link>screen=BookingItinerary</link>
<image>images/tour/buttons/Itinerary.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Vouchers</name>
<link>screen=TourApTrxGridScreen</link>
<image>images/tour/buttons/Status.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour detail</name>
<link>record=BookingTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Air</name>
<link>record=BookingAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Hotel detail</name>
<link>record=BookingHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Land detail</name>
<link>record=BookingLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Car</name>
<link>record=BookingCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Transportation</name>
<link>record=BookingTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Cruise</name>
<link>record=BookingCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Non-tour items</name>
<link>record=BookingItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-link>
</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Booking</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="783">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderSelectHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>On selection, fake tour cd chg</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>TourHeaderSelectHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="784">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeader</ClassName>
		<BaseClassName>Product</BaseClassName>
		<ClassDesc>Tour Header</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeader</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour header maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Add and maintain Tour Headers.
</paragraph>
<paragraph>
A Tour Header is a template for a booking. When a user selects a Tour Header to use for a booking, the booking
is populated with preferences for tour components (Such as preferred hotel room class) as well as individual tour components (ie., sightseeing, hotels).
</paragraph>
<paragraph>
There are several types of tour headers:
</paragraph>
<item-list>
<item> A Booking Tour Header - This kind of tour header is typically used as a template for booking tours.<br/>
It supplies the booking with parameters for adding components and for pricing the tour.<br/>
There are two main types of booking headers:
<item-list>
<item>
Series Tour Header - This type of tour header has individual departures accessible through the <help-button>
<name>(Series) Tours</name>
<link>record=TourHeader</link>
<image>images/tour/buttons/Tour.gif</image>
</help-button> button.
</item>
<item>
Flexible Tour Header - A template for building tours
</item>
</item-list>
</item> 
<item>
A Vendor module - This kind of module is only used to order a module from a vendor. Typically there
are no detail components.<br/>
Cost is vendor supplied. (Make sure you enter the product COST in the tour pricing screen). Pricing can use any strategy.
</item>
<item>
A Planned module - This module type usually contains pricing and detail components. Individual components are
ordered directly from vendors.
</item>
<item>
A Component package - This module type is used only as a template to supply customized components to a booking.<br/>
Costs come directly from the components.<br/>
Pricing is usually a markup from the component costs or from component pricing.
</item>
</item-list>
<paragraph>
A Tour Header contains an information screen and several detail screens.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
The information screen contains basic information such as the <help-link>
<name>Tour type</name>
<link>record=TourType</link>
<image>Help</image>
</help-link>,
<help-link>
<name>Product Category</name>
<link>record=ProductCategory</link>
<image>Help</image>
</help-link>,
<help-link>
<name>Tour Class</name>
<link>record=TourClass</link>
<image>Help</image>
</help-link>,
<help-link>
<name>Brochure</name>
<link>record=Brochure</link>
<image>Help</image>
</help-link>, and
<help-link>
<name>Initial Product Status</name>
<link>record=ProductStatus</link>
<image>Help</image>
</help-link>.<br/>
<bold>Note:</bold> For tour headers, the Product Status is only relevant for Modular Tours. This will be the initial Booking Detail Product Status for the Module.
</paragraph>
<paragraph>
There are also several detail screens:
</paragraph>
<item-list>
<item><help-button>
<name>Options</name>
<link>record=TourHeaderOption</link>
<image>images/tour/buttons/Options.gif</image>
</help-button> - Main screen for setting up the individual tour detail components</item> 
<item><help-button>
<name>Inventory Detail</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> - Tour header inventory maintenance</item>
<item><help-button>
<name>(Series) Tours</name>
<link>record=TourHeader</link>
<image>images/tour/buttons/Tour.gif</image>
</help-button> - Individial tour departure maintenance (for Series Tours)</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="785">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc>Tour Header Field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeader</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="786">
		<LastChanged>2013-01-22T05:57:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Booking entry</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.lookup</ClassPackage>
		<ClassSourceFile>TourHeaderGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Booking lookup and entry</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Lookup and enter new bookings.
</paragraph>
<paragraph>
In the booking lookup screen you can search for bookings by Booking, Tour Template, or Tour Departure.
</paragraph>
<paragraph>
The booking entry screen allows you to create and modify a booking.<br/>
You can modify your booking using the following sub-screens:
</paragraph>
<item-list>
<item>
<help-link>
<name>Booking Menu</name>
<link>record=Booking</link>
<image>images/tour/buttons/Menu.gif</image>
</help-link>
</item>
<item><help-link>
<name>Summary</name>
<link>screen=BookingSummaryScreen</link>
<image>images/tour/buttons/Summary.gif</image>
</help-link></item>
<item><help-link>
<name>Agency</name>
<link>screen=BookingAgencyScreen</link>
<image>images/tour/buttons/Agency.gif</image>
</help-link></item>
<item><help-link>
<name>Passengers</name>
<link>record=BookingPax</link>
<image>images/tour/buttons/Passenger.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour</name>
<image>images/tour/buttons/Tour.gif</image>
<link>record=Tour</link>
</help-link>
</item>
<item>
<help-link>
<name>Line items</name>
<link>record=BookingLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Payment history</name>
<link>record=ArTrx</link>
<image>images/tour/buttons/Line.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Options</name>
<link>record=BookingAnswer</link>
<image>images/tour/buttons/Options.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Calendar</name>
<link>screen=BookingCalendar</link>
<image>images/tour/buttons/Calendar.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Product detail</name>
<link>screen=BookingDetailGridScreen</link>
<image>images/tour/buttons/Detail.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Itinerary</name>
<link>screen=BookingItinerary</link>
<image>images/tour/buttons/Itinerary.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Vouchers</name>
<link>screen=TourApTrxGridScreen</link>
<image>images/tour/buttons/Status.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Tour detail</name>
<link>record=BookingTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Air</name>
<link>record=BookingAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Hotel detail</name>
<link>record=BookingHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Land detail</name>
<link>record=BookingLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Car</name>
<link>record=BookingCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Transportation</name>
<link>record=BookingTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Cruise</name>
<link>record=BookingCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-link>
</item>
<item>
<help-link>
<name>Non-tour items</name>
<link>record=BookingItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-link>
</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Booking</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="787">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc>Maintenance</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourHeaderScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="788">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderHotel</ClassName>
		<BaseClassName>TourHeaderDetail</BaseClassName>
		<ClassDesc>Tour Hotel Detail</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderHotel</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour header hotel detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Hotel detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The hotel to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Hotel Detail Screen</name>
<link>record=BookingHotel</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="789">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderLand</ClassName>
		<BaseClassName>TourHeaderDetail</BaseClassName>
		<ClassDesc>Land Detail</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderLand</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour header land detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Land</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The Land to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Land Detail Screen</name>
<link>record=BookingLand</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="790">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourList</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Tour List for Display</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeader</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="792">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderLine</ClassName>
		<BaseClassName>TourSub</BaseClassName>
		<ClassDesc>Tour Pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderLine</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour header pricing detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Pricing Line Item</bold> detail.
</paragraph>
<paragraph>
All the fields on this screen are optional:
</paragraph>
<item-list>
<item><bold>Room Type</bold> - Add this item for each passenger in this room type.</item>
<item><bold>Seq. number</bold> - An optional sequence number that determines the order the items will display in the booking</item>
<item><bold>Fully Comm?</bold> - Check this to make this item fully commissionable</item>
<item><bold>Comm. Rate</bold> - If this item is not fully commissionable, this is the commission rate to use</item>
<item><bold>Payment due at</bold> - This item is due at the Final payment date or the deposit due date.</item>
<item><bold>Cost</bold> - Optional cost to use for accounting</item>
</item-list>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> These items are added to the <help-link>
<name>Booking Line Item Screen</name>
<link>record=BookingLine</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="793">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderOption</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Tour product options</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeaderOption</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour product option maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A Tour Header Option is a collection of tour components that can be added to a booking. The components will only be added if the criteria for the option are met, either automatically (For example, a weekend surcharge selected based on the day of the week) or manually (such as a hotel upgrade).
</paragraph>
<paragraph>
These are the detail screens where individual tour components are entered:
</paragraph>
<item-list>
<item>
<help-button>
<name>Option</name>
<link>record=TourHeaderOption</link>
<image>Grid</image>
</help-button> - Options can be nested within other options to create a hierarchy of options.
</item>
<item>
<help-button>
<name>Pricing detail</name>
<link>record=TourHeaderLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> - Booking Pricing Line items
</item>
<item>
<help-button>
<name>Tour (header detail)</name>
<link>record=TourHeaderTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-button> - Detail Modular Tours to add to this tour
</item>
<item>
<help-button>
<name>Air Header</name>
<link>record=TourHeaderAirHeader</link>
<image>images/tour/buttons/AirHeader.gif</image>
</help-button> - Air reservations grouping (ie., Whom the Ticket was ordered from)
</item>
<item>
<help-button>
<name>Air</name>
<link>record=TourHeaderAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-button> - Individual air segments
</item>
<item>
<help-button>
<name>Hotel</name>
<link>record=TourHeaderHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-button>
</item>
<item>
<help-button>
<name>Land</name>
<link>record=TourHeaderLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-button> - Transfers, sightseeing, itinerary paragraphs
</item>
<item>
<help-button>
<name>Car</name>
<link>record=TourHeaderCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-button> - Rental cars
</item>
<item>
<help-button>
<name>Transportation</name>
<link>record=TourHeaderTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-button> - Rail, ferry, etc.
</item>
<item>
<help-button>
<name>Cruise</name>
<link>record=TourHeaderCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-button>
</item>
<item>
<help-button>
<name>Item</name>
<link>record=TourHeaderItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-button> - Non-tour related items
</item>
</item-list>
<paragraph>
In each detail screen, there are two fields that determine how the detail item is added to the booking:
</paragraph>
<item-list>
<item>The <bold>mod code</bold> tells the booking whether to <italic>add</italic>, <italic>delete</italic>, or <italic>replace</italic> the detail item.</item>
<item>The <bold>mod item</bold> tells the booking which previously entered detail item needs to be deleted for "<italic>delete</italic>" or changed for "<italic>modify</italic>" detail items.</item>
</item-list>
<paragraph>
<italic>Note:</italic> Typically if you want to change a product you will use <italic>delete</italic> to delete the detail product and then <italic>add</italic> to add the new item.
<italic>replace</italic> will take the current item and change only the fields that are set. This can be advantagous if you want to change the number of nights for a hotel
without changing the meal, rate, and class. <italic>replace</italic> will not work well if you want to change the hotel, as the default rate, class, etc will be transfered from 
the replaced hotel.
</paragraph>
<paragraph>
The tour header option screen has several fields which are used at the time of booking to determine if the option detail should be added:
</paragraph>
<item-list>
<item>
Ask for answer - This option is a question that will be asked at the time of booking. The option detail items are all the possible answers to this question. This question may be answered in the <help-link>
<name>Booking Option Screen</name>
<link>record=BookingAnswer</link>
</help-link>.</item>
<item>
Always Resolve - This question must be answered by the user (ie., pick a car class). If this box is not checked, the user may or may not answer this question.</item>

<item>Pax class - Only add these option components for passengers in this class of room (<bold>All</bold> means add this for each passenger)</item>

<item>Sequence (Optional) - Places the items in order on the screen.</item>
</item-list>
<paragraph>
<bold>Example 1</bold>: You want to use hotel A for Jan-Jul and
hotel B for Aug-Sep.<br/>
To do is: Enter a tour header option "question": Which hotel?<br/>
Then enter two tour header option "answers" that have the date ranges for each hotel. Then go to the hotel screen for each of these and enter the correct hotel.<br/>
When the booking is made the system will automatically include the correct hotel depending on the tour departure date.
</paragraph>
<paragraph>
<bold>Example 2</bold>: To enter an air-surcharge for
December,<br/>
Enter a tour header option titled: December Air surcharge with a date range of Dec 01-Dec 31.<br/>
Then, enter an additional line item and a modified ticket in the line item and header header detail screens.<br/>
The surcharge (entered in pricing) and modified ticket (entered in ticket entry) will automatically be added to a booking departing in December.
</paragraph>
<paragraph>
<bold>Example 3</bold>: Say you want to give the client the chance to upgrade
their hotel in Tokyo. Enter a tour header option "question": Upgrade to Palace hotel?<br/>
Then enter two tour header option "answers": (Yes and No). (You could also enter date ranges if it was only
available for a certain amount of time) Then you would go to
hotel display for option 1(Yes) and delete the normal
hotel (mod delete) and re-enter the upgraded hotel, then go to tour pricing and add an item, "Hotel upgrade
surcharge" with the surcharge amount.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="794">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourScreen</ClassName>
		<BaseClassName>ProductDetailScreen</BaseClassName>
		<ClassDesc>Tour Maint</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.other.screen</ClassPackage>
		<ClassSourceFile>TourScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="795">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourStatus</ClassName>
		<BaseClassName>BaseDataStatus</BaseClassName>
		<ClassDesc>Tour status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour status maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tour status descriptions.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="796">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourStatusField</ClassName>
		<BaseClassName>BaseStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourStatus</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="797">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourSub</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Tour Sub File</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourSub</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="798">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAir</ClassName>
		<BaseClassName>TourHeaderTransport</BaseClassName>
		<ClassDesc>Tour Ticket Segment Detail</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderAir</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour header air detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Air</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Flight date</bold> - The day of the flight (where day 1 is the tour departure date).</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Air Detail Screen</name>
<link>record=BookingAir</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="799">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAirHeader</ClassName>
		<BaseClassName>TourSub</BaseClassName>
		<ClassDesc>Tour Ticket Header Detail</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderAirHeader</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour header air header detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Air Ticket Header</bold> information.
</paragraph>
<paragraph>
Most of the fields on this screen are used to generate an air ticket for a booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Air Header Screen</name>
<link>record=BookingAirHeader</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="800">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Tour type</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourType</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Tour type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Tour types.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="801">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourTypeField</ClassName>
		<BaseClassName>BitReferenceField</BaseClassName>
		<ClassDesc>Tour Type</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourType</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="804">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Transportation</ClassName>
		<BaseClassName>TransportProduct</BaseClassName>
		<ClassDesc>Transportation</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>Transportation</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Transportation maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Transportation file maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Transportation information. Use the maintenance screen to add and change transportation.
Use the display screen to view all the transportation.
Enter a rate type, class, number of passengers, and date to display transportation pricing.
Checking the "Remote lookup?" box will retrieve transportation prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering transportation, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
There are several detail screens for transportation:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=TransportationPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="805">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationClass</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Base product class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationClass</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Product classes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product classes are varing service levels, such as first class, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="806">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationPricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc>Transportation pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationPricin</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Transportation pricing maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Transportation pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="808">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrialBalance</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Trial Balance</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.trialbal</ClassPackage>
		<ClassSourceFile>TrialBalance</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General LedgerTrial Balance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Trial Balance Print-out simply prints the balances of
selected accounts as of a specified date.
</paragraph>
<paragraph>
You may enter the following fields:
</paragraph>
<item-list>
<item>A starting and ending account number (optional).</item>
<item>A cut-off date (All transactions are totaled up to and including this date) (required).</item>
<item>An (optional) profit center</item>
<item>Whether to include the section-sub totals in the report.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="809">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrialBalanceFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Trial Balance Footing Screen</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.trialbal</ClassPackage>
		<ClassSourceFile>TrialBalance</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="810">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrialBalanceHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Trial balance heading</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.trialbal</ClassPackage>
		<ClassSourceFile>TrialBalance</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="811">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrialBalanceToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.trialbal</ClassPackage>
		<ClassSourceFile>TrialBalance</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="812">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Trx</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Trx</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="813">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxStatusField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxStatusField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="814">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxDescField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Trx desc field</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxDescField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="815">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxIDField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Special field to display a G/L Detail Dist. Transaction ID</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AcctDetailDist</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="816">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxIDSField</ClassName>
		<BaseClassName>SCannedBox</BaseClassName>
		<ClassDesc>Special Screen field to open the correct record from AcctDetailDist</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxIDSField</ClassSourceFile>
		<ClassType>ScreenField</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="817">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Transaction Type Field</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TransactionType</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="818">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TypicalBalanceField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Typical Balance for Chart A/c</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Account</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="819">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateAcctDetailHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc><![CDATA[Add this behavior to the transaction that requires a G/L posting.
When the transaction is made, this behavior creates an entry.]]></ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AcctDetail</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="820">
		<LastChanged>2012-04-01T11:23:33</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateApTrxHandler</ClassName>
		<BaseClassName>UpdateAcctDetailHandler</BaseClassName>
		<ClassDesc>Base class to do A/P G/L Updates for A/P Transactions</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateApTrxHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="821">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateArcHandler</ClassName>
		<BaseClassName>UpdateApTrxHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.arc</ClassPackage>
		<ClassSourceFile>ArcReportPost</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="822">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateArTrxHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Update the A/R Trx file when changes are made to the booking.</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateArTrxHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="823">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateArTrxAcctDetailHandler</ClassName>
		<BaseClassName>UpdateAcctDetailHandler</BaseClassName>
		<ClassDesc>Update the G/L Detail when a booking adds an A/R modification.</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateArTrxAcctDetailHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="824">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateCrDrAcctDetailHandler</ClassName>
		<BaseClassName>UpdateArTrxAcctDetailHandler</BaseClassName>
		<ClassDesc>Update the G/L detail when a Debit/Credit or Refund is written</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>CrDrGridScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="825">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateCreditMemoHandler</ClassName>
		<BaseClassName>UpdateApTrxHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.drcr</ClassPackage>
		<ClassSourceFile>CreditMemoScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="826">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateDebitMemoHandler</ClassName>
		<BaseClassName>UpdateApTrxHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.drcr</ClassPackage>
		<ClassSourceFile>DebitMemoScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="830">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateInvoiceHandler</ClassName>
		<BaseClassName>UpdateNonTourInvoiceHandler</BaseClassName>
		<ClassDesc>Update the A/P G/L on receipt of an Invoice</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.invoice</ClassPackage>
		<ClassSourceFile>UpdateInvoiceHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="831">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateNonTourInvoiceHandler</ClassName>
		<BaseClassName>UpdateApTrxHandler</BaseClassName>
		<ClassDesc>Update the Invoice for Non-tour Invoices</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.invoice</ClassPackage>
		<ClassSourceFile>UpdateNonTourInvoiceHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="832">
		<LastChanged>2012-03-31T15:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateOverrideAcctDetailHandler</ClassName>
		<BaseClassName>UpdateApTrxHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideScreen</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="834">
		<LastChanged>2012-04-12T22:05:33</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateRefundAcctDetailHandler</ClassName>
		<BaseClassName>UpdateArTrxAcctDetailHandler</BaseClassName>
		<ClassDesc>Update the G/L for a refund transaction</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateRefundAcctDetailHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="835">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateRefundPaidAcctDetailHandler</ClassName>
		<BaseClassName>UpdateAcctDetailHandler</BaseClassName>
		<ClassDesc>After printing the Refund checks, post the ArTrx to BankTrx and G/L</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckJournal</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="838">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UserChangedHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Set user ID on record change</ClassDesc>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Employee</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="851">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ValidBookingHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Only allow accepted tours through (Status = accepted, or balances non zero)</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.cashplan</ClassPackage>
		<ClassSourceFile>CashPlanReport</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="853">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Vendor</ClassName>
		<BaseClassName>Company</BaseClassName>
		<ClassDesc>Vendors</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Vendor</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Vendor maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Most of the fields are self-explanatory. Here is an
explanation of those that aren't:
</paragraph>
<paragraph>
You may optionally enter a unique vendor code.
</paragraph>
<paragraph>
Several fields are contained in sub-files:
<item-list>
<item><help-link>
<name>Vendor Status</name>
<description>Vendor Status</description>
<link>?record=VendorStatus</link>
<image>Form</image>
</help-link> - Okay, blacklist, etc.</item>
<item><help-link>
<name>Billing Cycle</name>
<description>Billing Cycle</description>
<link>?record=PaymentCycle</link>
<image>Form</image>
</help-link> - Pay at statement, end of month, etc.</item>
<item><help-link>
<name>Payment Code</name>
<description>Payment Code</description>
<link>?record=PaymentCode</link>
<image>Form</image>
</help-link> - For auto-payment selection.</item>
<item><help-link>
<name>Prepayments/Invoices</name>
<description>Prepayments/Invoices</description>
<link>?record=PrepayType</link>
<image>Form</image>
</help-link> - Pay invoice, or prepay services.</item>
<item>Default Cost G/L account - This should be entered only if the control file default
isn't correct for this vendor! For example, the UPS vendor's default cost would
be Mailing Expense.</item>
<item>Independent Contractor - If this vendor is an independent contractor, type Yes. The
end-of-year 1099 printing will only print for independent
contractors.</item>
</item-list>
</paragraph>
<paragraph>
There are several sub-displays for vendors (Detail from the grid screen, all of these from the maintenance screen):
</paragraph>
<item-list>
<item><help-button>
<name>Detail</name>
<description>Vendor A/P Detail Display</description>
<link>?record=ApTrx</link>
<image>Detail</image>
</help-button> - The detail A/P transactions for this vendor.</item>
<item><help-button>
<name>Message Detail</name>
<description>Message Detail</description>
<link>?record=MessageDetail</link>
<image>Detail</image>
</help-button> - The message configuration for this vendor.</item> 
<item><help-button>
<name>Message Log</name>
<description>Message Log</description>
<link>?record=MessageLog</link>
<image>Detail</image>
</help-button> - The message logs for this vendor.</item>
</item-list></ClassHelp>
		<ClassImplements>MessageDetailTarget</ClassImplements>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="854">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorCostAnalysis</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Vendor cost analysis</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.vendorcost</ClassPackage>
		<ClassSourceFile>VendorCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the Cost Analysis by Vendor</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to analyze costs for each vendor. 
</paragraph>
<paragraph>
This program prints all the A/P transactions by vendor.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="855">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorCostAnalysisFooting</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Vendor cost analysis</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.vendorcost</ClassPackage>
		<ClassSourceFile>VendorCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="856">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorCostAnalysisHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Vendor cost analysis</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.vendorcost</ClassPackage>
		<ClassSourceFile>VendorCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="857">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorCostAnalysisToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Vendor cost analysis</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.vendorcost</ClassPackage>
		<ClassSourceFile>VendorCostAnalysis</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="858">
		<LastChanged>2013-01-22T05:49:51</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorApTrxGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Vendor A/P detail</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>VendorApTrxGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Vendor A/P detail display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Type in the vendor code, and the system displays information on
    all the invoices, credit/debit memos, and prepayments which are
    outstanding. 
</paragraph>
<paragraph>
    They will be in the order of the starting service dates.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="859">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header screen for Vendor A/P Detail display</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>VendorApTrxGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="860">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Vendor</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Vendor</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="861">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Vendors</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.vendor</ClassPackage>
		<ClassSourceFile>VendorScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Vendor maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Most of the fields are self-explanatory. Here is an
explanation of those that aren't:
</paragraph>
<paragraph>
You may optionally enter a unique vendor code.
</paragraph>
<paragraph>
Several fields are contained in sub-files:
<item-list>
<item><help-link>
<name>Vendor Status</name>
<description>Vendor Status</description>
<link>?record=VendorStatus</link>
<image>Form</image>
</help-link> - Okay, blacklist, etc.</item>
<item><help-link>
<name>Billing Cycle</name>
<description>Billing Cycle</description>
<link>?record=PaymentCycle</link>
<image>Form</image>
</help-link> - Pay at statement, end of month, etc.</item>
<item><help-link>
<name>Payment Code</name>
<description>Payment Code</description>
<link>?record=PaymentCode</link>
<image>Form</image>
</help-link> - For auto-payment selection.</item>
<item><help-link>
<name>Prepayments/Invoices</name>
<description>Prepayments/Invoices</description>
<link>?record=PrepayType</link>
<image>Form</image>
</help-link> - Pay invoice, or prepay services.</item>
<item>Default Cost G/L account - This should be entered only if the control file default
isn't correct for this vendor! For example, the UPS vendor's default cost would
be Mailing Expense.</item>
<item>Independent Contractor - If this vendor is an independent contractor, type Yes. The
end-of-year 1099 printing will only print for independent
contractors.</item>
</item-list>
</paragraph>
<paragraph>
There are several sub-displays for vendors (Detail from the grid screen, all of these from the maintenance screen):
</paragraph>
<item-list>
<item><help-button>
<name>Detail</name>
<description>Vendor A/P Detail Display</description>
<link>?record=ApTrx</link>
<image>Detail</image>
</help-button> - The detail A/P transactions for this vendor.</item>
<item><help-button>
<name>Message Detail</name>
<description>Message Detail</description>
<link>?record=MessageDetail</link>
<image>Detail</image>
</help-button> - The message configuration for this vendor.</item> 
<item><help-button>
<name>Message Log</name>
<description>Message Log</description>
<link>?record=MessageLog</link>
<image>Detail</image>
</help-button> - The message logs for this vendor.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Vendor</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="862">
		<LastChanged>2013-01-22T05:51:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Vendors</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.vendor</ClassPackage>
		<ClassSourceFile>VendorScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Vendor maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Most of the fields are self-explanatory. Here is an
explanation of those that aren't:
</paragraph>
<paragraph>
You may optionally enter a unique vendor code.
</paragraph>
<paragraph>
Several fields are contained in sub-files:
<item-list>
<item><help-link>
<name>Vendor Status</name>
<description>Vendor Status</description>
<link>?record=VendorStatus</link>
<image>Form</image>
</help-link> - Okay, blacklist, etc.</item>
<item><help-link>
<name>Billing Cycle</name>
<description>Billing Cycle</description>
<link>?record=PaymentCycle</link>
<image>Form</image>
</help-link> - Pay at statement, end of month, etc.</item>
<item><help-link>
<name>Payment Code</name>
<description>Payment Code</description>
<link>?record=PaymentCode</link>
<image>Form</image>
</help-link> - For auto-payment selection.</item>
<item><help-link>
<name>Prepayments/Invoices</name>
<description>Prepayments/Invoices</description>
<link>?record=PrepayType</link>
<image>Form</image>
</help-link> - Pay invoice, or prepay services.</item>
<item>Default Cost G/L account - This should be entered only if the control file default
isn't correct for this vendor! For example, the UPS vendor's default cost would
be Mailing Expense.</item>
<item>Independent Contractor - If this vendor is an independent contractor, type Yes. The
end-of-year 1099 printing will only print for independent
contractors.</item>
</item-list>
</paragraph>
<paragraph>
There are several sub-displays for vendors (Detail from the grid screen, all of these from the maintenance screen):
</paragraph>
<item-list>
<item><help-button>
<name>Detail</name>
<description>Vendor A/P Detail Display</description>
<link>?record=ApTrx</link>
<image>Detail</image>
</help-button> - The detail A/P transactions for this vendor.</item>
<item><help-button>
<name>Message Detail</name>
<description>Message Detail</description>
<link>?record=MessageDetail</link>
<image>Detail</image>
</help-button> - The message configuration for this vendor.</item> 
<item><help-button>
<name>Message Log</name>
<description>Message Log</description>
<link>?record=MessageLog</link>
<image>Detail</image>
</help-button> - The message logs for this vendor.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Vendor</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="863">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Fields for Vendor display</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>VendorScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="864">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorSelectCheckmark</ClassName>
		<BaseClassName>CheckConverter</BaseClassName>
		<ClassDesc>If any amount selected, display check; if checked, move amount to selected</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.select</ClassPackage>
		<ClassSourceFile>VendorSelectGridScreen</ClassSourceFile>
		<ClassType>Converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="865">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorSelectGridScreen</ClassName>
		<BaseClassName>VendorApTrxGridScreen</BaseClassName>
		<ClassDesc>Payment selection</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.select</ClassPackage>
		<ClassSourceFile>VendorSelectGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Display/Change the current Invoice selections</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to package invoices, prepayments requests,
and credit memos for payment.
This program offers an easy way to select a batch of
invoices for the check request program.
</paragraph>
<paragraph>
First, enter the
vendor code. The system displays the current balance of
selected invoices and a list of all of the invoices (whether
they are selected or not) and prepayments, and the amount
selected for payment on each invoice. They will be in the order
of the starting service dates.
</paragraph>
<paragraph>
If you select an item on the screen, first the system will
display the tour number and description, then the system will
ask you to enter an amount to pay (defaults to the full invoice
amount). If you enter zero, this invoice is de-selected for
payment. For prepayment requests you must enter either the
amount requested or zero, partial prepayments are not accepted.
Credit invoices must also be selected-in full.
</paragraph>
<paragraph>
If you type "All" at the Any change prompt, then all the
invoices on the screen are selected for full payment.
</paragraph>
<paragraph>
<bold>Note:</bold> To see the resulting G/L entries, take a look at the
check printing program. This program has no effect on any
balances.
<help-link>
<name>Check printing</name>
<link>?screen=PrintCheckJournal</link>
<image>Form</image>
</help-link>
is where the data is updated.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="866">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorSelectHeaderScreen</ClassName>
		<BaseClassName>VendorHeaderScreen</BaseClassName>
		<ClassDesc>Header screen for payment selection</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.select</ClassPackage>
		<ClassSourceFile>VendorSelectGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="867">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorStatus</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Vendor status</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>VendorStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Vendor status</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Vendor status describes the current status of a vendor.
<br/>
Typical status are Okay, Don't pay, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="868">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorStatusField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>VendorStatus</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="870">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VersionField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Versions</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="874">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Worksheet</ClassName>
		<BaseClassName>TrialBalance</BaseClassName>
		<ClassDesc>Worksheet</ClassDesc>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.trialbal</ClassPackage>
		<ClassSourceFile>Worksheet</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>General Ledger Worksheet</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Worksheet simply prints the balances of
selected accounts as of a specified date with added columns
to write-in adjusting entries.
</paragraph>
<paragraph>
You may enter the following fields:
</paragraph>
<item-list>
<item>A starting and ending account number (optional).</item>
<item>A cut-off date (All transactions are totaled up to and including this date) (required).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="875">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>WorksheetToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.trialbal</ClassPackage>
		<ClassSourceFile>Worksheet</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="896">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileTypeFilter</ClassName>
		<BaseClassName>ProfileTypeField</BaseClassName>
		<ClassDesc>Popup field for Profile type that includes a blank option</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfileTypeFilter</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="897">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrochureClass</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Brochure classifications</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.shared</ClassPackage>
		<ClassSourceFile>BrochureClass</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Brochure classification maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Brochure classifications (for marketing purposes).
For example, this could be the airline
featured on a tour brochure.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="898">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BrochureClassField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Brochure class popup</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.shared</ClassPackage>
		<ClassSourceFile>BrochureClass</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="899">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Brochure Bundle Detail</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.bundle</ClassPackage>
		<ClassSourceFile>BundleDetailGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Specify the brochures belonging to a bundle.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the brochures that make up this bundle of brochures.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BundleDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="900">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Brochure Bundles</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.bundle</ClassPackage>
		<ClassSourceFile>BundleScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Brochure bundle maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter and maintain Brochure bundle descriptions and contents.
</paragraph>
<paragraph>
Brochure bundles make brochure entry easier by selecting a bundle
(such as Asia Brochures) instead of having to select each brochure
individually.
</paragraph>
<paragraph>
To specify the particular brochures belonging to a brochure bundle, press the
<help-button>
  <name>Detail</name>
  <image>Detail</image>
  <link>record=BundleDetail</link>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Bundle</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="901">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Brochure Bundles</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.bundle</ClassPackage>
		<ClassSourceFile>BundleScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Brochure bundle maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter and maintain Brochure bundle descriptions and contents.
</paragraph>
<paragraph>
Brochure bundles make brochure entry easier by selecting a bundle
(such as Asia Brochures) instead of having to select each brochure
individually.
</paragraph>
<paragraph>
To specify the particular brochures belonging to a brochure bundle, press the
<help-button>
  <name>Detail</name>
  <image>Detail</image>
  <link>record=BundleDetail</link>
</help-button>
button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Bundle</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="902">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleDetailScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.bundle</ClassPackage>
		<ClassSourceFile>BundleDetailGridScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="903">
		<LastChanged>2012-04-01T09:46:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.bundle</ClassPackage>
		<ClassSourceFile>BundleDetailGridScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="904">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BundleFilter</ClassName>
		<BaseClassName>BundleField</BaseClassName>
		<ClassDesc>Bundles with blank option</ClassDesc>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BundleFilter</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="905">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ScfFromHandler</ClassName>
		<BaseClassName>MainFieldHandler</BaseClassName>
		<ClassDesc>Validate the SCF from field</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SCF</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="906">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ScfToHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Validate the SCF to field</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SCF</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="907">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ElectronicAddress</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Electronic Address detail</ClassDesc>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>ElectronicAddress</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile's electronic addresses.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the electronic addresses that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="908">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileCertification</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Certifications</ClassDesc>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>ProfileCertification</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Profile's certification detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the certifications that this profile has.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="909">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EAddressTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>EAddressType</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="910">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CertificationTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CertificationType</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="913">
		<LastChanged>2012-04-01T09:48:26</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestSession</ClassName>
		<BaseClassName>Session</BaseClassName>
		<ClassDesc>Remote side of the thin brochure request session</ClassDesc>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.remote</ClassPackage>
		<ClassSourceFile>RequestSession</ClassSourceFile>
		<ClassType>Session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="914">
		<LastChanged>2012-04-01T09:47:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHtmlScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Brochure request entry - HTML version</ClassDesc>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.html</ClassPackage>
		<ClassSourceFile>RequestHtmlScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Enter brochure requests</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter your contact information and the number of each brochure that you would like, then press
the submit button.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="917">
		<LastChanged>2012-04-01T09:47:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHtmlDetailGrid</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Screen to enter the brochures requested</ClassDesc>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.html</ClassPackage>
		<ClassSourceFile>RequestHtmlScreen</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="919">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestPrintLabels</ClassName>
		<BaseClassName>CustomReportScreen</BaseClassName>
		<ClassDesc>Brochure request labels.</ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>RequestPrintLabels</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain>Print the brochure request labels.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program prints the brochure requests.
</paragraph>
<paragraph>
Just select the type of labels to print and press the print button.
</paragraph>
<paragraph>
If you want to reprint some labels (perhaps from a paper jam),
go to the
<help-link>
<name>Request History</name>
<link>screen=RequestHistoryDisplayScreen</link>
<image>Lookup</image>
</help-link>
display to mark the labels to reprint.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="920">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestLabelsScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Screen field for the label printing program.</ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>RequestLabelsScreenRecord</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="921">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestLabelsToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc>Toolbar for label printing</ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>RequestLabelsToolbar</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="922">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SendViaFilter</ClassName>
		<BaseClassName>SendViaField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,585</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SendViaFilter</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="925">
		<LastChanged>2012-04-01T09:48:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>XmlToRequests</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc><![CDATA[Parse the "Requests" xml file and add it to the Requests table.
To Use, just pass:
?task=xx.xx.ProcessRunner&process=xx.xx.XmlToRequests&import=myxmlfile.xml
See the help for other params and samples.]]></ClassDesc>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.thread</ClassPackage>
		<ClassSourceFile>XmlToRequests</ClassSourceFile>
		<ClassType>Process</ClassType>
		<ClassExplain/>
		<ClassHelp><![CDATA[To run this process manually, just call:
Properties properties = new Properties();
properties.setProperty("import", "archive/request/Request.xml");

XmlToRequests test = new XmlToRequests(sApplet, null, properties);
test.run();
		
test.free(); 


Sample xml file:
<?xml version="1.0" encoding="UTF-8"?>

<file>
  <Request>
    <ProfileCode />
    <GenericName>Ann Corley</GenericName>
    <AddressLine1>6047 Camellia Ave #F</AddressLine1>
    <AddressLine2 />
    <CityOrTown>Temple City</CityOrTown>
    <StateOrRegion>CA</StateOrRegion>
    <PostalCode>91780</PostalCode>
    <Country>USA</Country>
    <Attention />
    <Email>anncorley@mail.com</Email>
    <BrochureText />
	  <RequestDetail>
		<Item BrochureID="1">
			<Description>Orient Adventures</Description>
		</Item>
		<BrochureQty>1</BrochureQty>
	  </RequestDetail>
	  <RequestDetail>
		<Item BrochureID="6">
			<Description>European Highlights</Description>
		</Item>
		<BrochureQty>1</BrochureQty>
	  </RequestDetail>
  </Request>
  <Request>
    <ProfileCode>05903995</ProfileCode>
    <GenericName>XYZ Travel</GenericName>
    <AddressLine1>1234 North</AddressLine1>
    <AddressLine2 />
    <CityOrTown>Los Angeles</CityOrTown>
    <StateOrRegion>CA</StateOrRegion>
    <PostalCode>91780</PostalCode>
    <Country>USA</Country>
    <Attention>Mike</Attention>
    <Email>xyz@xyz.com</Email>
    <BrochureText />
	  <RequestDetail>
		<Item BrochureID="6">
			<Description>European Highlights</Description>
		</Item>
		<BrochureQty>2</BrochureQty>
	  </RequestDetail>
	  <RequestDetail>
		<Item BrochureID="1">
			<Description>Orient Adventures</Description>
		</Item>
		<BrochureQty>1</BrochureQty>
	  </RequestDetail>
  </Request>
</file>
]]></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="926">
		<LastChanged>2012-04-01T09:48:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestConversionTable</ClassName>
		<BaseClassName>ListResourceBundle</BaseClassName>
		<ClassDesc>Conversion table of the request xml file into the Request table</ClassDesc>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.thread</ClassPackage>
		<ClassSourceFile>RequestConversionTable</ClassSourceFile>
		<ClassType>Resource</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="927">
		<LastChanged>2012-04-01T09:48:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestDetailConversionTable</ClassName>
		<BaseClassName>ListResourceBundle</BaseClassName>
		<ClassDesc>Field Conversion table</ClassDesc>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.thread</ClassPackage>
		<ClassSourceFile>RequestDetailConversionTable</ClassSourceFile>
		<ClassType>Resource</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="932">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetupLabelTextHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Setup the free text for the labels</ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>SetupLabelTextHandler</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="933">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestLabelsUpdate</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc><![CDATA[This is the logic to clear the brochure requests printed
and move them to the history file.
Note: This is a process because there is more than one
label printing program.
Note: This is typically not run as a process, but is usually run
directly (by callin]]></ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>RequestLabelsUpdate</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="938">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc>Land reference field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="939">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc>Air Reference Field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="940">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="941">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="942">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="943">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Base product field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductField</ClassSourceFile>
		<ClassType>Field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="961">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingMenuSession</ClassName>
		<BaseClassName>Session</BaseClassName>
		<ClassDesc>Remote side of the booking menu</ClassDesc>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.lookup</ClassPackage>
		<ClassSourceFile>BookingMenuSession</ClassSourceFile>
		<ClassType>Session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="962">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingMenuLookup</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc>Special query for remote section of the thin booking menu</ClassDesc>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.lookup</ClassPackage>
		<ClassSourceFile>BookingMenuLookup</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="963">
		<LastChanged>2012-04-01T10:52:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourLookupQuery</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc><![CDATA[This is the query used to lookup tours.
NOTE: This is a manual query, because Tour and TourHeader are in different databases.]]></ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.lookup</ClassPackage>
		<ClassSourceFile>TourLookupQuery</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="968">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetProductDescHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Get the product description of this Product object</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>Product</ClassSourceFile>
		<ClassType>Behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="995">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MealsHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Set up the special meals string that summarized all the meals for this product.</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>MealsHandler</ClassSourceFile>
		<ClassType>behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="996">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTypeHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[Get the product type of this detail record and return it as a string.
This is used to fill in the virtual ProductType field in BookingDetail.]]></ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>ProductTypeHandler</ClassSourceFile>
		<ClassType>behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="997">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StatusHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Create the overall status from the product, price, and inventory status.</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>StatusHandler</ClassSourceFile>
		<ClassType>behavior</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="998">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FullCurrencyField</ClassName>
		<BaseClassName>CurrencyField</BaseClassName>
		<ClassDesc>This is the field to hold a foreign currency amount</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>FullCurrencyField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1000">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandScreenRecord</ClassName>
		<BaseClassName>BookingDetailScreenRecord</BaseClassName>
		<ClassDesc>Fields for use in the BookingLandScreen</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.land</ClassPackage>
		<ClassSourceFile>BookingLandScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1002">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InfoStatus</ClassName>
		<BaseClassName>BaseDataStatus</BaseClassName>
		<ClassDesc>Information status</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>InfoStatus</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Booking detail information status.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking detail information status:<br/>
For a description of the status messages, see the <help-link>
<name>Base Message Status</name>
<link>record=BaseMessageStatus</link>
<image>Help</image> 
</help-link> description.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1003">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InfoStatusField</ClassName>
		<BaseClassName>BaseDataStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>InfoStatusField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1006">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StatusSummaryField</ClassName>
		<BaseClassName>IntegerField</BaseClassName>
		<ClassDesc><![CDATA[This field is used to summarize the CustSaleDetail status of:
Information
Price
Inventory]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>StatusSummaryField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1011">
		<LastChanged>2012-04-10T21:09:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc><![CDATA[This task process the incoming replies from rate requests.
Then it uses the information to update the booking hotel detail.]]></ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.response.in</ClassPackage>
		<ClassSourceFile>BookingHotelRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1014">
		<LastChanged>2012-03-31T15:58:13</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorInfoLookup</ClassName>
		<BaseClassName>BaseMessageProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.message</ClassPackage>
		<ClassSourceFile>VendorInfoLookup</ClassSourceFile>
		<ClassType>messageprocess</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1018">
		<LastChanged>2012-04-10T21:09:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc>Process the incoming land rates.</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.response.in</ClassPackage>
		<ClassSourceFile>BookingLandRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>messageprocess</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1020">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetHotelCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc><![CDATA[This handler looks up the hotel cost, given the rate, class, and date
and places the hotel cost in this field.]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.event</ClassPackage>
		<ClassSourceFile>GetHotelCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1021">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetLandCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc>Lookup the land cost, given fields for the rate type and date.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.event</ClassPackage>
		<ClassSourceFile>GetLandCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1023">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetProductCostHandler</ClassName>
		<BaseClassName>GetProductStatusHandler</BaseClassName>
		<ClassDesc><![CDATA[Get the product cost on a valid product record.
(Using the params from the ProductVars screenrecord).]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>GetProductCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1024">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc>Listen for the (private) hotel rate messages.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.event</ClassPackage>
		<ClassSourceFile>HotelRateMessageListener</ClassSourceFile>
		<ClassType>FileListener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1029">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.event</ClassPackage>
		<ClassSourceFile>LandRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1030">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchSession</ClassName>
		<BaseClassName>Session</BaseClassName>
		<ClassDesc><![CDATA[Base class for the remote side of product searches.
Used for thin searches in booking entry.]]></ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>ProductSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1031">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSession</ClassName>
		<BaseClassName>TableModelSession</BaseClassName>
		<ClassDesc>Product session</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.remote</ClassPackage>
		<ClassSourceFile>ProductSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1032">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc>Remote part of the hotel display</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>HotelSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1033">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc>Remote side of the tour header search</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>TourHeaderSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1034">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc>The remote side of the thin land search</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>LandSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1035">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc>The remote side of the thin air search</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>AirSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1036">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>CarSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1037">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>CruiseSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1038">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>TransportationSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1039">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemSearchSession</ClassName>
		<BaseClassName>ProductSearchSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>ItemSearchSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1040">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailSession</ClassName>
		<BaseClassName>TableModelSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking</ClassPackage>
		<ClassSourceFile>BookingDetailSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1041">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingSession</ClassName>
		<BaseClassName>TableSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking</ClassPackage>
		<ClassSourceFile>BookingSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1042">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirClass</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Base product class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirClass</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product classes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product classes are varing service levels, such as first class, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1043">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseClass</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Base product class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseClass</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product classes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product classes are varing service levels, such as first class, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1044">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Item</ClassName>
		<BaseClassName>Product</BaseClassName>
		<ClassDesc>Item</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>Item</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product (non date oriented tour component) maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product (non date oriented tour component) maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the non-tour product information. Use the maintenance screen to add and change non-tour products. Use the display screen to view all the non-tour products. Enter a rate type, class and date to display non-tour product pricing. Checking the "Remote lookup?" box will retrieve non-tour product prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering a non-tour product, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>

<paragraph>
There are several detail screens for a non-tour product:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=HotelPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1045">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingPaxSession</ClassName>
		<BaseClassName>Session</BaseClassName>
		<ClassDesc>Booking passenger detail session</ClassDesc>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking</ClassPackage>
		<ClassSourceFile>BookingPaxSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1051">
		<LastChanged>2012-04-01T09:47:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HRequestHtmlScreen</ClassName>
		<BaseClassName>HScreen</BaseClassName>
		<ClassDesc>This is the view for the reqest HTML screen.</ClassDesc>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.html</ClassPackage>
		<ClassSourceFile>HRequestHtmlScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1064">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TestHotelRateScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Test XML messaging to retrieve a hotel rate.</ClassDesc>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel</ClassPackage>
		<ClassSourceFile>TestHotelRateScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1065">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TestHotelRateScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Test screen record for hotel rate retrieval.</ClassDesc>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel</ClassPackage>
		<ClassSourceFile>TestHotelRateScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1071">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Versions</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Versions</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Version entry</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Accounting transaction versions</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    The version is alternate postings for different versions of the
    Financial Statements.
</paragraph>
<paragraph>
    For example, Financial, Federal, and State depreciation are
    typically different.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1072">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc>Account Grid Screen fields</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.misc</ClassPackage>
		<ClassSourceFile>AccountScreen</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1073">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctBatchPostingResources</ClassName>
		<BaseClassName>ListResourceBundle</BaseClassName>
		<ClassDesc>Resources for batch posting</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>AcctBatchScreen</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1076">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxSystem</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxSystem</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1077">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxDesc</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxDesc</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1078">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxStatus</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxStatus</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1079">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransactionType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TransactionType</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1081">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxSystemGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxSystemGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1082">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxSystemScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxSystemScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1083">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxDescScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxDescScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1084">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxDescGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxDescGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1085">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxStatusScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxStatusScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1087">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxTypeScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxTypeScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1088">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxTypeGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxTypeGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1089">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxStatusGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxStatusGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1090">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxSystemHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxDescGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1091">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxDescStatusHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxStatusGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1092">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxGroupHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxTypeGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1093">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateTrxTypeHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>This listener update the cache fields in the TrxType record.</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>UpdateTrxTypeHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1094">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxSystemField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Popup field for the transaction system</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxSystemField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1096">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateTrxDescHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Update the detail transaction cache fields when the desc file changes.</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>UpdateTrxDescHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1097">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateTrxSystemHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Update the trx system cache fields when the system file changes</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>UpdateTrxSystemHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1099">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PreferredBalanceField</ClassName>
		<BaseClassName>TypicalBalanceField</BaseClassName>
		<ClassDesc>Same as Typical Balance, except with a blank option</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PreferredBalanceField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1101">
		<LastChanged>2012-03-31T22:20:21</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtReportHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>The heading information</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1102">
		<LastChanged>2012-03-31T22:20:21</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinStmtDetailReportScreen</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>The Detail for the financial statement</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1103">
		<LastChanged>2012-03-31T22:20:21</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddFinStmtDetailTotals</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Add to the report totals</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtReportScreen</ClassSourceFile>
		<ClassType>handler</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1106">
		<LastChanged>2012-07-01T02:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountNoField</ClassName>
		<BaseClassName>IntegerField</BaseClassName>
		<ClassDesc><![CDATA[Display the account number with the sub-account.
(Add the GlConverter to displays).]]></ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Account</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1107">
		<LastChanged>2012-04-02T08:20:19</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SpecialFunctionField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Special functions</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>SpecialFunctionField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1108">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SpecialFormat</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Special Formats</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SpecialFormat</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Financial Statement Special Format maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This table contains some canned description formats for the financial statments.
</paragraph>
<paragraph>
This table is used to make Financial Statment Formatting easier by giving users a choice
of canned formats. The formats are user defined as they are just passed as-is to the
Financial Statment XML parser. Typically, you will enter the actual XSL-FO formatting commands
such as "text-decoration: underline" which can be used directly by XSL.
</paragraph>
<paragraph>
There are several canned formats:
</paragraph>
<item-list>
<item>Underline</item>
<item>Bold</item>
<item>Large Text</item>
<item>Centered Text</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1109">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>NumberFormat</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Number formats</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>NumberFormat</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Financial statement number formats.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This table contains some canned number formats for the financial statments.
</paragraph>
<paragraph>
This table is used to make Financial Statment Formatting easier by giving users a choice
of canned formats. The formats are user defined as they are just passed as-is to the
Financial Statment XML parser. Typically, you will enter the actual XSL-FO formatting commands
such as "text-decoration: underline" which can be used directly by XSL.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1110">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SpecialFunction</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Special Functions</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>SpecialFunction</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Financial statement canned functions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This table contains some canned functions for the financial statments.
</paragraph>
<paragraph>
This table is used to make Financial Statment Formatting easier by giving users a choice
of canned functions. The functions are system defined and are described as follows:
<item-list>
<item>@change - Override the financial statement target amount type and set the amount to the change in this account for the period.</item>
<item>@start - Override the financial statement target amount type and set the amount to the start balance of this account for the period.</item>
<item>@end - Override the financial statement target amount type and set the amount to the end balance of this account for the period.</item>
<item>@base-ratio - The base ratio for Financial Statement ratios.</item>
<item>@ratio - This line should include a ratio (based on the base-ratio).</item>
<item>@isstart - This amount is the start of all account that close at year-end.</item>
<item>@transfer - Transfer the total from this statement (You must include the statement name, such as "@transfer: Product A - Income Statement").</item>
</item-list>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1111">
		<LastChanged>2012-04-02T08:20:06</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>NumberFormatField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db.finstmt</ClassPackage>
		<ClassSourceFile>NumberFormatField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1112">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PostingType</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>The posting hint to tell the BaseTrx what side of the transaction this belongs on.</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PostingType</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1114">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DistributionConverter</ClassName>
		<BaseClassName>FieldConverter</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch.dist</ClassPackage>
		<ClassSourceFile>DistributionConverter</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1115">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountNoDistConverter</ClassName>
		<BaseClassName>FieldConverter</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch.dist</ClassPackage>
		<ClassSourceFile>DistributionConverter</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1116">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AccountDescDistConverter</ClassName>
		<BaseClassName>FieldConverter</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch.dist</ClassPackage>
		<ClassSourceFile>DistributionConverter</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1117">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ReferenceChangedHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch.dist</ClassPackage>
		<ClassSourceFile>DistributionConverter</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1118">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PreferredSignField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Preferred Size - positive or negative.</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PreferredSignField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1119">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FocusOnCheckAmount</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Focus on the check/deposit check amount depending on the type.</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>FocusOnCheckAmount</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1120">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddNewDistHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc><![CDATA[This special class tests for the case when the user set a single distribution
account, but the header record was new so I couldn't write the detail
records yet.]]></ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch.dist</ClassPackage>
		<ClassSourceFile>DistributionConverter</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1122">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrentClearedHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>When this bank account changes, recalc the starting cleared balance</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>CurrentClearedHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1123">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ReconciledConverter</ClassName>
		<BaseClassName>CheckConverter</BaseClassName>
		<ClassDesc><![CDATA[This is a special converter that displays a check if the reconciled date
is non-null and sets it to the date if checked, null if unchecked]]></ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>ReconciledConverter</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1124">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CountClearedHandler</ClassName>
		<BaseClassName>SubCountHandler</BaseClassName>
		<ClassDesc>Count the amount of deposits or credits cleared in the current grid screen.</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>CountClearedHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1125">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CountNewClearedFieldHandler</ClassName>
		<BaseClassName>ReComputeFieldHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>CountNewClearedFieldHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1126">
		<LastChanged>2012-03-28T11:04:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankReconPostScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Bank Reconciliation</ClassDesc>
		<ClassProjectID>1,048,605</ClassProjectID>
		<ClassPackage>.report.recon</ClassPackage>
		<ClassSourceFile>BankReconPostScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>This program is used to mark transactions as reconciled with a bank statement.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Select an account to reconcile.
</paragraph>
<paragraph>
Click the checkmark next to each item cleared by the bank. 
</paragraph>
<paragraph>
When you are done, press the
<help-button>
<name>Post</name>
<link>screen=BankReconPostScreen</link>
<image>Post</image>
</help-button>
button. If the cleared totals match the
bank statement, press the
<help-button>
<name>Post</name>
<link>screen=BankReconPostScreen</link>
<image>Post</image>
</help-button>
button to mark these items as cleared.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankReconGridScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1127">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Reference field for Account Detail</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AcctDetail</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1128">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VoidOnDeleteHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>When the user deletes a bank trx, this class voids it instead.</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>VoidOnDeleteHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1129">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Header screen</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>ProfileDetailBaseGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1130">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileDetailBaseGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Profile detail screens</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>ProfileDetailBaseGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Detail screens for Profiles.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph>
<paragraph>
This includes:
<item-list>
<item>
<help-button>
  <name>Documents</name>
  <link>record=Document</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Electronic Addresses</name>
  <link>record=ElectronicAddress</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Extensions</name>
  <link>record=Extension</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Travel Interests</name>
  <link>record=Interest</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Membership detail</name>
  <link>record=Memberships</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Certification detail</name>
  <link>record=ProfileCertification</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Credit cards</name>
  <link>record=ProfileCreditCard</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Passenger detail</name>
  <link>screen=ProfileDetailGridScreen</link>
  <image>Grid</image>
</help-button>
</item>
<item>
<help-button>
  <name>Brochure request history detail</name>
  <link>record=RequestHistory</link>
  <image>Grid</image>
</help-button>
</item>
</item-list>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1131">
		<LastChanged>2012-04-01T09:46:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHistoryGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Brochure Request History</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>RequestHistoryGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Brochure Request history display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the brochures mailed to this profile.
</paragraph>
<paragraph>
To display the individual brochures mailed, press the
<help-button>
  <name>Detail</name>
  <link>record=RequestHistoryDetail</link>
  <image>Grid</image>
</help-button>
button.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>RequestHistory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1132">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileDetailGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Passenger detail</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>ProfileDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Passenger belonging this this main profile.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the passengers that belong to this profile.
<br/>(including the profile itself)
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1133">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ElectronicAddressGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Electronic Address detail</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>ElectronicAddressGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Profile's electronic addresses.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the electronic addresses that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ElectronicAddress</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1134">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ExtensionGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Profile extensions</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>ExtensionGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Profile specific information.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the extensions that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Extension</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1135">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InterestGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Travel interest detail</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>InterestGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Profile travel interest list.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the travel interests that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Interest</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1136">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MembershipsGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Membership detail</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>MembershipsGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Profile membership detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the memberships this profile belongs to.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Memberships</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1137">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileCertificationGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Certifications</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>ProfileCertificationGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Profile's certification detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the certifications that this profile has.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ProfileCertification</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1138">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileCreditCardGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Credit cards</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>ProfileCreditCardGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Profile credit card detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the credit cards that belong to this profile.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ProfileCreditCard</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1139">
		<LastChanged>2012-04-01T09:43:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DocumentGridScreen</ClassName>
		<BaseClassName>ProfileDetailBaseGridScreen</BaseClassName>
		<ClassDesc>Documents detail</ClassDesc>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>DocumentGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Profile documents.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the documents that belong to this profile.
<br/>Documents include passports, visas, etc.
</paragraph>
<paragraph>
From the toolbar, you have access to all of the
<help-button>
  <name>Profile Detail</name>
  <link>screen=ProfileDetailBaseGridScreen</link>
  <image>Grid</image>
</help-button>
screens.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Document</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1140">
		<LastChanged>2012-04-01T09:42:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EAddressStringField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,632</ClassProjectID>
		<ClassPackage>.detail</ClassPackage>
		<ClassSourceFile>EAddressStringField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1141">
		<LastChanged>2012-04-01T09:46:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHistoryScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>RequestHistoryGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1142">
		<LastChanged>2012-04-01T09:46:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHistoryDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>RequestHistoryGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1143">
		<LastChanged>2012-04-01T09:47:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HRequestHtmlDetailGrid</ClassName>
		<BaseClassName>HGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,630</ClassProjectID>
		<ClassPackage>.html</ClassPackage>
		<ClassSourceFile>RequestHtmlScreen</ClassSourceFile>
		<ClassType>screenview</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1146">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingInField</ClassName>
		<BaseClassName>BookingField</BaseClassName>
		<ClassDesc>Booking field with booking number display/input</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BookingField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1148">
		<LastChanged>2012-04-01T09:46:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestHistoryDisplayScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Request History display</ClassDesc>
		<ClassProjectID>1,048,628</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>RequestHistoryDisplayScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Display the brochure requests by time printed.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the printed brochure requests in the order that they were printed.
</paragraph>
<paragraph>
To display the individual brochures mailed on a request, click on the
<help-link>
  <name>detail</name>
  <image>Detail</image>
  <link>screen=RequestHistoryDetailGridScreen</link>
</help-link>
button.
</paragraph>
<paragraph>
If you would like to reprint specific labels on the next label printing run, check the reprint
checkbox next to the label.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1149">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>NameOrderedField</ClassName>
		<BaseClassName>StringField</BaseClassName>
		<ClassDesc>Special field to get full name from parts and change parts and field on change</ClassDesc>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>NameOrderedField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1150">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestLabelsRestore</ClassName>
		<BaseClassName>RequestLabelsUpdate</BaseClassName>
		<ClassDesc>Restore the marked labels from the history file.</ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>RequestLabelsRestore</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1151">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MarkLabelsToPrint</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc>Mark all the current labels for printing (concurrency issue).</ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>MarkLabelsToPrint</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1155">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestPrintXMLLabels</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Brochure request XML labels.</ClassDesc>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>RequestPrintXMLLabels</ClassSourceFile>
		<ClassType>report</ClassType>
		<ClassExplain>Print the brochure request labels in XML format.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program prints the brochure requests. 
</paragraph>
<paragraph>
It is almost exactly the same at the
<help-link>
<name>Brochure Request Printing</name>
<link>RequestPrintLabels</link>
<image>Help</image>
</help-link> program.
</paragraph>
<paragraph>
Just select the type of labels to print and the XSL stylesheet, then press the print button.
</paragraph>
<paragraph>
If you want to reprint some labels (perhaps from a paper jam),
go to the
<help-link>
<name>Request History</name>
<link>screen=RequestHistoryDisplayScreen</link>
<image>Lookup</image>
</help-link>
display to mark the labels to reprint.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1156">
		<LastChanged>2012-04-01T09:46:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RequestLabelsXMLToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,629</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>RequestPrintXMLLabels</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1157">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatch</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Bank Transactions</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankTrxBatch</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrxBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1158">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Bank Transaction batch header screen</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrxBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1159">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Bank Transaction Entry batch screen</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Enter new manual bank transactions.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
When the <bold>Bank Transaction Batch Header Screen</bold> appears, select the bank account and press the <help-button>
<name>Detail</name>
<image>Detail</image>
<link>record=BankTrxBatchDetail</link>
</help-button> button.
</paragraph>
<paragraph>
Then, enter the detail transactions in the <bold>Bank Transaction Entry Screen</bold>:
<br/>Enter:
</paragraph>
<item-list>
<item>Transaction type</item>
<item>(Check) number (optional)</item>
<item>Date</item>
<item>Payee</item>
<item>Amount</item>
<item>Comment (optional)</item>
<item>Account for the G/L distribution. You may also click on the
<help-button>
<name>Detail</name>
<link>record=BankTrxBatchDist</link>
<image>Detail</image>
</help-button> button to split the distribution between several G/L accounts.<br/>
<bold>Note:</bold> If you don't specify a G/L account the amount will be distributed to the default account in the 
<help-button>
<name>Asset Debt Control</name>
<image>Form</image>
<link>record=AssetDrControl</link>  
</help-button> file.</item>  
</item-list>
<paragraph>
After entering the transactions, you may add them to the bank account detail by pressing the
post button. If you confirm the batch in the posting screen, the transactions will be added to
the checking detail file and also be posted to the General Ledger.
</paragraph>
<paragraph>
<bold>Note:</bold> To enter a void check, just enter a check with an
amount of zero and a payee of VOID. This will not create any
entries, but will maintain the complete list of check numbers
for the audit trail.
</paragraph>
<paragraph>
Here is a sample of a General Ledger distribution:
</paragraph>
<paragraph>
<acct-trx>
<date>4/15/06</date>
<debit>
<description>Bank Charge</description>
<amount>20.00</amount>
</debit>
<credit>
<description>Cash</description>
<amount>20.00</amount>
</credit>
<comment>Bank Charge</comment>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BankTrxBatchDetail</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1160">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankTrxBatchField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1161">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CashBatchField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1162">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankTrxBatchDetailScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1163">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchDetailScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1164">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchDist</ClassName>
		<BaseClassName>BankTrxBatchDist</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CashBatchDist</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1165">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchDistGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchDistScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1166">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchDistScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Cash Receipts</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchDistScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Check deposit entry.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to enter all incoming checks for bookings
(both deposits and final payments). 
</paragraph>
<paragraph>
Program Operation:
</paragraph>
<paragraph>
Usually this program is easy to operate because the payment
is returned with the confirmation payment stub. The stub has
the booking number printed on it, making receipt entry very
simple.
</paragraph>
<paragraph>
You can either enter the booking number if you know it, or
you can press the
<help-button>
<description>Lookup</description>
<link>screen=BookingGridScreen</link>
<image>Lookup</image>
</help-button>
button to find the booking
by the agency's ARC number.
</paragraph>
<paragraph>
To enter a non-tour related cash receipt or a payment
to multiple bookings, press the
<help-button>
<description>Distribution</description>
<link>record=CashBatchDist</link>
<image>Distribution</image>
</help-button>
button. In the
distribution screen, you can apply the check amount to
bookings and/or general ledger accounts.
</paragraph>
<paragraph>
For each check received, you may also enter the check number,
and ABA number (If deposit slips are printed).
The check amount defaults to the deposit amount for the initial
payment and the outstanding balance for subsequent
payments.
</paragraph>
<paragraph>
Once a deposit is posted, the booking's internal status is
changed to "Accepted" and the A/R detail is set-up.
</paragraph>
<paragraph>
The A/R account that is credited is the one that is listed
in the booking record. The A/R account in the booking record
comes from the tour header.
</paragraph>
<paragraph>
For example, the G/L entry for a batch of checks for two
bookings and a purchase rebate:
</paragraph>
<paragraph>
<acct-trx>
<date>6/21/07</date>
<debit>
<description>Cash - Trust Account (Bank Trx)</description>
<amount>272.50</amount>
</debit>
<credit>
<description>Accounts Receivable - FIT Tours (Ar Trx)</description>
<amount>200.00</amount>
</credit>
<credit>
<description>Accounts Receivable - Series Tours (Ar Trx)</description>
<amount>50.00</amount>
</credit>
<credit>
<description>Equipment rebates</description>
<amount>22.50</amount>
</credit>
</acct-trx>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CashBatch</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1167">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashBatchDetailHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>CashBatchDistScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1168">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CashDistConverter</ClassName>
		<BaseClassName>DistributionConverter</BaseClassName>
		<ClassDesc>Distribution display</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash.dist</ClassPackage>
		<ClassSourceFile>CashDistConverter</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1169">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddNewCashDistHandler</ClassName>
		<BaseClassName>AddNewDistHandler</BaseClassName>
		<ClassDesc><![CDATA[AddNewDistHandler - This special class tests for the case when the user set a single distribution
account, but the header record was new so I couldn't write the detail
records yet.]]></ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash.dist</ClassPackage>
		<ClassSourceFile>AddNewCashDistHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1170">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseTrxPostScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Base batch posting screen</ClassDesc>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BaseTrxPostScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1171">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDefaultHandler</ClassName>
		<BaseClassName>CopyStringHandler</BaseClassName>
		<ClassDesc><![CDATA[This listener sets the default amount and description for a booking
cash receipt.]]></ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>BookingDefaultHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1174">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AcctDetailDistGroupGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Transaction distribution group display</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>AcctDetailDistGroupGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Display a distribution group.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays all the transactions in the original posting.
</paragraph>
<paragraph>
You can display the original General Ledger transaction by pressing the
<help-button>
<description>Transaction</description>
<image>Transaction</image>
<link>record=AcctDetail</link>
</help-button>
button.
</paragraph>
<paragraph>
You can display the source transaction by pressing the
<help-button>
<description>Source</description>
<image>Source</image>
</help-button>
button. The screen displayed depends on the type of transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1175">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddNewMcoDistHandler</ClassName>
		<BaseClassName>AddNewCashDistHandler</BaseClassName>
		<ClassDesc>Add new Mco distribution record</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco.dist</ClassPackage>
		<ClassSourceFile>AddNewMcoDistHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1176">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddNewCreditCardDistHandler</ClassName>
		<BaseClassName>AddNewCashDistHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit.dist</ClassPackage>
		<ClassSourceFile>AddNewCreditCardDistHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1177">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoBatchDist</ClassName>
		<BaseClassName>CashBatchDist</BaseClassName>
		<ClassDesc>MCOs</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>McoBatchDist</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Display and search for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    You can access an MCO either by the booking number, or the
    actual MCO number. Entering the first numbers of the MCO number
    will display all matching MCOs in order. 
</paragraph>
<paragraph>
    If there are more than one MCOs for one booking, then they
    will all display.
</paragraph>
<paragraph>
    If the MCO has not been posted to the General Ledger yet,
    the amounts may be changed. The amounts may only be changed for
    report use, the actual amount posted to the booking may not be
    changed.
</paragraph>
<paragraph>
    If the amount posted to a booking is incorrect, first change
    the MCO information to the correct values, so the MCO
    submission will be correct, then enter a credit or debit memo
    to the booking with distribution to the MCO variance account.
    This will insure all entries are correct.
</paragraph>
<paragraph>
    For example:
</paragraph>
<paragraph>
    MCO net should have been $900, but was posted as $1000.
</paragraph>
<paragraph>
    First, change the MCO amount to 1000. Then enter a debit
    memo for $100. The booking will show the correct amount. If the
    carrier pays $1000, the G/L entries will be:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>Cash</description>
  <amount>1000.00</amount>
</debit>
<credit>
  <description>A/R MCOs</description>
  <amount>900.00</amount>
</credit>
<credit>
  <description>MCO Variances</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
  The debit memo will produce:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>MCO Variance</description>
  <amount>100.00</amount>
</debit>
<credit>
  <description>Accounts Receivable</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
leaving all accounts in the correct state.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Mco</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1178">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardBatchDist</ClassName>
		<BaseClassName>CashBatchDist</BaseClassName>
		<ClassDesc>Credit Cards</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CreditCardBatchDist</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Display and search credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter a credit card ot booking number to display charges for.
    All matching entries will display.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CreditCard</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1179">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoBatchDistGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>MCOs</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoBatchDistScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Display and search for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    You can access an MCO either by the booking number, or the
    actual MCO number. Entering the first numbers of the MCO number
    will display all matching MCOs in order. 
</paragraph>
<paragraph>
    If there are more than one MCOs for one booking, then they
    will all display.
</paragraph>
<paragraph>
    If the MCO has not been posted to the General Ledger yet,
    the amounts may be changed. The amounts may only be changed for
    report use, the actual amount posted to the booking may not be
    changed.
</paragraph>
<paragraph>
    If the amount posted to a booking is incorrect, first change
    the MCO information to the correct values, so the MCO
    submission will be correct, then enter a credit or debit memo
    to the booking with distribution to the MCO variance account.
    This will insure all entries are correct.
</paragraph>
<paragraph>
    For example:
</paragraph>
<paragraph>
    MCO net should have been $900, but was posted as $1000.
</paragraph>
<paragraph>
    First, change the MCO amount to 1000. Then enter a debit
    memo for $100. The booking will show the correct amount. If the
    carrier pays $1000, the G/L entries will be:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>Cash</description>
  <amount>1000.00</amount>
</debit>
<credit>
  <description>A/R MCOs</description>
  <amount>900.00</amount>
</credit>
<credit>
  <description>MCO Variances</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
  The debit memo will produce:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>MCO Variance</description>
  <amount>100.00</amount>
</debit>
<credit>
  <description>Accounts Receivable</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
leaving all accounts in the correct state.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Mco</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1180">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoBatchDistScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>MCOs</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>McoBatchDistScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Display and search for MCOs.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    You can access an MCO either by the booking number, or the
    actual MCO number. Entering the first numbers of the MCO number
    will display all matching MCOs in order. 
</paragraph>
<paragraph>
    If there are more than one MCOs for one booking, then they
    will all display.
</paragraph>
<paragraph>
    If the MCO has not been posted to the General Ledger yet,
    the amounts may be changed. The amounts may only be changed for
    report use, the actual amount posted to the booking may not be
    changed.
</paragraph>
<paragraph>
    If the amount posted to a booking is incorrect, first change
    the MCO information to the correct values, so the MCO
    submission will be correct, then enter a credit or debit memo
    to the booking with distribution to the MCO variance account.
    This will insure all entries are correct.
</paragraph>
<paragraph>
    For example:
</paragraph>
<paragraph>
    MCO net should have been $900, but was posted as $1000.
</paragraph>
<paragraph>
    First, change the MCO amount to 1000. Then enter a debit
    memo for $100. The booking will show the correct amount. If the
    carrier pays $1000, the G/L entries will be:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>Cash</description>
  <amount>1000.00</amount>
</debit>
<credit>
  <description>A/R MCOs</description>
  <amount>900.00</amount>
</credit>
<credit>
  <description>MCO Variances</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
  The debit memo will produce:
</paragraph>
<paragraph>
<acct-trx>
<debit>
  <description>MCO Variance</description>
  <amount>100.00</amount>
</debit>
<credit>
  <description>Accounts Receivable</description>
  <amount>100.00</amount>
</credit>
</acct-trx>
</paragraph>
<paragraph>
leaving all accounts in the correct state.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Mco</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1181">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardBatchDistGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Credit Cards</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardBatchDistScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Display and search credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter a credit card ot booking number to display charges for.
    All matching entries will display.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CreditCard</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1182">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardBatchDistScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Credit Cards</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardBatchDistScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Display and search credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Enter a credit card ot booking number to display charges for.
    All matching entries will display.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CreditCard</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1183">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoDistConverter</ClassName>
		<BaseClassName>CashDistConverter</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco.dist</ClassPackage>
		<ClassSourceFile>McoDistConverter</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1184">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardDistConverter</ClassName>
		<BaseClassName>McoDistConverter</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit.dist</ClassPackage>
		<ClassSourceFile>CreditCardDistConverter</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1185">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardEntryGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Credit Card File</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditCardEntryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Enter/change credit cards charges.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
  First, enter or lookup the booking number.
  If this credit card should be distributed to multiple
  bookings, you may press the
  <help-button>
    <link>record=CreditCardBatchDist</link>
    <image>Detail</image>
    <name>Distribution</name>
    <description>Distribution</description>
  </help-button>
  button.
</paragraph>
<paragraph>
  For each credit card received, you may enter the credit card number,
  card type, and amount.
</paragraph>
<paragraph>
  To Post the credit cards to the G/L, click on the
  <help-button>
    <link>screen=CreditCardPost</link>
    <image>Post</image>
    <description>Post (Credit card Posting)</description>
  </help-button>
  button
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CreditCardEntryScreen</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1186">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseArPayDistHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc>Mco/Credit Card dist header screen</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>BaseArPayDistHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1187">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseArTrxPostScreen</ClassName>
		<BaseClassName>BaseTrxPostScreen</BaseClassName>
		<ClassDesc>Post A/R transactions</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.cash</ClassPackage>
		<ClassSourceFile>BaseArTrxPostScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1188">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditBaseGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Base screen for the credit card grid screens</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditBaseGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1189">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditBaseScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>The base screen for submit/approve/collect</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit</ClassPackage>
		<ClassSourceFile>CreditBaseGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1190">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SyncArTrxStatusHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Synchronize the A/R Trx file with this BaseArPay record.</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco</ClassPackage>
		<ClassSourceFile>SyncArTrxStatusHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1191">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CompareRefundHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Compare the ArTrx type to make sure this is a refund type</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>CompareRefundHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1192">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundCheckPrint</ClassName>
		<BaseClassName>CheckPrintScreen</BaseClassName>
		<ClassDesc>Print refund checks</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckPrint</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Print refund journal and refund checks</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Select the bank account refunds are made from.
    Then enter the date and starting check number. 
</paragraph>
<paragraph>
    Pressing the
<help-button>
  <name>Print</name>
  <link>screen=RefundCheckJournal</link>
  <image>Print</image>
</help-button>
    button will print the Refund Journal. This is a summary of
    the checks that will be printed and to what bookings they
    apply.
</paragraph>
<paragraph>
    Pressing the
<help-button>
  <name>XML checks</name>
  <link>screen=RefundCheckXMLPrint</link>
  <image>Print</image>
</help-button>
    button or the
<help-button>
  <name>Canned checks</name>
  <link>screen=RefundCheckPrint</link>
  <image>Print</image>
</help-button>
    button will print the checks in either XML
    format or straight to the printer.
</paragraph>
<paragraph>
    If the checks are all right, click on the
<help-button>
  <name>Post</name>
  <link>screen=RefundCheckPost</link>
  <image>Post</image>
</help-button>
    button to go to the posting screen.
</paragraph>    
<paragraph>
    If a refund was done manually, the refund should be entered
    as a debit memo. Describe the refund on the A/R comment
    line.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>RefundCheckJournal</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1193">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckPrintScreen</ClassName>
		<BaseClassName>CustomReportScreen</BaseClassName>
		<ClassDesc>Base screen for printing checks</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>CheckPrintScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1194">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RefundCheckXMLPrint</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Print refund checks</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>RefundCheckXMLPrint</ClassSourceFile>
		<ClassType>report</ClassType>
		<ClassExplain>Print refund journal and refund checks</ClassExplain>
		<ClassHelp type="XML"><paragraph>
    Select the bank account refunds are made from.
    Then enter the date and starting check number. 
</paragraph>
<paragraph>
    Pressing the
<help-button>
  <name>Print</name>
  <link>screen=RefundCheckJournal</link>
  <image>Print</image>
</help-button>
    button will print the Refund Journal. This is a summary of
    the checks that will be printed and to what bookings they
    apply.
</paragraph>
<paragraph>
    Pressing the
<help-button>
  <name>XML checks</name>
  <link>screen=RefundCheckXMLPrint</link>
  <image>Print</image>
</help-button>
    button or the
<help-button>
  <name>Canned checks</name>
  <link>screen=RefundCheckPrint</link>
  <image>Print</image>
</help-button>
    button will print the checks in either XML
    format or straight to the printer.
</paragraph>
<paragraph>
    If the checks are all right, click on the
<help-button>
  <name>Post</name>
  <link>screen=RefundCheckPost</link>
  <image>Post</image>
</help-button>
    button to go to the posting screen.
</paragraph>    
<paragraph>
    If a refund was done manually, the refund should be entered
    as a debit memo. Describe the refund on the A/R comment
    line.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>RefundCheckJournal</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1195">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BumpCheckNoHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.refund</ClassPackage>
		<ClassSourceFile>BumpCheckNoHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1196">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc>Special fields required for check printing</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CheckScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1197">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AmountTextField</ClassName>
		<BaseClassName>CurrencyField</BaseClassName>
		<ClassDesc>Convert this amount to text</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>AmountTextField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1200">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileAnalysisScreen</ClassName>
		<BaseClassName>AnalysisScreen</BaseClassName>
		<ClassDesc>Profile analysis</ClassDesc>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.profile</ClassPackage>
		<ClassSourceFile>ProfileAnalysisScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Analyze the profiles</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program is used to Analyze the profile data.
</paragraph>
<paragraph>
Enter up to three criteria for analysis, an (optional) gross sales start and end date and the XSL template name.
</paragraph>
<paragraph>
The profile data will be counted based on the critera entered.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1202">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileAnalysisScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc>Screen record for profile analysis</ClassDesc>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.profile</ClassPackage>
		<ClassSourceFile>ProfileAnalysisScreen</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1203">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileAnalysisField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.profile</ClassPackage>
		<ClassSourceFile>ProfileAnalysisField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1204">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfileAnalysisHeading</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.profile</ClassPackage>
		<ClassSourceFile>ProfileAnalysisHeading</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1205">
		<LastChanged>2012-03-29T10:37:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcPlanTotals</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Calculate the total for the cash plan report</ClassDesc>
		<ClassProjectID>1,048,608</ClassProjectID>
		<ClassPackage>.report.cashplan</ClassPackage>
		<ClassSourceFile>CashPlanReport</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1206">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcStartDateHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Calculate the start date given this period type, etc.</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>PeriodTypeField</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1207">
		<LastChanged>2012-04-01T10:52:28</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SwitchBookingScreenHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.lookup</ClassPackage>
		<ClassSourceFile>SwitchBookingScreenHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1208">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarClassField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1209">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationClassField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1210">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseClassField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1211">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirClassField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1212">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEntryField</ClassName>
		<BaseClassName>TourField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Tour</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1213">
		<LastChanged>2012-04-01T11:23:17</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateDepEstHandler</ClassName>
		<BaseClassName>UpdateApTrxHandler</BaseClassName>
		<ClassDesc>Add the finalization estimate G/L posting</ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateDepEstHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1214">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTypeAutoField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc>Product type popup field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductType</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1215">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EnableScreenHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Disable the screen if the valid record matches any of these values.</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.findepest</ClassPackage>
		<ClassSourceFile>EnableScreenHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1216">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VoucherDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Voucher product detail grid screen</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.acctpay</ClassPackage>
		<ClassSourceFile>VoucherDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1218">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxClassField</ClassName>
		<BaseClassName>IntegerField</BaseClassName>
		<ClassDesc>A/P Transaction types to display</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>ApTrxClassField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1219">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FilterApTrxHandler</ClassName>
		<BaseClassName>ListFileFilter</BaseClassName>
		<ClassDesc>Filter the A/P Detail depending on the ApTrxClassField</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>ApTrxClassField</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1220">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckXML</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>report</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1221">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckCanned</ClassName>
		<BaseClassName>CheckPrintScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckJournal</ClassSourceFile>
		<ClassType>report</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1222">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrintCheckXMLToolbar</ClassName>
		<BaseClassName>PrintCheckToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>PrintCheckXMLToolbar</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1223">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseApTrxPostScreen</ClassName>
		<BaseClassName>BaseTrxPostScreen</BaseClassName>
		<ClassDesc>Base screen for A/P posting</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.check</ClassPackage>
		<ClassSourceFile>BaseApTrxPostScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1224">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentHistoryGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Payment History File</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.hist</ClassPackage>
		<ClassSourceFile>PaymentHistoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>PaymentHistory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1225">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentHistoryScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Payment History File</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.hist</ClassPackage>
		<ClassSourceFile>PaymentHistoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>PaymentHistory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1226">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentHistoryHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.hist</ClassPackage>
		<ClassSourceFile>PaymentHistoryDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1227">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxGroup</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxGroup</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1228">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxGroupGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxGroupScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1229">
		<LastChanged>2012-03-31T22:22:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxGroupScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Transaction type</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxGroupScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction type maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The transaction type file contains the information all the sub-systems need to post a transaction to the General Ledger. Usually, this files does not need to be modified.
</paragraph>
<paragraph>
The transaction type files has a hierarchy of information about each transaction:
</paragraph>
<paragraph>
<item-list>
<item><bold>System</bold> - Subsystem that the transaction came from. (A/P, A/R, etc.)</item> 
<item><bold>Transaction</bold> - The transaction class. (Typically ties directly to a transaction source file) (Such as a Bank Trx or an Asset Transaction)</item>
<item><bold>Transaction Status</bold> - The current transaction status. (Typically tied to the source transaction) (Such as a A/P Prepayment or Distributed A/P Prepayment)</item>
<item><bold>Transaction Header</bold> - Description of the specific G/L transaction. (ie., Vendor Invoice)</item>
<item><bold>Transaction Type</bold> - Description of the specific G/L transaction. (ie., Credit A/P Cash or Debit A/P Prepaid tours)</item>
</item-list>
</paragraph>
<paragraph>
<bold>For example:</bold> Say an invoice is received from a non-tour vendor:
</paragraph>
<item-list>
<item>This transaction goes into the Accounts Payable <bold>System</bold>.</item>
<item>The <bold>Transaction</bold> is an Accounts Payable Detail Transaction.</item>
<item>The <bold>Transaction status</bold> is a Manual Invoice. When the check is printed, this status will change to a Paid Manual Invoice.</item>
<item>The G/L <bold>Transaction Header</bold> is a Manual Invoice.</item>
<item><paragraph>

There are two <bold>Transaction Types</bold> involved and they are processed by the General Ledger like
this:
</paragraph>
<paragraph>
<acct-trx>
<date>10/15/05</date>
<debit>
<account>1234-123</account>
<description>Telephone cost</description>
<amount>100.00</amount>
</debit>
<credit>
<account>4321-321</account>
<description>Accounts Payable - Non Tour</description>
<amount>100.00</amount>
</credit>
<comment>
Manually entered invoice.
</comment>
</acct-trx>
</paragraph></item>
</item-list>
<paragraph>
<bold>Note:</bold> The fields that may not have an obvious use are:
</paragraph>
<item-list>
<item>In Transaction Status - A Transaction that is not active should not change status any more (ie., Paid Invoices).</item>
<item>In Transaction Types - The source status is the status of the source for this type of transaction.</item>
<item>In Transaction Types - The Type Code is user defined (Trx is the base transaction, Dist is the distribution side, Diff is the differential, etc...).</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransactionType</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1230">
		<LastChanged>2012-03-31T22:22:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxDescHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxGroupScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1231">
		<LastChanged>2012-03-31T22:22:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateTrxGroupHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxGroupScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1232">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxGroupField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxGroup</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1233">
		<LastChanged>2012-03-31T22:22:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateTrxStatusHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxGroupScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1234">
		<LastChanged>2012-03-31T22:22:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxStatusScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>TrxStatusGridScreen</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1237">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdatePreferredSign</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>UpdatePreferredSign</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1238">
		<LastChanged>2012-03-28T11:03:01</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DisableOnSignHandler</ClassName>
		<BaseClassName>DisableOnFieldHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,604</ClassProjectID>
		<ClassPackage>.screen.batch</ClassPackage>
		<ClassSourceFile>BankTrxBatchDetailScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1240">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckVendorCurrency</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.pymtreq</ClassPackage>
		<ClassSourceFile>PaymentRequestGridScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1241">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ForceSignHandler</ClassName>
		<BaseClassName>ReComputeFieldHandler</BaseClassName>
		<ClassDesc>Force this field to be positive or negative.</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.prepymt</ClassPackage>
		<ClassSourceFile>PrepaymentScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1242">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxDistGridScreen</ClassName>
		<BaseClassName>BaseTrxDistGridScreen</BaseClassName>
		<ClassDesc>A/P Transaction G/L Distribution.</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.trx</ClassPackage>
		<ClassSourceFile>ApTrxDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1243">
		<LastChanged>2013-01-22T05:51:22</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.acctpay</ClassPackage>
		<ClassSourceFile>ApTrxHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1244">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentHistoryDistGridScreen</ClassName>
		<BaseClassName>BaseTrxDistGridScreen</BaseClassName>
		<ClassDesc>Account Transaction Distribution</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.hist</ClassPackage>
		<ClassSourceFile>PaymentHistoryDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Account Transaction Distribution display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The Account Transaction Distribution displays the source of a G/L Transaction.
</paragraph>
<paragraph>
This is the audit trail back to the originating transactions.
</paragraph>
<paragraph>
To display the all of the transaction distribution for this transaction, click on the
<help-button>
<description>Detail</description>
<image>Detail</image>
<link>record=AcctDetailDist</link>
</help-button>
button.<br/>
You would only press this button if you are in the maintenance screen to see the rest of the distribution for this transaction.
Pressing this from the grid screen will redisplay the same data.
</paragraph>
<paragraph>
To display the distribution group, click on the
<help-button>
<description>Group</description>
<image>Group</image>
<link>screen=AcctDetailDistGroupGridScreen</link>
</help-button>
button. The distribution group is the complete original source transaction.
</paragraph>
<paragraph>
To display the source transaction, click on the
<help-button>
<description>Source trx</description>
<image>Source</image>
</help-button>
button. The screen displayed will depend on the source of the transaction.
(ie., For a cash deposit, the original Bank Transaction will display)
</paragraph>
<paragraph>
Often you will see a
<help-button>
<name>Transaction</name>
<link>record=AcctDetail</link>
<image>Transaction</image>
</help-button>
button. This button will display the top-level G/L posting transaction.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>AcctDetailDist</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1245">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateInvoiceVendorHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc><![CDATA[If this departure estimate has the same vendor, use the
same invoice number and date as last time.]]></ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.invoice</ClassPackage>
		<ClassSourceFile>InvoiceScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1246">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ValidateInvoiceHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Make sure this is a valid Invoice</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.invoice</ClassPackage>
		<ClassSourceFile>InvoiceScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1247">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrxDistGridScreen</ClassName>
		<BaseClassName>BaseTrxDistGridScreen</BaseClassName>
		<ClassDesc>Display the A/R G/L transaction distribution</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.display</ClassPackage>
		<ClassSourceFile>ArTrxDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1248">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrxHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.display</ClassPackage>
		<ClassSourceFile>ArTrxDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1249">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardDistGridScreen</ClassName>
		<BaseClassName>BaseTrxDistGridScreen</BaseClassName>
		<ClassDesc>Credit card transaction distribution</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit.trx</ClassPackage>
		<ClassSourceFile>CreditCardDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1250">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.credit.trx</ClassPackage>
		<ClassSourceFile>CreditCardDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1251">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoDistGridScreen</ClassName>
		<BaseClassName>BaseTrxDistGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco.trx</ClassPackage>
		<ClassSourceFile>McoDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1252">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>McoHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.mco.trx</ClassPackage>
		<ClassSourceFile>McoDistGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1253">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateActiveTrxStatus</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[If this (TrxStatus) field changes, update the target ActiveTrx
field. This is typically added to BaseTrx records to automatically
retire completed transactions.]]></ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>UpdateActiveTrxStatus</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1254">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxTypeConverter</ClassName>
		<BaseClassName>FieldConverter</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TransactionType</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1255">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LinkTrx</ClassName>
		<BaseClassName>BaseTrx</BaseClassName>
		<ClassDesc>Base for transactions that are linked to another transaction.</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>LinkTrx</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1256">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentHistoryLinkTrxGridScreen</ClassName>
		<BaseClassName>LinkTrxGridScreen</BaseClassName>
		<ClassDesc>Payment distribution display</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.hist</ClassPackage>
		<ClassSourceFile>PaymentHistoryLinkTrxGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transaction payment distribution</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen displays the distribution of a prepayment or debit memo to individual invoices.
</paragraph>
<paragraph>
This screen also displays the distribution of an A/P check to individual invoices.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1257">
		<LastChanged>2012-03-31T22:22:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LinkTrxGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Display the linked distribution</ClassDesc>
		<ClassProjectID>1,048,621</ClassProjectID>
		<ClassPackage>.screen.detail</ClassPackage>
		<ClassSourceFile>LinkTrxGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1258">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxField</ClassName>
		<BaseClassName>TrxField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ApTrxField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1259">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrxField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>TrxField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1260">
		<LastChanged>2012-03-29T10:38:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrxLinkTrxGridScreen</ClassName>
		<BaseClassName>LinkTrxGridScreen</BaseClassName>
		<ClassDesc>A/R Open File</ClassDesc>
		<ClassProjectID>1,048,607</ClassProjectID>
		<ClassPackage>.screen.display</ClassPackage>
		<ClassSourceFile>ArTrxLinkTrxGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>The accounts receivable transaction detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A/R Transactions are automatically created and updated when the tour price or payments change.
</paragraph>
<paragraph>
A/R Transactions are also linked to the financial systems. All A/R transactions are distributed to the general ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ArTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1261">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyReqGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Currency requirements display</ClassDesc>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.currreq</ClassPackage>
		<ClassSourceFile>CurrencyReqGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Currency requirements display.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This program displays a quick overview of vendor accounts for a particular currency.
</paragraph>
<paragraph>
Enter a currency and all the vendors billing in this currency will diplay with their current balance and selections.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1262">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyReqHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.currreq</ClassPackage>
		<ClassSourceFile>CurrencyReqGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1263">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxFilter</ClassName>
		<BaseClassName>ApTrxBaseFilter</BaseClassName>
		<ClassDesc><![CDATA[Filter the ApTrx depending on the flags in the ApReportScreenRecord:
- Vouchers
- Finalization Estimates
- Departure Estimates
- Open Items
- Paid Items]]></ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>ApTrxFilter</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1271">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailBreakFooting</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourdet</ClassPackage>
		<ClassSourceFile>TourDetailReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1273">
		<LastChanged>2012-03-31T15:57:07</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailDetail</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourdet</ClassPackage>
		<ClassSourceFile>TourDetailReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1274">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApBaseCutoffReport</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Cutoff report</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApBaseCutoffReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1275">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxBaseFilter</ClassName>
		<BaseClassName>ListFileFilter</BaseClassName>
		<ClassDesc>Base filter for A/P Transactions</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>ApTrxBaseFilter</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1276">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffCurrFooting</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc>Currency break totals</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1277">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffVenFooting</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc>Currency break totals</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1278">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffCurrHeading</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1279">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApCutoffVendorHeading</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.cutoff</ClassPackage>
		<ClassSourceFile>ApCutoffReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1280">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentCutoffVenFooting</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ppcutoff</ClassPackage>
		<ClassSourceFile>PrepaymentCutoffReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1281">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PrepaymentCutoffCurrFooting</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.ppcutoff</ClassPackage>
		<ClassSourceFile>PrepaymentCutoffReport</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1283">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CostAnalysisScreenRecord</ClassName>
		<BaseClassName>ApReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourcost</ClassPackage>
		<ClassSourceFile>CostAnalysisScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1284">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorCostAnalysisVenFooting</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.vendorcost</ClassPackage>
		<ClassSourceFile>VendorCostAnalysis</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1285">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorCostAnalysisVenHeading</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.vendorcost</ClassPackage>
		<ClassSourceFile>VendorCostAnalysis</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1286">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourCostAnalysisTourHeading</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourcost</ClassPackage>
		<ClassSourceFile>TourCostAnalysis</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1287">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourCostAnalysisTourFooting</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourcost</ClassPackage>
		<ClassSourceFile>TourCostAnalysis</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1289">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DepartmentField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Department</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1290">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DistField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,583</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>DistField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1291">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TaxRateScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.tax</ClassPackage>
		<ClassSourceFile>TaxRateScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1292">
		<LastChanged>2012-04-01T09:50:27</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TaxRateHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,623</ClassProjectID>
		<ClassPackage>.screen.tax</ClassPackage>
		<ClassSourceFile>TaxRateHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1293">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RegionScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Region</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>RegionScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Region file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Region file maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Region</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1294">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RegionGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Region</ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile>RegionScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Region file maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Region file maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Region</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1295">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VariesByField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>VariesByField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1297">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingOrTourField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>BookingOrTourField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1298">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourClassSelect</ClassName>
		<BaseClassName>TourClassField</BaseClassName>
		<ClassDesc>Same as tour class field + null option.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourClassSelect</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1299">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxCategorySelect</ClassName>
		<BaseClassName>PaxCategoryField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>PaxCategorySelect</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1300">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>TourEvent</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1302">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductInventoryScreen</ClassName>
		<BaseClassName>ProductDetailScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductInventoryGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1303">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc>Base screen for all product detail file (such as pricing, inventory, etc).</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1304">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductPricingGridScreen</ClassName>
		<BaseClassName>ProductDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1305">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductPricingScreen</ClassName>
		<BaseClassName>ProductDetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1306">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductDetailScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1307">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1308">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1309">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelInventoryGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1310">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandInventoryGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1311">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductType</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1313">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc>Transportation</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transportation maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Transportation file maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Transportation information. Use the maintenance screen to add and change transportation.
Use the display screen to view all the transportation.
Enter a rate type, class, number of passengers, and date to display transportation pricing.
Checking the "Remote lookup?" box will retrieve transportation prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering transportation, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
There are several detail screens for transportation:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=TransportationPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Transportation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1314">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc>Transportation</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transportation maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Transportation file maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Transportation information. Use the maintenance screen to add and change transportation.
Use the display screen to view all the transportation.
Enter a rate type, class, number of passengers, and date to display transportation pricing.
Checking the "Remote lookup?" box will retrieve transportation prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering transportation, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
There are several detail screens for transportation:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=TransportationPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Transportation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1315">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc>Rental Car</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Rental car information maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Rental car product mainteanance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Rental Car information.
Use the maintenance screen to add and change Rental Cars.
Use the display screen to view all the Rental Cars.
Enter a rate type, class and date to display rental car pricing.
Checking the "Remote lookup?" box will retrieve rental car prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering rental cars, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
There are several detail screens for a rental car:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=CarPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Car</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1316">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc>Rental Car</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Rental car information maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Rental car product mainteanance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Rental Car information.
Use the maintenance screen to add and change Rental Cars.
Use the display screen to view all the Rental Cars.
Enter a rate type, class and date to display rental car pricing.
Checking the "Remote lookup?" box will retrieve rental car prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering rental cars, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>
<paragraph>
There are several detail screens for a rental car:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=CarPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Car</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1317">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc>Cruise</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruiseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Cruise information maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Cruise product maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Cruise information.
Use the maintenance screen to add and change cruises.
Use the display screen to view all the cruises.
Enter a rate type, class and date to display cruise pricing.
Checking the "Remote lookup?" box will retrieve cruise prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering a cruise, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>

<paragraph>
There are several detail screens for a cruise:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=CruisePricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Cruise</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1318">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc>Cruise</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruiseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Cruise information maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Cruise product maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the Cruise information.
Use the maintenance screen to add and change cruises.
Use the display screen to view all the cruises.
Enter a rate type, class and date to display cruise pricing.
Checking the "Remote lookup?" box will retrieve cruise prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering a cruise, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>

<paragraph>
There are several detail screens for a cruise:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=CruisePricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Cruise</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1319">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductInventoryRangeAdjust</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc>Add or Adjust a range of block space</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductInventoryRangeAdjust</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1320">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelInventoryRangeAdjust</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1321">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandInventoryRangeAdjust</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1322">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationHeaderScreen</ClassName>
		<BaseClassName>ProductHeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1323">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationPricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc>Transportation pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transportation pricing maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Transportation pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransportationPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1324">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationPricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc>Transportation pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Transportation pricing maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Transportation pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TransportationPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1325">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1326">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1327">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1328">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarHeaderScreen</ClassName>
		<BaseClassName>ProductHeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1329">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarPricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc>Car pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Car pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Car pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CarPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1330">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarPricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc>Car pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Car pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Car pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CarPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1331">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1332">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1333">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1334">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseHeaderScreen</ClassName>
		<BaseClassName>ProductHeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruiseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1335">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruisePricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc>Cruise pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruisePricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Cruise pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Cruise pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CruisePricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1336">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruisePricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc>Cruise pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruisePricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Cruise pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Cruise pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>CruisePricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1337">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruiseInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1338">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruiseInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1339">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruiseInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1340">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FlightHeaderScreen</ClassName>
		<BaseClassName>ProductHeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>FlightScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1341">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirPricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1342">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirPricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1343">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1344">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1345">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.air.screen</ClassPackage>
		<ClassSourceFile>AirInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1346">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VendorSelect</ClassName>
		<BaseClassName>VendorField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>VendorSelect</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1347">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetFlightDescHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>SetFlightDescHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1348">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CityScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CityScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1349">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarPricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc>Car pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarPricing</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Car pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Car pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1350">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruisePricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc>Cruise pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruisePricing</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Cruise pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Cruise pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1351">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirPricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirPricing</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1353">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetFlightCodeHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>SetFlightCodeHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1354">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseRate</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Base product rate</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BaseRate</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Rate descriptions for this product class</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the rate classes to used for this product.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1355">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseClass</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Base product class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BaseClass</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product classes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product classes are varing service levels, such as first class, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1357">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseClassField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BaseClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1358">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseRateField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BaseRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1359">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemScreen</ClassName>
		<BaseClassName>ProductScreen</BaseClassName>
		<ClassDesc>Item</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Product (non date oriented tour component) maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product (non date oriented tour component) maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the non-tour product information. Use the maintenance screen to add and change non-tour products. Use the display screen to view all the non-tour products. Enter a rate type, class and date to display non-tour product pricing. Checking the "Remote lookup?" box will retrieve non-tour product prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering a non-tour product, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>

<paragraph>
There are several detail screens for a non-tour product:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=HotelPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Item</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1360">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc>Item</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Product (non date oriented tour component) maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product (non date oriented tour component) maintenance.
</paragraph>
<paragraph>
Use these screens to display and maintain the non-tour product information. Use the maintenance screen to add and change non-tour products. Use the display screen to view all the non-tour products. Enter a rate type, class and date to display non-tour product pricing. Checking the "Remote lookup?" box will retrieve non-tour product prices from remote sources.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
When entering a non-tour product, enter or lookup a
<help-link>
<name>Vendor</name>
<image>Lookup</image>
<link>record=Vendor</link>
</help-link> from the accounting system.
</paragraph>

<paragraph>
There are several detail screens for a non-tour product:
</paragraph>
<item-list>
<item><help-button>
<name>Pricing detail</name>
<image>images/tour/buttons/Price.gif</image>
<link>record=HotelPricing</link>
</help-button></item>
<item><help-button>
<name>Inventory detail</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button></item>
<item><help-button>
<name>Message detail</name>
<image>Grid</image>
<link>record=MessageDetail</link>
</help-button></item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Item</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1361">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemPricingScreen</ClassName>
		<BaseClassName>ProductPricingScreen</BaseClassName>
		<ClassDesc>Product pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Product pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ItemPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1362">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemPricingGridScreen</ClassName>
		<BaseClassName>ProductPricingGridScreen</BaseClassName>
		<ClassDesc>Product pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemPricingScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Product pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ItemPricing</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1363">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1364">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1365">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1366">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemPricing</ClassName>
		<BaseClassName>ProductPricing</BaseClassName>
		<ClassDesc>Product pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemPricing</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product pricing maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product pricing maintenance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1367">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandClass</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Base product class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandClass</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product classes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product classes are varing service levels, such as first class, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1368">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandClassField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1369">
		<LastChanged>2012-03-14T16:22:29</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportProduct</ClassName>
		<BaseClassName>Product</BaseClassName>
		<ClassDesc>A travel product that takes you from one location to another.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>TransportProduct</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1370">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourProductGridScreen</ClassName>
		<BaseClassName>ProductGridScreen</BaseClassName>
		<ClassDesc>Tour Header</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Add and maintain Tour Headers.
</paragraph>
<paragraph>
A Tour Header is a template for a booking. When a user selects a Tour Header to use for a booking, the booking
is populated with preferences for tour components (Such as preferred hotel room class) as well as individual tour components (ie., sightseeing, hotels).
</paragraph>
<paragraph>
There are several types of tour headers:
</paragraph>
<item-list>
<item> A Booking Tour Header - This kind of tour header is typically used as a template for booking tours.<br/>
It supplies the booking with parameters for adding components and for pricing the tour.<br/>
There are two main types of booking headers:
<item-list>
<item>
Series Tour Header - This type of tour header has individual departures accessible through the <help-button>
<name>(Series) Tours</name>
<link>record=TourHeader</link>
<image>images/tour/buttons/Tour.gif</image>
</help-button> button.
</item>
<item>
Flexible Tour Header - A template for building tours
</item>
</item-list>
</item> 
<item>
A Vendor module - This kind of module is only used to order a module from a vendor. Typically there
are no detail components.<br/>
Cost is vendor supplied. (Make sure you enter the product COST in the tour pricing screen). Pricing can use any strategy.
</item>
<item>
A Planned module - This module type usually contains pricing and detail components. Individual components are
ordered directly from vendors.
</item>
<item>
A Component package - This module type is used only as a template to supply customized components to a booking.<br/>
Costs come directly from the components.<br/>
Pricing is usually a markup from the component costs or from component pricing.
</item>
</item-list>
<paragraph>
A Tour Header contains an information screen and several detail screens.
</paragraph>
<paragraph>
The initial message status and message transport fields are explained in the general <help-link>
<name>Product</name>
<link>record=Product</link>
<image>Help</image>
</help-link> help.
</paragraph>
<paragraph>
The information screen contains basic information such as the <help-link>
<name>Tour type</name>
<link>record=TourType</link>
<image>Help</image>
</help-link>,
<help-link>
<name>Product Category</name>
<link>record=ProductCategory</link>
<image>Help</image>
</help-link>,
<help-link>
<name>Tour Class</name>
<link>record=TourClass</link>
<image>Help</image>
</help-link>,
<help-link>
<name>Brochure</name>
<link>record=Brochure</link>
<image>Help</image>
</help-link>, and
<help-link>
<name>Initial Product Status</name>
<link>record=ProductStatus</link>
<image>Help</image>
</help-link>.<br/>
<bold>Note:</bold> For tour headers, the Product Status is only relevant for Modular Tours. This will be the initial Booking Detail Product Status for the Module.
</paragraph>
<paragraph>
There are also several detail screens:
</paragraph>
<item-list>
<item><help-button>
<name>Options</name>
<link>record=TourHeaderOption</link>
<image>images/tour/buttons/Options.gif</image>
</help-button> - Main screen for setting up the individual tour detail components</item> 
<item><help-button>
<name>Inventory Detail</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> - Tour header inventory maintenance</item>
<item><help-button>
<name>(Series) Tours</name>
<link>record=TourHeader</link>
<image>images/tour/buttons/Tour.gif</image>
</help-button> - Individial tour departure maintenance (for Series Tours)</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeader</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1371">
		<LastChanged>2012-04-13T00:43:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>TourHeaderScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1372">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderInventoryGridScreen</ClassName>
		<BaseClassName>ProductInventoryGridScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.other.screen</ClassPackage>
		<ClassSourceFile>TourHeaderInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1373">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderInventoryScreen</ClassName>
		<BaseClassName>ProductInventoryScreen</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.other.screen</ClassPackage>
		<ClassSourceFile>TourHeaderInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1374">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderInventoryRangeAdjust</ClassName>
		<BaseClassName>ProductInventoryRangeAdjust</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.other.screen</ClassPackage>
		<ClassSourceFile>TourHeaderInventoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1375">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderOptionGridScreen</ClassName>
		<BaseClassName>BaseFolderGridScreen</BaseClassName>
		<ClassDesc>Tour product options</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourHeaderOptionScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour product option maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A Tour Header Option is a collection of tour components that can be added to a booking. The components will only be added if the criteria for the option are met, either automatically (For example, a weekend surcharge selected based on the day of the week) or manually (such as a hotel upgrade).
</paragraph>
<paragraph>
These are the detail screens where individual tour components are entered:
</paragraph>
<item-list>
<item>
<help-button>
<name>Option</name>
<link>record=TourHeaderOption</link>
<image>Grid</image>
</help-button> - Options can be nested within other options to create a hierarchy of options.
</item>
<item>
<help-button>
<name>Pricing detail</name>
<link>record=TourHeaderLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> - Booking Pricing Line items
</item>
<item>
<help-button>
<name>Tour (header detail)</name>
<link>record=TourHeaderTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-button> - Detail Modular Tours to add to this tour
</item>
<item>
<help-button>
<name>Air Header</name>
<link>record=TourHeaderAirHeader</link>
<image>images/tour/buttons/AirHeader.gif</image>
</help-button> - Air reservations grouping (ie., Whom the Ticket was ordered from)
</item>
<item>
<help-button>
<name>Air</name>
<link>record=TourHeaderAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-button> - Individual air segments
</item>
<item>
<help-button>
<name>Hotel</name>
<link>record=TourHeaderHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-button>
</item>
<item>
<help-button>
<name>Land</name>
<link>record=TourHeaderLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-button> - Transfers, sightseeing, itinerary paragraphs
</item>
<item>
<help-button>
<name>Car</name>
<link>record=TourHeaderCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-button> - Rental cars
</item>
<item>
<help-button>
<name>Transportation</name>
<link>record=TourHeaderTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-button> - Rail, ferry, etc.
</item>
<item>
<help-button>
<name>Cruise</name>
<link>record=TourHeaderCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-button>
</item>
<item>
<help-button>
<name>Item</name>
<link>record=TourHeaderItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-button> - Non-tour related items
</item>
</item-list>
<paragraph>
In each detail screen, there are two fields that determine how the detail item is added to the booking:
</paragraph>
<item-list>
<item>The <bold>mod code</bold> tells the booking whether to <italic>add</italic>, <italic>delete</italic>, or <italic>replace</italic> the detail item.</item>
<item>The <bold>mod item</bold> tells the booking which previously entered detail item needs to be deleted for "<italic>delete</italic>" or changed for "<italic>modify</italic>" detail items.</item>
</item-list>
<paragraph>
<italic>Note:</italic> Typically if you want to change a product you will use <italic>delete</italic> to delete the detail product and then <italic>add</italic> to add the new item.
<italic>replace</italic> will take the current item and change only the fields that are set. This can be advantagous if you want to change the number of nights for a hotel
without changing the meal, rate, and class. <italic>replace</italic> will not work well if you want to change the hotel, as the default rate, class, etc will be transfered from 
the replaced hotel.
</paragraph>
<paragraph>
The tour header option screen has several fields which are used at the time of booking to determine if the option detail should be added:
</paragraph>
<item-list>
<item>
Ask for answer - This option is a question that will be asked at the time of booking. The option detail items are all the possible answers to this question. This question may be answered in the <help-link>
<name>Booking Option Screen</name>
<link>record=BookingAnswer</link>
</help-link>.</item>
<item>
Always Resolve - This question must be answered by the user (ie., pick a car class). If this box is not checked, the user may or may not answer this question.</item>

<item>Pax class - Only add these option components for passengers in this class of room (<bold>All</bold> means add this for each passenger)</item>

<item>Sequence (Optional) - Places the items in order on the screen.</item>
</item-list>
<paragraph>
<bold>Example 1</bold>: You want to use hotel A for Jan-Jul and
hotel B for Aug-Sep.<br/>
To do is: Enter a tour header option "question": Which hotel?<br/>
Then enter two tour header option "answers" that have the date ranges for each hotel. Then go to the hotel screen for each of these and enter the correct hotel.<br/>
When the booking is made the system will automatically include the correct hotel depending on the tour departure date.
</paragraph>
<paragraph>
<bold>Example 2</bold>: To enter an air-surcharge for
December,<br/>
Enter a tour header option titled: December Air surcharge with a date range of Dec 01-Dec 31.<br/>
Then, enter an additional line item and a modified ticket in the line item and header header detail screens.<br/>
The surcharge (entered in pricing) and modified ticket (entered in ticket entry) will automatically be added to a booking departing in December.
</paragraph>
<paragraph>
<bold>Example 3</bold>: Say you want to give the client the chance to upgrade
their hotel in Tokyo. Enter a tour header option "question": Upgrade to Palace hotel?<br/>
Then enter two tour header option "answers": (Yes and No). (You could also enter date ranges if it was only
available for a certain amount of time) Then you would go to
hotel display for option 1(Yes) and delete the normal
hotel (mod delete) and re-enter the upgraded hotel, then go to tour pricing and add an item, "Hotel upgrade
surcharge" with the surcharge amount.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderOption</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1376">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderOptionScreen</ClassName>
		<BaseClassName>BaseFolderScreen</BaseClassName>
		<ClassDesc>Tour product options</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourHeaderOptionScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour product option maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A Tour Header Option is a collection of tour components that can be added to a booking. The components will only be added if the criteria for the option are met, either automatically (For example, a weekend surcharge selected based on the day of the week) or manually (such as a hotel upgrade).
</paragraph>
<paragraph>
These are the detail screens where individual tour components are entered:
</paragraph>
<item-list>
<item>
<help-button>
<name>Option</name>
<link>record=TourHeaderOption</link>
<image>Grid</image>
</help-button> - Options can be nested within other options to create a hierarchy of options.
</item>
<item>
<help-button>
<name>Pricing detail</name>
<link>record=TourHeaderLine</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> - Booking Pricing Line items
</item>
<item>
<help-button>
<name>Tour (header detail)</name>
<link>record=TourHeaderTour</link>
<image>images/tour/buttons/Tour.gif</image>
</help-button> - Detail Modular Tours to add to this tour
</item>
<item>
<help-button>
<name>Air Header</name>
<link>record=TourHeaderAirHeader</link>
<image>images/tour/buttons/AirHeader.gif</image>
</help-button> - Air reservations grouping (ie., Whom the Ticket was ordered from)
</item>
<item>
<help-button>
<name>Air</name>
<link>record=TourHeaderAir</link>
<image>images/tour/buttons/Air.gif</image>
</help-button> - Individual air segments
</item>
<item>
<help-button>
<name>Hotel</name>
<link>record=TourHeaderHotel</link>
<image>images/tour/buttons/Hotel.gif</image>
</help-button>
</item>
<item>
<help-button>
<name>Land</name>
<link>record=TourHeaderLand</link>
<image>images/tour/buttons/Land.gif</image>
</help-button> - Transfers, sightseeing, itinerary paragraphs
</item>
<item>
<help-button>
<name>Car</name>
<link>record=TourHeaderCar</link>
<image>images/tour/buttons/Car.gif</image>
</help-button> - Rental cars
</item>
<item>
<help-button>
<name>Transportation</name>
<link>record=TourHeaderTransportation</link>
<image>images/tour/buttons/Transportation.gif</image>
</help-button> - Rail, ferry, etc.
</item>
<item>
<help-button>
<name>Cruise</name>
<link>record=TourHeaderCruise</link>
<image>images/tour/buttons/Cruise.gif</image>
</help-button>
</item>
<item>
<help-button>
<name>Item</name>
<link>record=TourHeaderItem</link>
<image>images/tour/buttons/Item.gif</image>
</help-button> - Non-tour related items
</item>
</item-list>
<paragraph>
In each detail screen, there are two fields that determine how the detail item is added to the booking:
</paragraph>
<item-list>
<item>The <bold>mod code</bold> tells the booking whether to <italic>add</italic>, <italic>delete</italic>, or <italic>replace</italic> the detail item.</item>
<item>The <bold>mod item</bold> tells the booking which previously entered detail item needs to be deleted for "<italic>delete</italic>" or changed for "<italic>modify</italic>" detail items.</item>
</item-list>
<paragraph>
<italic>Note:</italic> Typically if you want to change a product you will use <italic>delete</italic> to delete the detail product and then <italic>add</italic> to add the new item.
<italic>replace</italic> will take the current item and change only the fields that are set. This can be advantagous if you want to change the number of nights for a hotel
without changing the meal, rate, and class. <italic>replace</italic> will not work well if you want to change the hotel, as the default rate, class, etc will be transfered from 
the replaced hotel.
</paragraph>
<paragraph>
The tour header option screen has several fields which are used at the time of booking to determine if the option detail should be added:
</paragraph>
<item-list>
<item>
Ask for answer - This option is a question that will be asked at the time of booking. The option detail items are all the possible answers to this question. This question may be answered in the <help-link>
<name>Booking Option Screen</name>
<link>record=BookingAnswer</link>
</help-link>.</item>
<item>
Always Resolve - This question must be answered by the user (ie., pick a car class). If this box is not checked, the user may or may not answer this question.</item>

<item>Pax class - Only add these option components for passengers in this class of room (<bold>All</bold> means add this for each passenger)</item>

<item>Sequence (Optional) - Places the items in order on the screen.</item>
</item-list>
<paragraph>
<bold>Example 1</bold>: You want to use hotel A for Jan-Jul and
hotel B for Aug-Sep.<br/>
To do is: Enter a tour header option "question": Which hotel?<br/>
Then enter two tour header option "answers" that have the date ranges for each hotel. Then go to the hotel screen for each of these and enter the correct hotel.<br/>
When the booking is made the system will automatically include the correct hotel depending on the tour departure date.
</paragraph>
<paragraph>
<bold>Example 2</bold>: To enter an air-surcharge for
December,<br/>
Enter a tour header option titled: December Air surcharge with a date range of Dec 01-Dec 31.<br/>
Then, enter an additional line item and a modified ticket in the line item and header header detail screens.<br/>
The surcharge (entered in pricing) and modified ticket (entered in ticket entry) will automatically be added to a booking departing in December.
</paragraph>
<paragraph>
<bold>Example 3</bold>: Say you want to give the client the chance to upgrade
their hotel in Tokyo. Enter a tour header option "question": Upgrade to Palace hotel?<br/>
Then enter two tour header option "answers": (Yes and No). (You could also enter date ranges if it was only
available for a certain amount of time) Then you would go to
hotel display for option 1(Yes) and delete the normal
hotel (mod delete) and re-enter the upgraded hotel, then go to tour pricing and add an item, "Hotel upgrade
surcharge" with the surcharge amount.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderOption</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1377">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderOptionHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourHeaderOptionScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1378">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderLineGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc>Tour Pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderLineScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header pricing detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Pricing Line Item</bold> detail.
</paragraph>
<paragraph>
All the fields on this screen are optional:
</paragraph>
<item-list>
<item><bold>Room Type</bold> - Add this item for each passenger in this room type.</item>
<item><bold>Seq. number</bold> - An optional sequence number that determines the order the items will display in the booking</item>
<item><bold>Fully Comm?</bold> - Check this to make this item fully commissionable</item>
<item><bold>Comm. Rate</bold> - If this item is not fully commissionable, this is the commission rate to use</item>
<item><bold>Payment due at</bold> - This item is due at the Final payment date or the deposit due date.</item>
<item><bold>Cost</bold> - Optional cost to use for accounting</item>
</item-list>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> These items are added to the <help-link>
<name>Booking Line Item Screen</name>
<link>record=BookingLine</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderLine</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1379">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1380">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderHotelGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc>Tour Hotel Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderHotelScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header hotel detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Hotel detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The hotel to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Hotel Detail Screen</name>
<link>record=BookingHotel</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderHotel</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1381">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderLandGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc>Land Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderLandScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header land detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Land</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The Land to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Land Detail Screen</name>
<link>record=BookingLand</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderLand</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1382">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTransportationGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderTransportationScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header transportation detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Transportation detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The transportation item to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Transportation Detail Screen</name>
<link>record=BookingTransportation</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderTransportation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1383">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderCarGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderCarScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header rental car detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Car Rental detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The car rental to add to the booking</item>
<item><bold>Rental days</bold> - The days to rent the car</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Car Rental Detail Screen</name>
<link>record=BookingCar</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderCar</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1384">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderCruiseGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderCruiseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header cruise detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Cruise detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The cruise to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Cruise Detail Screen</name>
<link>record=BookingCruise</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderCruise</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1385">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAirGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc>Tour Ticket Segment Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderAirScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header air detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Air</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Flight date</bold> - The day of the flight (where day 1 is the tour departure date).</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Air Detail Screen</name>
<link>record=BookingAir</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderAir</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1386">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderItemGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderItemScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header item detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Non-tour item</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Product</bold> - The non-tour item to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Item Detail Screen</name>
<link>record=BookingItem</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderItem</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1387">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventScheduleGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.schedule.screen</ClassPackage>
		<ClassSourceFile>TourEventScheduleScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1388">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTourGridScreen</ClassName>
		<BaseClassName>ProductDetailGridScreen</BaseClassName>
		<ClassDesc>Tour tour detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.other.screen</ClassPackage>
		<ClassSourceFile>TourHeaderTourScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header tour detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Tour detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The tour module to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exist in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Tour Detail Screen</name>
<link>record=BookingTour</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderTour</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1389">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourDetailScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1390">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderHotelScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc>Tour Hotel Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderHotelScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header hotel detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Hotel detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The hotel to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Hotel Detail Screen</name>
<link>record=BookingHotel</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderHotel</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1392">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderOptionField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeaderOption</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1394">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderLandScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc>Land Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderLandScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header land detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Land</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The Land to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Land Detail Screen</name>
<link>record=BookingLand</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderLand</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1395">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTransportationScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderTransportationScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header transportation detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Transportation detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The transportation item to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Transportation Detail Screen</name>
<link>record=BookingTransportation</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderTransportation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1396">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTransportation</ClassName>
		<BaseClassName>TourHeaderTransport</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderTransportation</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Tour header transportation detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Transportation detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The transportation item to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Transportation Detail Screen</name>
<link>record=BookingTransportation</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1397">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderCar</ClassName>
		<BaseClassName>TourHeaderTransport</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderCar</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Tour header rental car detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Car Rental detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The car rental to add to the booking</item>
<item><bold>Rental days</bold> - The days to rent the car</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Car Rental Detail Screen</name>
<link>record=BookingCar</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1398">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderCarScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderCarScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header rental car detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Car Rental detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The car rental to add to the booking</item>
<item><bold>Rental days</bold> - The days to rent the car</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Car Rental Detail Screen</name>
<link>record=BookingCar</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderCar</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1399">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderCruise</ClassName>
		<BaseClassName>TourHeaderTransport</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderCruise</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Tour header cruise detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Cruise detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The cruise to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Cruise Detail Screen</name>
<link>record=BookingCruise</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1400">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderCruiseScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderCruiseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header cruise detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Cruise detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The cruise to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Cruise Detail Screen</name>
<link>record=BookingCruise</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderCruise</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1401">
		<LastChanged>2012-04-01T10:46:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAirScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc>Tour Ticket Segment Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderAirScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header air detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Air</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Flight date</bold> - The day of the flight (where day 1 is the tour departure date).</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Air Detail Screen</name>
<link>record=BookingAir</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderAir</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1402">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderItemScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderItemScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header item detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Non-tour item</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Product</bold> - The non-tour item to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Item Detail Screen</name>
<link>record=BookingItem</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderItem</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1403">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderItem</ClassName>
		<BaseClassName>TourHeaderDetail</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderItem</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Tour header item detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Non-tour item</bold> detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Product</bold> - The non-tour item to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Item Detail Screen</name>
<link>record=BookingItem</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1404">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>Item</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1405">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTransport</ClassName>
		<BaseClassName>TourHeaderDetail</BaseClassName>
		<ClassDesc>Tour detail with a starting and ending location</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderTransport</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1406">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderLineScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc>Tour Pricing</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderLineScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header pricing detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Pricing Line Item</bold> detail.
</paragraph>
<paragraph>
All the fields on this screen are optional:
</paragraph>
<item-list>
<item><bold>Room Type</bold> - Add this item for each passenger in this room type.</item>
<item><bold>Seq. number</bold> - An optional sequence number that determines the order the items will display in the booking</item>
<item><bold>Fully Comm?</bold> - Check this to make this item fully commissionable</item>
<item><bold>Comm. Rate</bold> - If this item is not fully commissionable, this is the commission rate to use</item>
<item><bold>Payment due at</bold> - This item is due at the Final payment date or the deposit due date.</item>
<item><bold>Cost</bold> - Optional cost to use for accounting</item>
</item-list>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> These items are added to the <help-link>
<name>Booking Line Item Screen</name>
<link>record=BookingLine</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderLine</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1407">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventScheduleScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.schedule.screen</ClassPackage>
		<ClassSourceFile>TourEventScheduleScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1408">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourClassGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourClassScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1409">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourClassScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourClassScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1410">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourClassHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>TourClassScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1419">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LocationSearchSession</ClassName>
		<BaseClassName>Session</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.location</ClassPackage>
		<ClassSourceFile>LocationSearchSession</ClassSourceFile>
		<ClassType>remote</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1420">
		<LastChanged>2012-01-13T20:50:59</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Location</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc><![CDATA[This is the base class for all location records such as:
Country, City, Region, etc.]]></ClassDesc>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Location</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1432">
		<LastChanged>2012-04-10T21:10:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestMessageOutProcessor</ClassName>
		<BaseClassName>BaseMessageOutProcessor</BaseClassName>
		<ClassDesc>Send a rate request directly to a hotel.</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.request.out</ClassPackage>
		<ClassSourceFile>HotelRateRequestMessageOutProcessor</ClassSourceFile>
		<ClassType>messageprocessor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1440">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1447">
		<LastChanged>2012-04-10T21:10:56</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseScreen</ClassName>
		<BaseClassName>BaseProductResponseScreen</BaseClassName>
		<ClassDesc>Enter the hotel availabilty price</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelRateResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1448">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInfoScreenRecord</ClassName>
		<BaseClassName>ProductInfoScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelInfoScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1458">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductRateMessageListener</ClassName>
		<BaseClassName>AutoRecordMessageListener</BaseClassName>
		<ClassDesc>Handle incoming rate messages</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>ProductRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1459">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetTransportationCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc>Get the transportation cost</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.event</ClassPackage>
		<ClassSourceFile>GetTransportationCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1460">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc>Process incoming transportation rate messages.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.event</ClassPackage>
		<ClassSourceFile>TransportationRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1461">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc>Process tour header rate messages</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.event</ClassPackage>
		<ClassSourceFile>TourHeaderRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1462">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetTourHeaderCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc>Get the tour header cost</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.event</ClassPackage>
		<ClassSourceFile>GetTourHeaderCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1463">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetCarCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc>Get the car cost</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.event</ClassPackage>
		<ClassSourceFile>GetCarCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1464">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc>Process car rate messages</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.event</ClassPackage>
		<ClassSourceFile>CarRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1465">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc>Process the cruise rate messages</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.event</ClassPackage>
		<ClassSourceFile>CruiseRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1466">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetCruiseCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc>Get the cruise cost.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.event</ClassPackage>
		<ClassSourceFile>GetCruiseCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1467">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetAirCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc>Get the air cost.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.event</ClassPackage>
		<ClassSourceFile>GetAirCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1468">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc>Process the air rate messages.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.event</ClassPackage>
		<ClassSourceFile>AirRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1469">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemRateMessageListener</ClassName>
		<BaseClassName>ProductRateMessageListener</BaseClassName>
		<ClassDesc>Process the item pricing</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.event</ClassPackage>
		<ClassSourceFile>ItemRateMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1470">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetItemCostHandler</ClassName>
		<BaseClassName>GetProductCostHandler</BaseClassName>
		<ClassDesc>Get the item cost.</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.event</ClassPackage>
		<ClassSourceFile>GetItemCostHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1481">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItineraryReportScreen</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Itinerary report</ClassDesc>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>ItineraryReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1482">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItineraryScreenRecord</ClassName>
		<BaseClassName>ReportScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>ItineraryScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1483">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItineraryToolbar</ClassName>
		<BaseClassName>ReportToolbar</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>ItineraryToolbar</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1484">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailReportScreen</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>BookingDetailReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1485">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourReportScreen</ClassName>
		<BaseClassName>RecordReportDetail</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>TourReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1488">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCar</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Rental car detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingCar</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Booking rental car detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking rental car information can be entered and changed here.
</paragraph>
<paragraph>
Enter a car, start date, and the number of days.<br/>
You can also set the car class and the rate type for the rentall car.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Car Maintenance</name>
<link>record=Car</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Car pricing</name>
<link>record=CarPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Car inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1489">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruise</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Booking cruise</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingCruise</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Booking cruise detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking cruise information can be entered and changed here.
</paragraph>
<paragraph>
Enter a cruise and a start date.<br/>
You can also set the cabin class and the rate type for the cruise.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Cruise Maintenance</name>
<link>record=Cruise</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Cruise pricing</name>
<link>record=CruisePricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Cruise inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1490">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItem</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Item detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingItem</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Booking non-tour detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking item information can be entered and changed here.
</paragraph>
<paragraph>
Enter a item.<br/>
You can also set the item class and the rate type for the item.<br/>
The system will automatically retrieve the item rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Item Mainteance</name>
<link>record=Item</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Item pricing</name>
<link>record=ItemPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Item inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1491">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTour</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Booking tour header detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingTour</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Booking tour detail maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking tour information can be entered and changed here.
</paragraph>
<paragraph>
Enter a tour and start date.<br/>
You can modify the tour options by clicking on the
<help-button>
<name>Tour Options</name>
<link>record=BookingAnswer</link>
</help-button>
button.<br/>
The system will automatically retrieve the tour pricing. Rate retrieval is programmed in the <help-link>
<name>Tour Mainteance</name>
<link>record=TourHeader</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Tour pricing</name>
<link>record=TourHeaderPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and the <help-button>
<name>Tour inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1492">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransportation</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc>Booking transportation detail</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingTransportation</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Booking transportation display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking transportation information can be entered and changed here.
</paragraph>
<paragraph>
Enter a transportation code and a start date.<br/>
You can also set the transportation class and the rate type for the transportation.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Transportation Maintenance</name>
<link>record=Transportation</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Transportation pricing</name>
<link>record=TransportationPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Transportation inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<image>Grid</image>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1493">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItinerary</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Booking itinerary display</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.itin</ClassPackage>
		<ClassSourceFile>BookingItinerary</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking itinerary display screen</ClassExplain>
		<ClassHelp type="XML"><paragraph>This screen displays the booking itinerary.</paragraph>
<paragraph>You also have the option of selecting different itinerary formats by typing in a stylesheet name.<br/>
You may also send the itinerary by selecting the action target and clicking the send button.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1497">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTour</ClassName>
		<BaseClassName>TourHeaderDetail</BaseClassName>
		<ClassDesc>Tour tour detail</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderTour</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Tour header tour detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header Tour detail.
</paragraph>
<paragraph>
The only fields that are required are:
</paragraph>
<item-list>
<item><bold>Day</bold> - The day (where day 1 is the tour departure date).</item>
<item><bold>Product</bold> - The tour module to add to the booking</item>
</item-list>
<paragraph>
The other fields that are left blank are set to the default value for the booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exist in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Tour Detail Screen</name>
<link>record=BookingTour</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1498">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderDetail</ClassName>
		<BaseClassName>TourSub</BaseClassName>
		<ClassDesc>Tour Header detail</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderDetail</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>General tour header detail information</ClassExplain>
		<ClassHelp type="XML"><paragraph>
General information that applies to all the tour header detail screens:
</paragraph>
<paragraph>
There are several <bold>message transport</bold> fields that determine how information is retrieved from this vendor:
</paragraph>
<item-list>
<item><bold>Information</bold> - General information such as Product name, etc.</item>
<item><bold>Inventory</bold> - Product availability</item>
<item><bold>Cost</bold> - Product cost</item>
<item><bold>Ordering</bold> - Book the product</item>
</item-list>
<paragraph>
<bold>Note:</bold> Leave these fields blank to have the system determine the best way to get the requested information.
</paragraph>
<paragraph>
The <italic>From Block</italic> item specifies that the product is to be taken from the internal Inventory when it is booked.<br/>
The <italic>Tour order</italic> item says that a tour order should be automatically sent when the booking status changes to <bold>Okay</bold>.<br/>
The <italic>wait for ack</italic> item specifies the days to wait for acknowledgement of a tour order before being flagged in the<help-button>
<name>tour order review</name>
</help-button>screen.<br/>
The <italic>initial status</italic> field is the initial product status of this item when it is added to a booking.<br/>
</paragraph>
<paragraph>
The <italic>Mod Code</italic> determines what to do with this item when it is selected for a new booking:
</paragraph>
<item-list>
<item><bold>Add</bold> - Add this detail item to the booking</item>
<item><bold>Replace</bold> - Replace this item with the item specified in <italic>Replace Item</italic></item>
<item><bold>Delete</bold> - Delete the item specified in <italic>Replace Item</italic></item>
</item-list>
<paragraph>
The <italic>Replace Item</italic> is the detail item that will be deleted or replaced. You must use the lookup button to find the item in the <help-link>
<name>Tour Header Detail</name>
<link>record=TourHeader</link>
</help-link> screen.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1499">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAnswerGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>Booking Answer File</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>BookingAnswerScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking option selection</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The booking option selection screen is used to select Tour Options.
The tour options selected will add tour components to a booking.
The components will only be added if the criteria for the option are met,
either automatically (For example, a weekend surcharge selected based on the day of the week) or manually (such as a hotel upgrade).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingAnswer</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1500">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAnswerSelectHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>When a new booking answer gets selected, add the tour header detail to the booking.</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>BookingAnswerSelectHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1501">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UseTourHeaderOptionField</ClassName>
		<BaseClassName>TourHeaderOptionField</BaseClassName>
		<ClassDesc><![CDATA[Tour header option reference field.
This field has special lookup properties.]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>UseTourHeaderOptionField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1502">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAirHeaderGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc>Tour Ticket Header Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderAirHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header air header detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Air Ticket Header</bold> information.
</paragraph>
<paragraph>
Most of the fields on this screen are used to generate an air ticket for a booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Air Header Screen</name>
<link>record=BookingAirHeader</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderAirHeader</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1503">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAirHeaderScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc>Tour Ticket Header Detail</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderAirHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Tour header air header detail</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Maintain the Tour Header <bold>Air Ticket Header</bold> information.
</paragraph>
<paragraph>
Most of the fields on this screen are used to generate an air ticket for a booking.
</paragraph>
<paragraph>
<bold>Note:</bold> A description of the general fields exists in the <help-link>
<name>Tour Header Detail screen</name>
<link>record=TourHeaderDetail</link>
</help-link>.
</paragraph>
<paragraph>
<bold>Note:</bold> This information is added to the <help-link>
<name>Booking Air Header Screen</name>
<link>record=BookingAirHeader</link>
</help-link>
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>TourHeaderAirHeader</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1504">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ModifyTourSubField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>Tour sub field to modify</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourSub</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1507">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingSubScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Booking Sub-screen</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.base</ClassPackage>
		<ClassSourceFile>BookingSubScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1508">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingSubGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>The sub-grid screen.</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.base</ClassPackage>
		<ClassSourceFile>BookingSubScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1509">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLineScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Booking Line Items</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.acctrec</ClassPackage>
		<ClassSourceFile>BookingLineScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Display and change booking pricing</ClassExplain>
		<ClassHelp type="XML"><paragraph>This screen is used to display and change the booking pricing.</paragraph>
<paragraph>Pricing line items are added automatically as products are added to the booking.
Any item that you add or change will have a pricing status of 'Manual', meaning the the price will not change automatically when the product is changed.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingLine</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1510">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruiseGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Booking cruise</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.cruise</ClassPackage>
		<ClassSourceFile>BookingCruiseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking cruise detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking cruise information can be entered and changed here.
</paragraph>
<paragraph>
Enter a cruise and a start date.<br/>
You can also set the cabin class and the rate type for the cruise.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Cruise Maintenance</name>
<link>record=Cruise</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Cruise pricing</name>
<link>record=CruisePricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Cruise inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingCruise</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1511">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruiseScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Booking cruise</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.cruise</ClassPackage>
		<ClassSourceFile>BookingCruiseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking cruise detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking cruise information can be entered and changed here.
</paragraph>
<paragraph>
Enter a cruise and a start date.<br/>
You can also set the cabin class and the rate type for the cruise.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Cruise Maintenance</name>
<link>record=Cruise</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Cruise pricing</name>
<link>record=CruisePricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Cruise inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingCruise</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1512">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCarGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Rental car detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.car</ClassPackage>
		<ClassSourceFile>BookingCarScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking rental car detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking rental car information can be entered and changed here.
</paragraph>
<paragraph>
Enter a car, start date, and the number of days.<br/>
You can also set the car class and the rate type for the rentall car.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Car Maintenance</name>
<link>record=Car</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Car pricing</name>
<link>record=CarPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Car inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingCar</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1513">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCarScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Rental car detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.car</ClassPackage>
		<ClassSourceFile>BookingCarScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking rental car detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking rental car information can be entered and changed here.
</paragraph>
<paragraph>
Enter a car, start date, and the number of days.<br/>
You can also set the car class and the rate type for the rentall car.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Car Maintenance</name>
<link>record=Car</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Car pricing</name>
<link>record=CarPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Car inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingCar</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1514">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransportationGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Booking transportation detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.trans</ClassPackage>
		<ClassSourceFile>BookingTransportationScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking transportation display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking transportation information can be entered and changed here.
</paragraph>
<paragraph>
Enter a transportation code and a start date.<br/>
You can also set the transportation class and the rate type for the transportation.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Transportation Maintenance</name>
<link>record=Transportation</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Transportation pricing</name>
<link>record=TransportationPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Transportation inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<image>Grid</image>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingTransportation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1515">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransportationScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Booking transportation detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.trans</ClassPackage>
		<ClassSourceFile>BookingTransportationScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking transportation display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking transportation information can be entered and changed here.
</paragraph>
<paragraph>
Enter a transportation code and a start date.<br/>
You can also set the transportation class and the rate type for the transportation.<br/>
The system will automatically retrieve the rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Transportation Maintenance</name>
<link>record=Transportation</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Transportation pricing</name>
<link>record=TransportationPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Transportation inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<image>Grid</image>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingTransportation</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1516">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItemGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Item detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.item</ClassPackage>
		<ClassSourceFile>BookingItemScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking non-tour detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking item information can be entered and changed here.
</paragraph>
<paragraph>
Enter a item.<br/>
You can also set the item class and the rate type for the item.<br/>
The system will automatically retrieve the item rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Item Mainteance</name>
<link>record=Item</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Item pricing</name>
<link>record=ItemPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Item inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingItem</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1517">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItemScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Item detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.item</ClassPackage>
		<ClassSourceFile>BookingItemScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking non-tour detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking item information can be entered and changed here.
</paragraph>
<paragraph>
Enter a item.<br/>
You can also set the item class and the rate type for the item.<br/>
The system will automatically retrieve the item rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Item Mainteance</name>
<link>record=Item</link> 
<image>Form</image>
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Item pricing</name>
<link>record=ItemPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Item inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
<image>Grid</image>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingItem</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1518">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Booking Ticket Segment Detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.air</ClassPackage>
		<ClassSourceFile>BookingAirScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking air detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking air information can be entered and changed here.
</paragraph>
<paragraph>
Enter a flight and departure date.<br/>
You can also set the cabin class and the rate type for the flight.<br/>
The system will automatically retrieve the flight rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Flight Mainteance</name>
<link>record=Air</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Flight pricing</name>
<link>record=AirPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Flight inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingAir</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1519">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Booking Ticket Segment Detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.air</ClassPackage>
		<ClassSourceFile>BookingAirScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking air detail display and maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking air information can be entered and changed here.
</paragraph>
<paragraph>
Enter a flight and departure date.<br/>
You can also set the cabin class and the rate type for the flight.<br/>
The system will automatically retrieve the flight rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Flight Mainteance</name>
<link>record=Air</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are two buttons at the bottom of the screen for displaying the <help-button>
<name>Flight pricing</name>
<link>record=AirPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and <help-button>
<name>Flight inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingAir</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1520">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirHeaderGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>Booking Ticket Header Detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.air</ClassPackage>
		<ClassSourceFile>BookingAirHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking Air Header maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking hotel information can be entered and changed here.
</paragraph>
<paragraph>
Enter a hotel, check in date, and the number of nights.<br/>
You can also set the room class and the rate type for the hotel.<br/>
On the right side of the screen you can select the meals that the hotel should supply. There are fields for the number of meals and the day the meal should be served (where day 0 is the check-in date).<br/>
The system will automatically retrieve the hotel rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Hotel Mainteance</name>
<link>record=Hotel</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Room pricing</name>
<link>record=HotelPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button>, <help-button>
<name>Meal pricing</name>
<link>record=HotelMealPricing</link>
<image>images/tour/buttons/Meal.gif</image>
</help-button>, and <help-button>
<name>Room inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingAirHeader</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1521">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirHeaderScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Booking Ticket Header Detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.air</ClassPackage>
		<ClassSourceFile>BookingAirHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking Air Header maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking hotel information can be entered and changed here.
</paragraph>
<paragraph>
Enter a hotel, check in date, and the number of nights.<br/>
You can also set the room class and the rate type for the hotel.<br/>
On the right side of the screen you can select the meals that the hotel should supply. There are fields for the number of meals and the day the meal should be served (where day 0 is the check-in date).<br/>
The system will automatically retrieve the hotel rates and calculate a total for the passengers in this booking. Rate retrieval is programmed in the <help-link>
<name>Hotel Mainteance</name>
<link>record=Hotel</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Room pricing</name>
<link>record=HotelPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button>, <help-button>
<name>Meal pricing</name>
<link>record=HotelMealPricing</link>
<image>images/tour/buttons/Meal.gif</image>
</help-button>, and <help-button>
<name>Room inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingAirHeader</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1522">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailSubGridScreen</ClassName>
		<BaseClassName>BookingSubGridScreen</BaseClassName>
		<ClassDesc>Base screen for all booking detail screens</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.base</ClassPackage>
		<ClassSourceFile>BookingDetailSubScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1523">
		<LastChanged>2013-01-22T05:55:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailSubScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Base screen for all booking detail screens</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.base</ClassPackage>
		<ClassSourceFile>BookingDetailSubScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1525">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductResponseMsgReplyInProcessor</ClassName>
		<BaseClassName>BaseMessageReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.response.in</ClassPackage>
		<ClassSourceFile>ProductResponseMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1541">
		<LastChanged>2013-07-03T16:33:49</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>StatusDescConverter</ClassName>
		<BaseClassName>DescConverter</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>StatusSummaryField</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1543">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>WriteOnMatchHandler</ClassName>
		<BaseClassName>WriteOnChangeHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>WriteOnMatchHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1547">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductRequest</ClassName>
		<BaseClassName>BaseProductMessageDesc</BaseClassName>
		<ClassDesc>Cost/Price request (out) message</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.request</ClassPackage>
		<ClassSourceFile>ProductRequest</ClassSourceFile>
		<ClassType>object</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1552">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.response</ClassPackage>
		<ClassSourceFile>HotelRateResponse</ClassSourceFile>
		<ClassType>object</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1553">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductRateResponse</ClassName>
		<BaseClassName>BaseProductResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.response</ClassPackage>
		<ClassSourceFile>ProductRateResponse</ClassSourceFile>
		<ClassType>object</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1555">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.response</ClassPackage>
		<ClassSourceFile>LandRateResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1556">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.land.request.data</ClassPackage>
		<ClassSourceFile>LandMessageData</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1558">
		<LastChanged>2012-04-11T09:50:24</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseProductMessageDesc</ClassName>
		<BaseClassName>MessageRecordDesc</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base</ClassPackage>
		<ClassSourceFile>BaseProductMessageDesc</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1559">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckRequestRequiredHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>CheckRequestRequiredHandler</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1560">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.request.in</ClassPackage>
		<ClassSourceFile>LandRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1563">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductRateRequestMessageInProcessor</ClassName>
		<BaseClassName>BaseMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.request.in</ClassPackage>
		<ClassSourceFile>ProductAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1564">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.request</ClassPackage>
		<ClassSourceFile>HotelRateRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1565">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.request</ClassPackage>
		<ClassSourceFile>LandRateRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1566">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductAvailabilityResponse</ClassName>
		<BaseClassName>BaseProductResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.response</ClassPackage>
		<ClassSourceFile>ProductAvailabilityResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1567">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.response</ClassPackage>
		<ClassSourceFile>HotelAvailabilityResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1568">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.response</ClassPackage>
		<ClassSourceFile>LandAvailabilityResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1569">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.request</ClassPackage>
		<ClassSourceFile>HotelAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1570">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.request</ClassPackage>
		<ClassSourceFile>LandAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1571">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>BaseMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.request.in</ClassPackage>
		<ClassSourceFile>ProductAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1572">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1573">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.request.in</ClassPackage>
		<ClassSourceFile>LandAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1574">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.response.in</ClassPackage>
		<ClassSourceFile>BookingLandAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1575">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.response.in</ClassPackage>
		<ClassSourceFile>BookingHotelAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1576">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.response.in</ClassPackage>
		<ClassSourceFile>BookingHotelInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1577">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.response.in</ClassPackage>
		<ClassSourceFile>BookingLandInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1578">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.response.in</ClassPackage>
		<ClassSourceFile>BookingHotelBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1579">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.response.in</ClassPackage>
		<ClassSourceFile>BookingLandBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1581">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.request</ClassPackage>
		<ClassSourceFile>HotelInformationRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1582">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc>Hotel order (booking) request message</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.request</ClassPackage>
		<ClassSourceFile>HotelBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1583">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.response</ClassPackage>
		<ClassSourceFile>HotelBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1584">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductBookingResponse</ClassName>
		<BaseClassName>BaseProductResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.response</ClassPackage>
		<ClassSourceFile>ProductBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1585">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductInformationResponse</ClassName>
		<BaseClassName>BaseProductResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.response</ClassPackage>
		<ClassSourceFile>ProductInformationResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1586">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.response</ClassPackage>
		<ClassSourceFile>HotelInformationResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1592">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>BaseMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.request.in</ClassPackage>
		<ClassSourceFile>ProductAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1593">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1594">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.request.in</ClassPackage>
		<ClassSourceFile>LandBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1595">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseDataStatus</ClassName>
		<BaseClassName>BaseStatus</BaseClassName>
		<ClassDesc>Status for all booking messages</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BaseDataStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain>Message status</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The main message status are:
</paragraph>
<item-list>
<item>Okay - The status is okay.</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1596">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseProductStatus</ClassName>
		<BaseClassName>BaseStatus</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BaseProductStatus</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1597">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OperationTypeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc><![CDATA[This field tells the operation system how to order products:
1 - All together on one voucher
2 - All like products together (ie., hotel voucher, tour voucher, etc).
3 - Individually]]></ClassDesc>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>OperationTypeField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1604">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailResponseScreen</ClassName>
		<BaseClassName>BaseProductResponseScreen</BaseClassName>
		<ClassDesc>Hotel inventory screen</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelAvailResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1606">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>ProductResponseMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.response.in</ClassPackage>
		<ClassSourceFile>BookingDetailAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1607">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>ProductResponseMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.response.in</ClassPackage>
		<ClassSourceFile>BookingDetailBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1608">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailRateMsgReplyInProcessor</ClassName>
		<BaseClassName>ProductResponseMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.response.in</ClassPackage>
		<ClassSourceFile>BookingDetailRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1609">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>ProductResponseMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.response.in</ClassPackage>
		<ClassSourceFile>BookingDetailInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1610">
		<LastChanged>2012-04-12T13:09:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseProductResponse</ClassName>
		<BaseClassName>BaseProductMessageDesc</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.response</ClassPackage>
		<ClassSourceFile>BaseProductResponse</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1611">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseProductResponseScreen</ClassName>
		<BaseClassName>MessageScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.message.base.screen</ClassPackage>
		<ClassSourceFile>BaseProductResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1612">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateAvailResponseScreen</ClassName>
		<BaseClassName>HotelAvailResponseScreen</BaseClassName>
		<ClassDesc>Combined Rate and availability screen</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelRateAvailResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1613">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateAvailRequest</ClassName>
		<BaseClassName>HotelRateRequest</BaseClassName>
		<ClassDesc>Combined rate and availability request</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.request</ClassPackage>
		<ClassSourceFile>HotelRateAvailRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1614">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>HotelRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc>Process a combined rate and availability message</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelRateAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1615">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateAvailResponse</ClassName>
		<BaseClassName>HotelRateResponse</BaseClassName>
		<ClassDesc>Combined Rate and Availability response message</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.response</ClassPackage>
		<ClassSourceFile>HotelRateAvailResponse</ClassSourceFile>
		<ClassType>mesage</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1616">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelRateAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingHotelAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc>Processor for a combined Rate AND Availability message</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.response.in</ClassPackage>
		<ClassSourceFile>BookingHotelRateAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1617">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelBookingResponseScreen</ClassName>
		<BaseClassName>BaseProductResponseScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelBookingResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1618">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FreeSellMessage</ClassName>
		<BaseClassName>BaseProductMessageDesc</BaseClassName>
		<ClassDesc>Free sell this item (status is automatically set to VALID)</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.request</ClassPackage>
		<ClassSourceFile>FreeSellMessage</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1619">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationClassSelect</ClassName>
		<BaseClassName>TransportationClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationClassSelect</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1620">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseClassSelect</ClassName>
		<BaseClassName>CruiseClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseClassSelect</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1621">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarClassSelect</ClassName>
		<BaseClassName>CarClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarClassSelect</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1622">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItineraryScreenRecord</ClassName>
		<BaseClassName>BookingDetailScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.itin</ClassPackage>
		<ClassSourceFile>BookingItineraryScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1646">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourDetailGridScreen</ClassName>
		<BaseClassName>BookingDetailSubGridScreen</BaseClassName>
		<ClassDesc>Booking tour header detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.tour</ClassPackage>
		<ClassSourceFile>BookingTourDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking tour detail maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking tour information can be entered and changed here.
</paragraph>
<paragraph>
Enter a tour and start date.<br/>
You can modify the tour options by clicking on the
<help-button>
<name>Tour Options</name>
<link>record=BookingAnswer</link>
</help-button>
button.<br/>
The system will automatically retrieve the tour pricing. Rate retrieval is programmed in the <help-link>
<name>Tour Mainteance</name>
<link>record=TourHeader</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Tour pricing</name>
<link>record=TourHeaderPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and the <help-button>
<name>Tour inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingTour</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1647">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourDetailScreen</ClassName>
		<BaseClassName>BookingDetailSubScreen</BaseClassName>
		<ClassDesc>Booking tour header detail</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.tour</ClassPackage>
		<ClassSourceFile>BookingTourDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking tour detail maintenance</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Booking tour information can be entered and changed here.
</paragraph>
<paragraph>
Enter a tour and start date.<br/>
You can modify the tour options by clicking on the
<help-button>
<name>Tour Options</name>
<link>record=BookingAnswer</link>
</help-button>
button.<br/>
The system will automatically retrieve the tour pricing. Rate retrieval is programmed in the <help-link>
<name>Tour Mainteance</name>
<link>record=TourHeader</link> 
</help-link> screen.
</paragraph>
<paragraph>
There are three buttons at the bottom of the screen for displaying the <help-button>
<name>Tour pricing</name>
<link>record=TourHeaderPricing</link>
<image>images/tour/buttons/Price.gif</image>
</help-button> and the <help-button>
<name>Tour inventory</name>
<link>record=Inventory</link>
<image>images/tour/buttons/Inventory.gif</image>
</help-button> from the internal system.
</paragraph>
<paragraph>
Several fields are used in all <help-link>
<name>Booking Detail</name>
<link>record=BookingDetail</link>
</help-link> screens.
</paragraph>
<paragraph>
The state of the four status fields depends of the information available. Once enough information is available, the system attempts to retieve the information required for the status. If any of the dependent fields change, the system automatically re-retrieves the new information and updates the status.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingTour</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1654">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarRate</ClassName>
		<BaseClassName>BaseRate</BaseClassName>
		<ClassDesc>Car rate</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarRate</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1655">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarRateField</ClassName>
		<BaseClassName>BaseRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1656">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCarAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.response.in</ClassPackage>
		<ClassSourceFile>BookingCarAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1657">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCarBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.response.in</ClassPackage>
		<ClassSourceFile>BookingCarBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1658">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCarInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.response.in</ClassPackage>
		<ClassSourceFile>BookingCarInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1659">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCarRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.response.in</ClassPackage>
		<ClassSourceFile>BookingCarRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1660">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarRateSelect</ClassName>
		<BaseClassName>CarRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1661">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcCarReturnDate</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>CalcCarReturnDate</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1662">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruiseAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.response.in</ClassPackage>
		<ClassSourceFile>BookingCruiseAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1663">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruiseBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.response.in</ClassPackage>
		<ClassSourceFile>BookingCruiseBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1664">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruiseInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.response.in</ClassPackage>
		<ClassSourceFile>BookingCruiseInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1665">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruiseRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.response.in</ClassPackage>
		<ClassSourceFile>BookingCruiseRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1666">
		<LastChanged>2012-04-10T21:09:30</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.response.in</ClassPackage>
		<ClassSourceFile>BookingTransAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1667">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.response.in</ClassPackage>
		<ClassSourceFile>BookingTransBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1668">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.response.in</ClassPackage>
		<ClassSourceFile>BookingTransInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1669">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.response.in</ClassPackage>
		<ClassSourceFile>BookingTransRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1670">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.response.in</ClassPackage>
		<ClassSourceFile>BookingAirAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1671">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.response.in</ClassPackage>
		<ClassSourceFile>BookingAirAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1672">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.response.in</ClassPackage>
		<ClassSourceFile>BookingAirInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1673">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.response.in</ClassPackage>
		<ClassSourceFile>BookingAirRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1674">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItemAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.response.in</ClassPackage>
		<ClassSourceFile>BookingItemAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1675">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItemBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.response.in</ClassPackage>
		<ClassSourceFile>BookingItemBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1676">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItemInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.response.in</ClassPackage>
		<ClassSourceFile>BookingItemInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1677">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItemRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.response.in</ClassPackage>
		<ClassSourceFile>BookingItemRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1678">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourAvailMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailAvailMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.response.in</ClassPackage>
		<ClassSourceFile>BookingTourAvailMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1679">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourBookingMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailBookingMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.response.in</ClassPackage>
		<ClassSourceFile>BookingTourBookingMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1680">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourInfoMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailInfoMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.response.in</ClassPackage>
		<ClassSourceFile>BookingTourInfoMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1681">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourRateMsgReplyInProcessor</ClassName>
		<BaseClassName>BookingDetailRateMsgReplyInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.response.in</ClassPackage>
		<ClassSourceFile>BookingTourRateMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1682">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourProductField</ClassName>
		<BaseClassName>ProductField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourProductField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1688">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RecordReportDetail</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>Move this up!</ClassDesc>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>RecordReportDetail</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1689">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductReportDetail</ClassName>
		<BaseClassName>RecordReportDetail</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>ProductReportDetail</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1694">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItineraryActionHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.itin</ClassPackage>
		<ClassSourceFile>BookingItinerary</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1695">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLineReportScreen</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>BookingLineReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1696">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OtherItineraryReportDetail</ClassName>
		<BaseClassName>HeadingScreen</BaseClassName>
		<ClassDesc>The other detail screens for this booking</ClassDesc>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>OtherItineraryReportDetail</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1697">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingPaxReportDetail</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc>Pax detail</ClassDesc>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.itinerary</ClassPackage>
		<ClassSourceFile>BookingPaxReportDetail</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1701">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdatePMC</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>UpdatePMC</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1702">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateLandClass</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>UpdateLandClass</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1715">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.request</ClassPackage>
		<ClassSourceFile>TransportationAvailabilityRequest</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1716">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.request</ClassPackage>
		<ClassSourceFile>TransportationAvailabilityRequest</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1717">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.response</ClassPackage>
		<ClassSourceFile>TransportationAvailabilityResponse</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1718">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.response</ClassPackage>
		<ClassSourceFile>TransportationRateResponse</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1719">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.trans.request.data</ClassPackage>
		<ClassSourceFile>TransportationMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1720">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.request</ClassPackage>
		<ClassSourceFile>TransportationAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1721">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.response</ClassPackage>
		<ClassSourceFile>TransportationBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1722">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.response</ClassPackage>
		<ClassSourceFile>TransportationInformationResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1723">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.request</ClassPackage>
		<ClassSourceFile>TransportationAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1724">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.request</ClassPackage>
		<ClassSourceFile>LandBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1725">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.response</ClassPackage>
		<ClassSourceFile>LandBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1726">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.request</ClassPackage>
		<ClassSourceFile>LandInformationRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1727">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.response</ClassPackage>
		<ClassSourceFile>LandInformationResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1728">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.car.request.data</ClassPackage>
		<ClassSourceFile>CarMessageData</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1729">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.request</ClassPackage>
		<ClassSourceFile>CarAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1730">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.request</ClassPackage>
		<ClassSourceFile>CarRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1731">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.request</ClassPackage>
		<ClassSourceFile>CarInformationRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1732">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.request</ClassPackage>
		<ClassSourceFile>CarRateRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1733">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.response</ClassPackage>
		<ClassSourceFile>CarRateResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1734">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.response</ClassPackage>
		<ClassSourceFile>CarInformationResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1735">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.response</ClassPackage>
		<ClassSourceFile>CarBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1736">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.response</ClassPackage>
		<ClassSourceFile>CarAvailabilityResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1737">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.cruise.request.data</ClassPackage>
		<ClassSourceFile>CruiseMessageData</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1738">
		<LastChanged>2012-04-12T12:09:36</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.request</ClassPackage>
		<ClassSourceFile>CruiseBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1739">
		<LastChanged>2012-04-12T12:08:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.request</ClassPackage>
		<ClassSourceFile>CruiseBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1740">
		<LastChanged>2012-04-12T12:11:16</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.request</ClassPackage>
		<ClassSourceFile>CruiseBookingRequest</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1741">
		<LastChanged>2012-04-12T12:10:56</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.request</ClassPackage>
		<ClassSourceFile>CruiseBookingRequest</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1742">
		<LastChanged>2012-04-12T12:14:11</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.response</ClassPackage>
		<ClassSourceFile>CruiseBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1743">
		<LastChanged>2012-04-12T12:13:19</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.response</ClassPackage>
		<ClassSourceFile>CruiseBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1744">
		<LastChanged>2012-04-12T12:14:35</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.response</ClassPackage>
		<ClassSourceFile>CruiseBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1745">
		<LastChanged>2012-04-12T12:14:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.response</ClassPackage>
		<ClassSourceFile>CruiseBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1746">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.air.request.data</ClassPackage>
		<ClassSourceFile>AirMessageData</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1747">
		<LastChanged>2012-04-12T12:00:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.request</ClassPackage>
		<ClassSourceFile>AirBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1748">
		<LastChanged>2012-04-12T11:58:17</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.request</ClassPackage>
		<ClassSourceFile>AirBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1749">
		<LastChanged>2012-04-12T12:00:15</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.request</ClassPackage>
		<ClassSourceFile>AirBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1750">
		<LastChanged>2012-04-12T11:59:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.request</ClassPackage>
		<ClassSourceFile>AirBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1751">
		<LastChanged>2012-04-12T12:02:43</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.response</ClassPackage>
		<ClassSourceFile>AirBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1752">
		<LastChanged>2012-04-12T12:01:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.response</ClassPackage>
		<ClassSourceFile>AirBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1753">
		<LastChanged>2012-04-12T12:03:03</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.response</ClassPackage>
		<ClassSourceFile>AirBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1754">
		<LastChanged>2012-04-12T12:03:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.response</ClassPackage>
		<ClassSourceFile>AirBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1755">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.item.request.data</ClassPackage>
		<ClassSourceFile>ItemMessageData</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1756">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.request</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1757">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.request</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1758">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.request</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1759">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.request</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1760">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.response</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1761">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.response</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1762">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.response</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1763">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.response</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1764">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.tour.request.data</ClassPackage>
		<ClassSourceFile>TourMessageData</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1765">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourAvailabilityRequest</ClassName>
		<BaseClassName>ProductAvailabilityRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.request</ClassPackage>
		<ClassSourceFile>TourAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1766">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourBookingRequest</ClassName>
		<BaseClassName>ProductBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.request</ClassPackage>
		<ClassSourceFile>TourAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1767">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourInformationRequest</ClassName>
		<BaseClassName>ProductInformationRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.request</ClassPackage>
		<ClassSourceFile>TourAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1768">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourRateRequest</ClassName>
		<BaseClassName>ProductRateRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.request</ClassPackage>
		<ClassSourceFile>TourAvailabilityRequest</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1769">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourAvailabilityResponse</ClassName>
		<BaseClassName>ProductAvailabilityResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.response</ClassPackage>
		<ClassSourceFile>TourRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1770">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourBookingResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.response</ClassPackage>
		<ClassSourceFile>TourRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1771">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourInformationResponse</ClassName>
		<BaseClassName>ProductInformationResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.response</ClassPackage>
		<ClassSourceFile>TourRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1772">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourRateResponse</ClassName>
		<BaseClassName>ProductRateResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.response</ClassPackage>
		<ClassSourceFile>TourRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1781">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelSession</ClassName>
		<BaseClassName>Session</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel.thin</ClassPackage>
		<ClassSourceFile>HotelSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1784">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.request.in</ClassPackage>
		<ClassSourceFile>TransRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1785">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.request.in</ClassPackage>
		<ClassSourceFile>CarRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1786">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.request.in</ClassPackage>
		<ClassSourceFile>AirRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1787">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.request.in</ClassPackage>
		<ClassSourceFile>CruiseRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1788">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.request.in</ClassPackage>
		<ClassSourceFile>ItemRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1789">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourRateRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductRateRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.request.in</ClassPackage>
		<ClassSourceFile>TourRateRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1790">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseRate</ClassName>
		<BaseClassName>BaseRate</BaseClassName>
		<ClassDesc>Base product rate</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseRate</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Rate descriptions for this product class</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the rate classes to used for this product.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1791">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseRateField</ClassName>
		<BaseClassName>BaseRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1792">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseRateSelect</ClassName>
		<BaseClassName>CruiseRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1793">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirRate</ClassName>
		<BaseClassName>BaseRate</BaseClassName>
		<ClassDesc>Base product rate</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirRate</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Rate descriptions for this product class</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the rate classes to used for this product.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1794">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirRateField</ClassName>
		<BaseClassName>BaseRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1795">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirRateSelect</ClassName>
		<BaseClassName>AirRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1796">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationRate</ClassName>
		<BaseClassName>BaseRate</BaseClassName>
		<ClassDesc>Base product rate</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationRate</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Rate descriptions for this product class</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the rate classes to used for this product.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1797">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationRateField</ClassName>
		<BaseClassName>BaseRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1798">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationRateSelect</ClassName>
		<BaseClassName>TransportationRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1799">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRate</ClassName>
		<BaseClassName>BaseRate</BaseClassName>
		<ClassDesc>Base product rate</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandRate</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Rate descriptions for this product class</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the rate classes to used for this product.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseRate</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1800">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateField</ClassName>
		<BaseClassName>BaseRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1801">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateSelect</ClassName>
		<BaseClassName>LandRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1802">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirClassSelect</ClassName>
		<BaseClassName>AirClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1803">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.request.in</ClassPackage>
		<ClassSourceFile>TransBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1804">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.request.in</ClassPackage>
		<ClassSourceFile>CarBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1805">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.request.in</ClassPackage>
		<ClassSourceFile>CruiseBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1806">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.request.in</ClassPackage>
		<ClassSourceFile>AirBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1807">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.request.in</ClassPackage>
		<ClassSourceFile>ItemBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1808">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourBookingRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductBookingRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.request.in</ClassPackage>
		<ClassSourceFile>TourBookingRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1809">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.request.in</ClassPackage>
		<ClassSourceFile>TransAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1810">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.request.in</ClassPackage>
		<ClassSourceFile>CarAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1811">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.request.in</ClassPackage>
		<ClassSourceFile>CruiseAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1812">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.request.in</ClassPackage>
		<ClassSourceFile>AirAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1813">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.request.in</ClassPackage>
		<ClassSourceFile>ItemAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1814">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourAvailRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductAvailRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.request.in</ClassPackage>
		<ClassSourceFile>TourAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1815">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>HotelInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1816">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>LandInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1817">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>TransportationInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1818">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>CarInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1819">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>CruiseInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1820">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>AirInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1821">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>ItemInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1822">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderInventory</ClassName>
		<BaseClassName>Inventory</BaseClassName>
		<ClassDesc>Inventory file</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>TourHeaderInventory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Inventory maintenance.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Use this screen to setup, change, and close inventory for a product.
</paragraph>
<paragraph>
An inventory can be allocated for each day, rate, class, and other attribute for each product. If the rate, class, and/or other attribute are blank, the inventory will be allocated to any category in the blank category.<br/>
The Oversell amount allows the product to be sold beyond the alloted inventory. This oversell amount should be reduced as the inventory date draws near.<br/>
Closing a date will prevent further sales regardless of the availability.
</paragraph>
<paragraph>
To add, change, or delete a block of dates at once, press the <help-button>
<name>Range adjustment</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link>
</help-button> button. From this screen, you may enter a date range and new values. Any fields left blank will be unchanged in the range. To delete a range, click the delete checkbox. Press the <help-button>
<name>Adjust range</name>
<image>images/tour/buttons/Inventory.gif</image>
<link>record=Inventory</link> 
</help-button> to make the adjustments.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>Inventory</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1823">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandClassSelect</ClassName>
		<BaseClassName>LandClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1830">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcProductAmountHome</ClassName>
		<BaseClassName>ChangeOnChangeHandler</BaseClassName>
		<ClassDesc>Calculate the Home Currency cost for this product.</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>CalcProductAmountHome</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1832">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.car.screen</ClassPackage>
		<ClassSourceFile>CarScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1833">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.cruise.screen</ClassPackage>
		<ClassSourceFile>CruiseScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1834">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.trans.screen</ClassPackage>
		<ClassSourceFile>TransportationScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1835">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemRateField</ClassName>
		<BaseClassName>BaseRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1836">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemRate</ClassName>
		<BaseClassName>BaseRate</BaseClassName>
		<ClassDesc>Item rate</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemRate</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Rate descriptions for this product class</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter the rate classes to used for this product.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1837">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemClass</ClassName>
		<BaseClassName>BaseClass</BaseClassName>
		<ClassDesc>Base product class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemClass</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product classes</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Product classes are varing service levels, such as first class, etc.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BaseClass</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1838">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemClassField</ClassName>
		<BaseClassName>BaseClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemClassField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1839">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemScreenRecord</ClassName>
		<BaseClassName>ProductScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1840">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductControl</ClassName>
		<BaseClassName>ControlRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductControl</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Product system control values</ClassExplain>
		<ClassHelp type="XML"><paragraph>
Enter default and control values for the product system.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1841">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemRateSelect</ClassName>
		<BaseClassName>ItemRateField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemRate</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1842">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemClassSelect</ClassName>
		<BaseClassName>ItemClassField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemClass</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1843">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductAvailabilityMessageListener</ClassName>
		<BaseClassName>AutoRecordMessageListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>ProductAvailabilityMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1844">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetProductStatusHandler</ClassName>
		<BaseClassName>RecordCacheHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>GetProductStatusHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1845">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetProductAvailabilityHandler</ClassName>
		<BaseClassName>GetProductStatusHandler</BaseClassName>
		<ClassDesc><![CDATA[Get the product cost on a valid product record.
(Using the params from the ProductVars screenrecord).]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>GetProductAvailabilityHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1846">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailabilityMessageListener</ClassName>
		<BaseClassName>ProductAvailabilityMessageListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.event</ClassPackage>
		<ClassSourceFile>HotelAvailabilityMessageListener</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1847">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetHotelAvailabilityHandler</ClassName>
		<BaseClassName>GetProductAvailabilityHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.event</ClassPackage>
		<ClassSourceFile>GetHotelAvailabilityHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1857">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductStatusSelect</ClassName>
		<BaseClassName>ProductStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductStatus</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1860">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RecomputeProductDesc</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Recompute and set the product description.</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>RecomputeProductDesc</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1861">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTourHeaderGridScreen</ClassName>
		<BaseClassName>TourDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderTourHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1862">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderTourHeaderScreen</ClassName>
		<BaseClassName>TourDetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderTourHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1863">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckTourOptionDisplay</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[If the "Always Answer" flag is set by adding a tour
with an answer that is required, switch to the option screen.]]></ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>CheckTourOptionDisplay</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1864">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAirHeaderField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderAirHeader</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1865">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirHeaderField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>TicketHeader</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1866">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingPaxField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BookingPax</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1867">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderDetailField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.detail.db</ClassPackage>
		<ClassSourceFile>TourHeaderDetail</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1872">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAnswerScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>Booking Answer File</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile>BookingAnswerScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Booking option selection</ClassExplain>
		<ClassHelp type="XML"><paragraph>
The booking option selection screen is used to select Tour Options.
The tour options selected will add tour components to a booking.
The components will only be added if the criteria for the option are met,
either automatically (For example, a weekend surcharge selected based on the day of the week) or manually (such as a hotel upgrade).
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>BookingAnswer</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="1875">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PricingTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>PricingType</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1876">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PricingType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>PricingType</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>Create component pricing line items using</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This record tells a booking how to create price line-items for tour components.<br/>
There are three ways to price a component:
</paragraph>
<item-list>
<item>Use the tour pricing in the tour-&gt;option-&gt;pricing screen</item>
<item>Use the component price in the tour product-&gt;pricing screen</item>
<item>Markup the cost from the tour product-&gt;cost screen</item>
</item-list></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1877">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxBaseCategoryField</ClassName>
		<BaseClassName>PaxCategoryField</BaseClassName>
		<ClassDesc>Same as the PaxCategory without records that use another category</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>PaxCategoryField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1879">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaxToRoomHandler</ClassName>
		<BaseClassName>ReComputeFieldHandler</BaseClassName>
		<ClassDesc>Convert this amount to the room amount and move to the room field</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>PaxToRoomHandler</ClassSourceFile>
		<ClassType>fieldlistener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1880">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RoomToPaxHandler</ClassName>
		<BaseClassName>PaxToRoomHandler</BaseClassName>
		<ClassDesc>Convert this room amount to the pax amount</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>PaxToRoomHandler</ClassSourceFile>
		<ClassType>fieldlistener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1881">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailPriceChangeHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingDetailPriceChangeHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1882">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingHotelSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingHotelSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1883">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailBaseSession</ClassName>
		<BaseClassName>TableSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingDetailBaseSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1884">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItemSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingItemSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1885">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingTourSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1886">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLandSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingLandSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1887">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTransportationSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingTransportationSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1888">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCruiseSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingCruiseSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1889">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCarSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingCarSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1890">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirSession</ClassName>
		<BaseClassName>BookingDetailBaseSession</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking.detail</ClassPackage>
		<ClassSourceFile>BookingAirSession</ClassSourceFile>
		<ClassType>session</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1899">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PricingTypeSelect</ClassName>
		<BaseClassName>PricingTypeField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>PricingType</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1903">
		<LastChanged>2012-04-12T21:07:43</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingSoftDeleteHandler</ClassName>
		<BaseClassName>SoftDeleteHandler</BaseClassName>
		<ClassDesc>Soft delete this bookingAdd code to make this work.</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>Booking</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1904">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailSoftDeleteHandler</ClassName>
		<BaseClassName>SoftDeleteHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingDetail</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1905">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcDepositHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>CalcDepositHander</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1906">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProfitCenterFilter</ClassName>
		<BaseClassName>FileFilter</BaseClassName>
		<ClassDesc>Only allow records that match this profit center</ClassDesc>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>ProfitCenterFilter</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1907">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TrialBalanceSubTotal</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.trialbal</ClassPackage>
		<ClassSourceFile>TrialBalance</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1908">
		<LastChanged>2012-03-31T22:21:42</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SourceCrossRefSubTotal</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,620</ClassProjectID>
		<ClassPackage>.report.xref</ClassPackage>
		<ClassSourceFile>SourceCrossRef</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1909">
		<LastChanged>2012-03-31T22:20:21</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ExcludeClosingFilter</ClassName>
		<BaseClassName>FileFilter</BaseClassName>
		<ClassDesc>Exclude closing entries? filter</ClassDesc>
		<ClassProjectID>1,048,619</ClassProjectID>
		<ClassPackage>.finstmt</ClassPackage>
		<ClassSourceFile>FinStmtReportScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1982">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderSelect</ClassName>
		<BaseClassName>TourHeaderField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeader</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1986">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InfoStatusSelect</ClassName>
		<BaseClassName>InfoStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>InfoStatus</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1987">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CostStatusSelect</ClassName>
		<BaseClassName>CostStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>CostStatus</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1988">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryStatusSelect</ClassName>
		<BaseClassName>InventoryStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>InventoryStatus</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1989">
		<LastChanged>2012-04-07T08:27:25</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseStatusUpdateHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>BaseStatusUpdateHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1990">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandPricingFilter</ClassName>
		<BaseClassName>SubFileFilter</BaseClassName>
		<ClassDesc>A filter for the valid pricing records for a land</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandPricing</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1994">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemHeaderScreen</ClassName>
		<BaseClassName>ProductHeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.item.screen</ClassPackage>
		<ClassSourceFile>ItemHeaderScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1996">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourStatusSelect</ClassName>
		<BaseClassName>TourStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourStatus</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="1997">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingStatusSelect</ClassName>
		<BaseClassName>BookingStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BookingStatusField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2000">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourTypeSelect</ClassName>
		<BaseClassName>TourTypeField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourType</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2001">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourOrderHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>TourOrderHandler</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2007">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>The inventory detail record</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>InventoryDetail</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2008">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryDetailGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>InventoryDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2009">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryDetailScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>InventoryDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2010">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>InventoryDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2011">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InventoryField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.inventory.db</ClassPackage>
		<ClassSourceFile>Inventory</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2012">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc><![CDATA[This is just a placeholder for now.
May want to add some capabilities to this field later
(like the ability to read the booking detail)]]></ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.db</ClassPackage>
		<ClassSourceFile>BookingDetailField</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2013">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourStatusUpdateHandler</ClassName>
		<BaseClassName>BaseStatusUpdateHandler</BaseClassName>
		<ClassDesc>Add capablity to display the source of the tour status in the display box.</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>TourStatusUpdateHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2014">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FinalizeHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Set up the ApTrx (fin ests) when the tour is finalized</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>FinalizeHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2015">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateTourStatusSummaryHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Update the TourStatusID when the Tour Status Summary Changes</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateTourStatusSummaryHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2016">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateTourStatusHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Update the tour status when this BookingDetail record changes</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateTourStatusHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2017">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcLineFieldsHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>CalcnLineFieldsHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2018">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcActionDateHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Recalc the action type/date</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>CalcActionDateHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2019">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>GetDepartureDateHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>GetDepartureDateHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2020">
		<LastChanged>2012-04-12T17:16:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[A tour or booking event occurred.
Trigger the actions that are scheduled to occur.]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>TourEventHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2021">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourStatusEventHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[Monitor the tour status to trigger the following events:
- Services Confirmed (All ordered services okay)
- Others?]]></ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>TourStatusEventHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2022">
		<LastChanged>2012-04-12T17:16:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingStatusEventHandler</ClassName>
		<BaseClassName>TourEventHandler</BaseClassName>
		<ClassDesc><![CDATA[Monitor the booking status for changes to trigger events:
- Accepted -> Accepted event
- Cancelled -> Cancelled event]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>BookingStatusEventHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2023">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourActionTypeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>TourAction</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2024">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ManualVariesDefaultCost</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Default the land cost to 1 when there is a manual varies code set</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.event</ClassPackage>
		<ClassSourceFile>ManualVariesDefaultCost</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2025">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailStatusUpdateHandler</ClassName>
		<BaseClassName>BaseStatusUpdateHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.base</ClassPackage>
		<ClassSourceFile>BookingDetailStatusUpdateHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2026">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CostStatusUpdateHandler</ClassName>
		<BaseClassName>BaseStatusUpdateHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.event</ClassPackage>
		<ClassSourceFile>CostStatusUpdateHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2027">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventUpdateScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc>Manually run the booking and tour actions</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.schedule.screen</ClassPackage>
		<ClassSourceFile>TourEventUpdateScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Trigger tour and booking events</ClassExplain>
		<ClassHelp type="XML"><paragraph>
This screen is used to manually run the tour and booking event actions.
</paragraph>
<paragraph>
Usually, these events are run automatically by the event scheduler. This progam triggers all the tour and booking events up to and including the cutoff date.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2028">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.schedule.screen</ClassPackage>
		<ClassSourceFile>TourEventScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2029">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourEventUpdateProcess</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.schedule.screen</ClassPackage>
		<ClassSourceFile>TourEventUpdateProcess</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2030">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CalcBookingActionDateHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>CalcBookingActionDateHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2031">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>EventOrDateField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.schedule.db</ClassPackage>
		<ClassSourceFile>EventOrDateField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2034">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingPaymentEventHandler</ClassName>
		<BaseClassName>FieldDataScratchHandler</BaseClassName>
		<ClassDesc>Trigger the deposit received and final payments received events</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>BookingPaymentEventHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2060">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseSOAPMsgReplyOut2006A</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.hotel.response.out</ClassPackage>
		<ClassSourceFile>HotelRateResponseSOAPMsgReplyOut2006A</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2061">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseSOAPMsgReplyIn2006A</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.hotel.response.in</ClassPackage>
		<ClassSourceFile>HotelRateResponseSOAPMsgReplyIn2006A</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2062">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestSOAPMessageIn2006A</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelRateRequestSOAPMessageIn2006A</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2063">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestSOAPMessageOut2006A</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.hotel.request.out</ClassPackage>
		<ClassSourceFile>HotelRateRequestSOAPMessageOut2006A</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2064">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodeTable</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.ota.db</ClassPackage>
		<ClassSourceFile>OTACodeTable</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>The open travel alliance code table</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These tables contains all of the standard code tables from the Open Travel Alliance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>OTACodes</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="2065">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodes</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.ota.db</ClassPackage>
		<ClassSourceFile>OTACodes</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain>The open travel alliance code table</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These tables contains all of the standard code tables from the Open Travel Alliance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2066">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodeTableField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.ota.db</ClassPackage>
		<ClassSourceFile>OTACodeTable</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2067">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodeTableScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.ota.screen</ClassPackage>
		<ClassSourceFile>OTACodeTableScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>The open travel alliance code table</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These tables contains all of the standard code tables from the Open Travel Alliance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>OTACodes</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="2068">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodeTableGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.ota.screen</ClassPackage>
		<ClassSourceFile>OTACodeTableScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>The open travel alliance code table</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These tables contains all of the standard code tables from the Open Travel Alliance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>OTACodes</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="2069">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodesScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.ota.screen</ClassPackage>
		<ClassSourceFile>OTACodesScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>The open travel alliance code table</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These tables contains all of the standard code tables from the Open Travel Alliance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>OTACodes</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="2070">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodesGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.ota.screen</ClassPackage>
		<ClassSourceFile>OTACodesScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>The open travel alliance code table</ClassExplain>
		<ClassHelp type="XML"><paragraph>
These tables contains all of the standard code tables from the Open Travel Alliance.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>OTACodes</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="2071">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodeTableHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.ota.screen</ClassPackage>
		<ClassSourceFile>OTACodesScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2072">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ImportOTACodeTablesProcess</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.importdata</ClassPackage>
		<ClassSourceFile>ImportOTACodeTablesProcess</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2077">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelBookingChangeRequest</ClassName>
		<BaseClassName>HotelBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.request</ClassPackage>
		<ClassSourceFile>HotelBookingChangeRequest</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2078">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelBookingChangeResponse</ClassName>
		<BaseClassName>HotelBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.hotel.response</ClassPackage>
		<ClassSourceFile>HotelBookingChangeResponse</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2080">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CancelRequest</ClassName>
		<BaseClassName>ProductRequest</BaseClassName>
		<ClassDesc>Cancellation request</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.request</ClassPackage>
		<ClassSourceFile>CancelRequest</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2081">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CancelResponse</ClassName>
		<BaseClassName>ProductBookingResponse</BaseClassName>
		<ClassDesc>Cancellation message response</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.response</ClassPackage>
		<ClassSourceFile>CancelResponse</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2082">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCancelMsgReplyInProcessor</ClassName>
		<BaseClassName>ProductResponseMsgReplyInProcessor</BaseClassName>
		<ClassDesc>Process cancel booking message</ClassDesc>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.response.in</ClassPackage>
		<ClassSourceFile>BookingCancelMsgReplyInProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2083">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductCancelRequestMessageInProcessor</ClassName>
		<BaseClassName>BaseMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.request.in</ClassPackage>
		<ClassSourceFile>ProductAvailRequestMessageInProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2084">
		<LastChanged>2012-04-12T12:02:05</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirBookingChangeResponse</ClassName>
		<BaseClassName>AirBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.response</ClassPackage>
		<ClassSourceFile>AirBookingResponse</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2085">
		<LastChanged>2012-04-12T12:00:32</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirBookingChangeRequest</ClassName>
		<BaseClassName>AirBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.air.request</ClassPackage>
		<ClassSourceFile>AirBookingRequest</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2086">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandBookingChangeRequest</ClassName>
		<BaseClassName>LandBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.request</ClassPackage>
		<ClassSourceFile>LandRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2087">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandBookingChangeResponse</ClassName>
		<BaseClassName>LandBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.land.response</ClassPackage>
		<ClassSourceFile>LandRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2088">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourBookingChangeRequest</ClassName>
		<BaseClassName>TourBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.request</ClassPackage>
		<ClassSourceFile>TourAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2089">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourBookingChangeResponse</ClassName>
		<BaseClassName>TourBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.tour.response</ClassPackage>
		<ClassSourceFile>TourRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2090">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationBookingChangeRequest</ClassName>
		<BaseClassName>TransportationBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.request</ClassPackage>
		<ClassSourceFile>TransportationAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2091">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationBookingChangeResponse</ClassName>
		<BaseClassName>TransportationBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.trans.response</ClassPackage>
		<ClassSourceFile>TransportationRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2092">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarBookingChangeRequest</ClassName>
		<BaseClassName>CarBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.request</ClassPackage>
		<ClassSourceFile>CarRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2093">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarBookingChangeResponse</ClassName>
		<BaseClassName>CarBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.car.response</ClassPackage>
		<ClassSourceFile>CarRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2094">
		<LastChanged>2012-04-12T12:09:15</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseBookingChangeRequest</ClassName>
		<BaseClassName>CruiseBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.request</ClassPackage>
		<ClassSourceFile>CruiseBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2095">
		<LastChanged>2012-04-12T12:13:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseBookingChangeResponse</ClassName>
		<BaseClassName>CruiseBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.cruise.response</ClassPackage>
		<ClassSourceFile>CruiseBookingResponse</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2096">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemBookingChangeRequest</ClassName>
		<BaseClassName>ItemBookingRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.request</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2097">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemBookingChangeResponse</ClassName>
		<BaseClassName>ItemBookingResponse</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.item.response</ClassPackage>
		<ClassSourceFile>ItemRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2098">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateResponseScreen</ClassName>
		<BaseClassName>BaseProductResponseScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandRateResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2099">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductInfoScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.message.base.screen</ClassPackage>
		<ClassSourceFile>ProductInfoScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2100">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInfoScreenRecord</ClassName>
		<BaseClassName>ProductInfoScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandInfoScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2101">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandAvailResponseScreen</ClassName>
		<BaseClassName>BaseProductResponseScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandAvailResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2102">
		<LastChanged>2012-04-10T21:10:57</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandBookingResponseScreen</ClassName>
		<BaseClassName>BaseProductResponseScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.screen</ClassPackage>
		<ClassSourceFile>LandBookingResponseScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2104">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductResponseMessageData</ClassName>
		<BaseClassName>BaseProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base.response.data</ClassPackage>
		<ClassSourceFile>ProductResponseMessageData</ClassSourceFile>
		<ClassType>messagedata</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2105">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingMessageData</ClassName>
		<BaseClassName>MessageRecordDesc</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base.request.data</ClassPackage>
		<ClassSourceFile>BookingMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2106">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LineMessageData</ClassName>
		<BaseClassName>MessageRecordDesc</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base.request.data</ClassPackage>
		<ClassSourceFile>LineMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2107">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PassengerMessageData</ClassName>
		<BaseClassName>MessageRecordDesc</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base.request.data</ClassPackage>
		<ClassSourceFile>PassengerMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2108">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductMessageData</ClassName>
		<BaseClassName>BaseProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base.request.data</ClassPackage>
		<ClassSourceFile>ProductMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2109">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductRateResponseMessageData</ClassName>
		<BaseClassName>ProductResponseMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base.response.data</ClassPackage>
		<ClassSourceFile>ProductRateResponseMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2110">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelMessageData</ClassName>
		<BaseClassName>ProductMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.hotel.request.data</ClassPackage>
		<ClassSourceFile>HotelMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2111">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateAvailResponseMessageData</ClassName>
		<BaseClassName>HotelRateResponseMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.hotel.response.data</ClassPackage>
		<ClassSourceFile>HotelRateAvailResponseMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2112">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseMessageData</ClassName>
		<BaseClassName>ProductRateResponseMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.hotel.response.data</ClassPackage>
		<ClassSourceFile>HotelRateResponseMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2116">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PassengerDetailMessageData</ClassName>
		<BaseClassName>MessageRecordDesc</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base.request.data</ClassPackage>
		<ClassSourceFile>PassengerDetailMessageData</ClassSourceFile>
		<ClassType>messagedata</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2124">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductBookingRequest</ClassName>
		<BaseClassName>ProductRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.request</ClassPackage>
		<ClassSourceFile>ProductBookingRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2125">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductInformationRequest</ClassName>
		<BaseClassName>ProductRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.request</ClassPackage>
		<ClassSourceFile>ProductInformationRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2126">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductRateRequest</ClassName>
		<BaseClassName>ProductRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.request</ClassPackage>
		<ClassSourceFile>ProductRateRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2127">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductAvailabilityRequest</ClassName>
		<BaseClassName>ProductRequest</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.request</ClassPackage>
		<ClassSourceFile>ProductAvailabilityRequest</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2129">
		<LastChanged>2012-04-10T08:20:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandRateResponseMessageData</ClassName>
		<BaseClassName>ProductRateResponseMessageData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.land.response.data</ClassPackage>
		<ClassSourceFile>LandRateResponseMessageData</ClassSourceFile>
		<ClassType>message</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2131">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PricingStatus</ClassName>
		<BaseClassName>BaseStatus</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>PricingStatus</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2132">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PricingStatusField</ClassName>
		<BaseClassName>BaseStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>PricingStatusField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2133">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLineStatusHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>BookingLineStatusHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2134">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ChangePricingTypeHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>ChangePricingTypeHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2135">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ArTrxInvoiceSubCountHandler</ClassName>
		<BaseClassName>SubCountHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>ArTrxInvoiceSubCountHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2138">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SyncBookingFieldHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Sync this booking field with the associated tour field</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>SyncBookingFieldHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2139">
		<LastChanged>2012-03-31T21:39:52</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SyncTourFieldHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.field</ClassPackage>
		<ClassSourceFile>SyncTourFieldHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2140">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>Deposit</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Deposit</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2141">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DepositTypeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Deposit</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2142">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>DepositField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Deposit</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2143">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApTrxStatusHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>ApTrxStatusHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2144">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VoucherReportScreen</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.voucher</ClassPackage>
		<ClassSourceFile>VoucherReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2145">
		<LastChanged>2012-04-01T10:53:47</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>VoucherDetailReportScreen</ClassName>
		<BaseClassName>ReportScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.report.voucher</ClassPackage>
		<ClassSourceFile>VoucherDetailReportScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2199">
		<LastChanged>2012-03-31T15:58:55</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ReadLinkedTrxHandler</ClassName>
		<BaseClassName>ReadSecondaryHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,611</ClassProjectID>
		<ClassPackage>.screen.hist</ClassPackage>
		<ClassSourceFile>PaymentHistoryScreen</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2200">
		<LastChanged>2012-04-12T21:09:32</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourChangeHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>If tour header is changed in booking entry, adjust the current booking</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>TourChangeHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2201">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ApJournalVendorTotals</ClassName>
		<BaseClassName>ReportBreakScreen</BaseClassName>
		<ClassDesc>Vendor totals</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.journal</ClassPackage>
		<ClassSourceFile>ApJournal</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2202">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MoveEstimateHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>If this is an estimate, move the values into the invoice fields</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report.tourdet</ClassPackage>
		<ClassSourceFile>TourDetailReport</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2203">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InvoiceAmountSubCountHandler</ClassName>
		<BaseClassName>SubCountHandler</BaseClassName>
		<ClassDesc>Total the invoice amounts for invoices only</ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>InvoiceAmountSubCountHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2204">
		<LastChanged>2012-03-31T15:57:08</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>FilterApTrxDateRange</ClassName>
		<BaseClassName>FileFilter</BaseClassName>
		<ClassDesc><![CDATA[Filter based on the departure date range.
Note: Can't use ExtractRange singe ApTrx.kDepartureDate is virtual.]]></ClassDesc>
		<ClassProjectID>1,048,612</ClassProjectID>
		<ClassPackage>.report</ClassPackage>
		<ClassSourceFile>FilterApTrxDateRange</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2205">
		<LastChanged>2012-03-31T15:59:45</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OverridePaidCheckbox</ClassName>
		<BaseClassName>CheckConverter</BaseClassName>
		<ClassDesc>Override fully paid</ClassDesc>
		<ClassProjectID>1,048,610</ClassProjectID>
		<ClassPackage>.air.oride</ClassPackage>
		<ClassSourceFile>OverrideScreen</ClassSourceFile>
		<ClassType>converter</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2206">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>InitArTrxHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>InitArTrxHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2207">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingArTrxScreen</ClassName>
		<BaseClassName>BookingSubScreen</BaseClassName>
		<ClassDesc>A/R Open File</ClassDesc>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.acctrec</ClassPackage>
		<ClassSourceFile>BookingArTrxGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>The accounts receivable transaction detail.</ClassExplain>
		<ClassHelp type="XML"><paragraph>
A/R Transactions are automatically created and updated when the tour price or payments change.
</paragraph>
<paragraph>
A/R Transactions are also linked to the financial systems. All A/R transactions are distributed to the general ledger.
</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom>ArTrx</CopyDescFrom>
	</ClassInfo>
	<ClassInfo ID="2208">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CreditCardField</ClassName>
		<BaseClassName>RsaEncryptedPropertyField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CreditCardField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2210">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CardFilter</ClassName>
		<BaseClassName>CardField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,586</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>CardField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2216">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckTourSeriesHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>CheckTourSeriesHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2217">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductMessageOutErrorProcessor</ClassName>
		<BaseClassName>ProductMessageErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductMessageOutErrorProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2219">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductUpdateMessageOutErrorProcessor</ClassName>
		<BaseClassName>ProductMessageErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductUpdateMessageOutErrorProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2221">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseProductMessageErrorProcessor</ClassName>
		<BaseClassName>BaseMessageErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>BaseProductMessageErrorProcessor</ClassSourceFile>
		<ClassType>proccessor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2222">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductReplyInErrorProcessor</ClassName>
		<BaseClassName>ProductReplyErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductReplyInErrorProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2223">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductReplyInUpdateErrorProcessor</ClassName>
		<BaseClassName>ProductReplyErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductReplyInUpdateErrorProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2224">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductReplyOutErrorProcessor</ClassName>
		<BaseClassName>ProductReplyErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductReplyOutErrorProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2225">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductReplyOutUpdateErrorProcessor</ClassName>
		<BaseClassName>ProductReplyErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductReplyOutUpdateErrorProcessor</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2226">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductMessageInErrorProcessor</ClassName>
		<BaseClassName>ProductMessageErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductMessageInErrorProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2227">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductUpdateMessageInErrorProcessor</ClassName>
		<BaseClassName>ProductMessageErrorProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductUpdateMessageInErrorProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2228">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductReplyErrorProcessor</ClassName>
		<BaseClassName>BaseProductMessageErrorProcessor</BaseClassName>
		<ClassDesc>Processor for replies</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductReplyErrorProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2229">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductMessageErrorProcessor</ClassName>
		<BaseClassName>BaseProductMessageErrorProcessor</BaseClassName>
		<ClassDesc>Error processor for messages going out</ClassDesc>
		<ClassProjectID>1,048,596</ClassProjectID>
		<ClassPackage>.base.error</ClassPackage>
		<ClassSourceFile>ProductMessageErrorProcessor</ClassSourceFile>
		<ClassType>processor</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2233">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>NewBookingHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc><![CDATA[If a new booking is created because a new booking detail was added,
I need to initialize the new booking record.]]></ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>NewBookingHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2234">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.base</ClassPackage>
		<ClassSourceFile>BookingDetailScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2235">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ManualProductInfoHandler</ClassName>
		<BaseClassName>DisableOnFieldHandler</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>ManualProductInfoHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2236">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailHistory</ClassName>
		<BaseClassName>BookingDetail</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.history.db</ClassPackage>
		<ClassSourceFile>BookingDetailHistory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2237">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirHeaderHistory</ClassName>
		<BaseClassName>BookingAirHeader</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.history.db</ClassPackage>
		<ClassSourceFile>BookingAirHeaderHistory</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2238">
		<LastChanged>2012-04-11T09:50:37</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseProductMessageData</ClassName>
		<BaseClassName>MessageRecordDesc</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,636</ClassProjectID>
		<ClassPackage>.base</ClassPackage>
		<ClassSourceFile>BaseProductMessageData</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2245">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2246">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>BaseMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.request.in</ClassPackage>
		<ClassSourceFile>ProductInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2254">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestMessageInProcessor</ClassName>
		<BaseClassName>BaseMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.base.request.in</ClassPackage>
		<ClassSourceFile>PingRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2259">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.trans.request.in</ClassPackage>
		<ClassSourceFile>TransInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2260">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.tour.request.in</ClassPackage>
		<ClassSourceFile>TourInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2261">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.land.request.in</ClassPackage>
		<ClassSourceFile>LandInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2262">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.item.request.in</ClassPackage>
		<ClassSourceFile>ItemInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2263">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.cruise.request.in</ClassPackage>
		<ClassSourceFile>CruiseInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2264">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.car.request.in</ClassPackage>
		<ClassSourceFile>CarInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2265">
		<LastChanged>2012-04-10T21:09:31</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirInfoRequestMessageInProcessor</ClassName>
		<BaseClassName>ProductInfoRequestMessageInProcessor</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,637</ClassProjectID>
		<ClassPackage>.air.request.in</ClassPackage>
		<ClassSourceFile>AirInfoRequestMessageInProcessor</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2269">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourChangeHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>BookingTourChangeHandler</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2272">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingTourDeleteHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc>Delete the tour detail on tour detail delete</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.detail.event</ClassPackage>
		<ClassSourceFile>BookingTourDeleteHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2273">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductBookingDetailGridScreen</ClassName>
		<BaseClassName>ProductDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>ProductBookingDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2277">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourStatusSummaryField</ClassName>
		<BaseClassName>PropertiesField</BaseClassName>
		<ClassDesc>Special field for the tour status summary</ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>Tour</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2279">
		<LastChanged>2012-04-01T10:53:23</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OperationsBookingDetailGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc>Review booking operation status</ClassDesc>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.operations</ClassPackage>
		<ClassSourceFile>OperationsBookingDetailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain>Review the bookings operations status</ClassExplain>
		<ClassHelp type="XML"><paragraph>Review the bookings operations status.</paragraph></ClassHelp>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2280">
		<LastChanged>2012-04-01T10:53:23</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingDetailQuery</ClassName>
		<BaseClassName>QueryRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,627</ClassProjectID>
		<ClassPackage>.operations</ClassPackage>
		<ClassSourceFile>BookingDetailQuery</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2281">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductTypeSelect</ClassName>
		<BaseClassName>ProductTypeField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductType</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2287">
		<LastChanged>2012-04-01T10:52:54</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingLineSession</ClassName>
		<BaseClassName>Session</BaseClassName>
		<ClassDesc>Booking line item detail session</ClassDesc>
		<ClassProjectID>1,048,626</ClassProjectID>
		<ClassPackage>.remote.booking</ClassPackage>
		<ClassSourceFile>BookingLineSession</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2288">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AddCommissionHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc>Add agency commission to the price</ClassDesc>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.remote.search</ClassPackage>
		<ClassSourceFile>AddCommissionHandler</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2295">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseJaxbMessageOut2010A</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2010a.base.response.out</ClassPackage>
		<ClassSourceFile>PingResponseJaxbMessageOut2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2296">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseJaxbMessageIn2010A</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2010a.base.response.in</ClassPackage>
		<ClassSourceFile>PingResponseJaxbMessageIn2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2297">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestJaxbMessageOut2010A</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2010a.base.request.out</ClassPackage>
		<ClassSourceFile>PingRequestJaxbMessageOut2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2298">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestJaxbMessageIn2010A</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2010a.base.request.in</ClassPackage>
		<ClassSourceFile>PingRequestJaxbMessageIn2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2299">
		<LastChanged>2012-02-02T05:00:11</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACode</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>This is the virtual table that maps to an actual OTA code table</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.ota.db</ClassPackage>
		<ClassSourceFile>OTACode</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2301">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CardTypeScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.mapped</ClassPackage>
		<ClassSourceFile>CardTypeScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2302">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTASeatPreference</ClassName>
		<BaseClassName>OTACode</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.ota.db</ClassPackage>
		<ClassSourceFile>OTASeatPreference</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2303">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SeatPreferenceScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.mapped</ClassPackage>
		<ClassSourceFile>SeatPreferenceScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2304">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>OTACodeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.ota.db</ClassPackage>
		<ClassSourceFile>OTACodeField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2305">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Test hotel avail using Soap table type</ClassDesc>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel.db</ClassPackage>
		<ClassSourceFile>HotelAvail</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2306">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelAvailGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2309">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestSOAPMessageIn2006A</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.base.request.in</ClassPackage>
		<ClassSourceFile>PingRequestSOAPMessageIn2006A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2310">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestSOAPMessageOut2006A</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.base.request.out</ClassPackage>
		<ClassSourceFile>PingRequestSOAPMessageOut2006A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2311">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseSOAPMsgReplyOut2006A</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.base.response.out</ClassPackage>
		<ClassSourceFile>PingResponseSOAPMsgReplyOut2006A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2312">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseSOAPMsgReplyIn2006A</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2006a.base.response.in</ClassPackage>
		<ClassSourceFile>PingResponseSOAPMsgReplyIn2006A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2313">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestSOAPMessageIn2004B</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.base.request.in</ClassPackage>
		<ClassSourceFile>PingRequestSOAPMessageIn2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2314">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestSOAPMessageOut2004B</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.base.request.out</ClassPackage>
		<ClassSourceFile>PingRequestSOAPMessageOut2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2315">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseSOAPMsgReplyIn2004B</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.base.response.in</ClassPackage>
		<ClassSourceFile>PingResponseSOAPMsgReplyIn2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2316">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseSOAPMsgReplyOut2004B</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.base.response.out</ClassPackage>
		<ClassSourceFile>PingResponseSOAPMsgReplyOut2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2317">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestSOAPMessageIn2004B</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelRateRequestSOAPMessageIn2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2318">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestSOAPMessageOut2004B</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.hotel.request.out</ClassPackage>
		<ClassSourceFile>HotelRateRequestSOAPMessageOut2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2319">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseSOAPMessageIn2004B</ClassName>
		<BaseClassName>JaxbConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.hotel.response.in</ClassPackage>
		<ClassSourceFile>HotelRateResponseSOAPMessageIn2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2320">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseSOAPMessageOut2004B</ClassName>
		<BaseClassName>JaxbConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,594</ClassProjectID>
		<ClassPackage>.ota2004b.hotel.response.out</ClassPackage>
		<ClassSourceFile>HotelRateResponseSOAPMessageOut2004B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2321">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseXmlbeansMessageOut2010A</ClassName>
		<BaseClassName>XmlbeansConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,595</ClassProjectID>
		<ClassPackage>.ota2010a.base.response.out</ClassPackage>
		<ClassSourceFile>PingResponseXmlbeansMessageOut2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2323">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestXmlbeansMessageOut2010A</ClassName>
		<BaseClassName>XmlbeansConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,595</ClassProjectID>
		<ClassPackage>.ota2010a.base.request.out</ClassPackage>
		<ClassSourceFile>PingRequestXmlbeansMessageOut2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2324">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestXmlbeansMessageIn2010A</ClassName>
		<BaseClassName>XmlbeansConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,595</ClassProjectID>
		<ClassPackage>.ota2010a.base.request.in</ClassPackage>
		<ClassSourceFile>PingRequestXmlbeansMessageIn2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2327">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseXmlbeansMessageIn2010A</ClassName>
		<BaseClassName>XmlbeansConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,595</ClassProjectID>
		<ClassPackage>.ota2010a.base.response.in</ClassPackage>
		<ClassSourceFile>PingResponseXmlbeansMessageIn2010A</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2338">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc>Hotel chain</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2339">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.hotel.db</ClassPackage>
		<ClassSourceFile>HotelChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2340">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductChain</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc><![CDATA[Base record for product chain.
ie., Marriott, Hertz, etc.]]></ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductChain</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2341">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductChainField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc>You must use a concrete implementation of this class</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>ProductChainField</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2346">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc>Rental car chain</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2347">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CarChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.car.db</ClassPackage>
		<ClassSourceFile>CarChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2348">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc>Cruise line chain</ClassDesc>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseChain</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2349">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CruiseChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.cruise.db</ClassPackage>
		<ClassSourceFile>CruiseChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2350">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeaderChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2351">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.tour.db</ClassPackage>
		<ClassSourceFile>TourHeaderChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2352">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2353">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>AirChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.air.db</ClassPackage>
		<ClassSourceFile>AirChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2354">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2355">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LandChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.land.db</ClassPackage>
		<ClassSourceFile>LandChainField</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2356">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationChain</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2357">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TransportationChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.trans.db</ClassPackage>
		<ClassSourceFile>TransportationChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2358">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemChainField</ClassName>
		<BaseClassName>ProductChainField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2359">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ItemChain</ClassName>
		<BaseClassName>ProductChain</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.item.db</ClassPackage>
		<ClassSourceFile>ItemChain</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2360">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailProcess</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelAvailProcess</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2361">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelAvailAddProcess</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc>Add records and update amounts</ClassDesc>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel.screen</ClassPackage>
		<ClassSourceFile>HotelAvailAddProcess</ClassSourceFile>
		<ClassType>process</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2363">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CityTypeField</ClassName>
		<BaseClassName>StringPopupField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,591</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>City</ClassSourceFile>
		<ClassType>field</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2367">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ScanCity</ClassName>
		<BaseClassName>ScanData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.fixdata</ClassPackage>
		<ClassSourceFile>ScanCity</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2368">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MergeCity</ClassName>
		<BaseClassName>MergeData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.importdata</ClassPackage>
		<ClassSourceFile>MergeCity</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2369">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MergeSkymap</ClassName>
		<BaseClassName>MergeCity</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.importdata</ClassPackage>
		<ClassSourceFile>MergeSkymap</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2370">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SkymapSource</ClassName>
		<BaseClassName>BaseSource</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.importdata</ClassPackage>
		<ClassSourceFile>SkymapSource</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2374">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TidyHtml</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc>Clean up html</ClassDesc>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.util</ClassPackage>
		<ClassSourceFile>TidyHtml</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2378">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MergeForexCurrency</ClassName>
		<BaseClassName>MergeHtml</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.importdata</ClassPackage>
		<ClassSourceFile>MergeForexCurrency</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2379">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyUpdateProcess</ClassName>
		<BaseClassName>BaseProcess</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,599</ClassProjectID>
		<ClassPackage>.process</ClassPackage>
		<ClassSourceFile>CurrencyUpdateProcess</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2380">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyRequestSOAPMessageOut</ClassName>
		<BaseClassName>JibxConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,599</ClassProjectID>
		<ClassPackage>.process</ClassPackage>
		<ClassSourceFile>CurrencyRequestSOAPMessageOut</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2381">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CurrencyResponseSOAPMessageIn</ClassName>
		<BaseClassName>JibxConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,599</ClassProjectID>
		<ClassPackage>.process</ClassPackage>
		<ClassSourceFile>CurrencyResponseSOAPMessageIn</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2383">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MergeCodeTable</ClassName>
		<BaseClassName>MergeData</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.merge</ClassPackage>
		<ClassSourceFile>MergeCodeTable</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2385">
		<LastChanged>2012-04-12T16:42:34</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchType</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.search.db</ClassPackage>
		<ClassSourceFile>ProductSearchType</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2386">
		<LastChanged>2012-04-12T16:42:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchTypeField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.search.db</ClassPackage>
		<ClassSourceFile>ProductSearchType</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2387">
		<LastChanged>2012-04-12T16:42:02</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchDetail</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.search.db</ClassPackage>
		<ClassSourceFile>ProductSearchDetail</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2388">
		<LastChanged>2012-04-12T16:41:23</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchCategoryField</ClassName>
		<BaseClassName>ReferenceField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.search.db</ClassPackage>
		<ClassSourceFile>ProductSearchCategory</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2389">
		<LastChanged>2012-04-12T16:41:41</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchCategory</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.search.db</ClassPackage>
		<ClassSourceFile>ProductSearchCategory</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2390">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchTypeScreen</ClassName>
		<BaseClassName>Screen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.search.screen</ClassPackage>
		<ClassSourceFile>ProductSearchTypeScreen</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2391">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchTypeGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.search.screen</ClassPackage>
		<ClassSourceFile>ProductSearchTypeScreen</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2392">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchCategoryScreen</ClassName>
		<BaseClassName>DetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.search.screen</ClassPackage>
		<ClassSourceFile>ProductSearchCategoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2393">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchCategoryGridScreen</ClassName>
		<BaseClassName>DetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.search.screen</ClassPackage>
		<ClassSourceFile>ProductSearchCategoryScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2394">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchTypeHeaderScreen</ClassName>
		<BaseClassName>HeaderScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.search.screen</ClassPackage>
		<ClassSourceFile>ProductSearchTypeScreen</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2395">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>MergeCodeTableSearch</ClassName>
		<BaseClassName>MergeCodeTable</BaseClassName>
		<ClassDesc>Merge the code table with the product search category</ClassDesc>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.script.merge</ClassPackage>
		<ClassSourceFile>MergeCodeTableSearch</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2396">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchDetailGridScreen</ClassName>
		<BaseClassName>ProductDetailGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.search.screen</ClassPackage>
		<ClassSourceFile>ProductSearchDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2397">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ProductSearchDetailScreen</ClassName>
		<BaseClassName>ProductDetailScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.search.screen</ClassPackage>
		<ClassSourceFile>ProductSearchDetailScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2398">
		<LastChanged>2012-04-12T16:43:17</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SetProductTypeHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.search.db</ClassPackage>
		<ClassSourceFile>ProductSearchDetail</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2400">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourClassScreenRecord</ClassName>
		<BaseClassName>ScreenRecord</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.schedule.screen</ClassPackage>
		<ClassSourceFile>TourClassScreenRecord</ClassSourceFile>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2404">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseDataStatusField</ClassName>
		<BaseClassName>BaseStatusField</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,584</ClassProjectID>
		<ClassPackage>.base.db</ClassPackage>
		<ClassSourceFile>BaseDataStatus</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2405">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestMessage</ClassName>
		<BaseClassName>RecordMapTrxMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel</ClassPackage>
		<ClassSourceFile>HotelRateRequestMessage</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2406">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>RecordMapTrxMessage</ClassName>
		<BaseClassName>MapMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,587</ClassProjectID>
		<ClassPackage>.test.hotel</ClassPackage>
		<ClassSourceFile>RecordMapTrxMessage</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2407">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingStatusGridScreen</ClassName>
		<BaseClassName>GridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.base.screen</ClassPackage>
		<ClassSourceFile>BookingStatusGridScreen</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2408">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>nothing</ClassName>
		<BaseClassName>test</BaseClassName>
		<ClassDesc/>
		<ClassProjectID/>
		<ClassPackage/>
		<ClassSourceFile/>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2409">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>CheckBookingStatusHandler</ClassName>
		<BaseClassName>FileListener</BaseClassName>
		<ClassDesc><![CDATA[Make sure the booking status is not 'no-status' if I am adding a new
ArTrx. If I am adding a new trx, then the booking must have been
'accepted'.]]></ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>CheckBookingStatusHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2410">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingCancelledEventHandler</ClassName>
		<BaseClassName>FieldListener</BaseClassName>
		<ClassDesc><![CDATA[Do the booking related cancellation stuff,
such as assessing the cancellation charge
and creating the refund pending.]]></ClassDesc>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>BookingCancelledEventHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2411">
		<LastChanged>2012-04-12T22:04:40</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UpdateCancelationAcctDetailHandler</ClassName>
		<BaseClassName>UpdateArTrxAcctDetailHandler</BaseClassName>
		<ClassDesc>Post the cancellation charge</ClassDesc>
		<ClassProjectID>1,048,579</ClassProjectID>
		<ClassPackage>.db.event</ClassPackage>
		<ClassSourceFile>UpdateCancelationAcctDetailHandler</ClassSourceFile>
		<ClassType>listener</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2420">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TestSecond</ClassName>
		<BaseClassName/>
		<ClassDesc/>
		<ClassProjectID/>
		<ClassPackage/>
		<ClassSourceFile/>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2423">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingConstants</ClassName>
		<BaseClassName/>
		<ClassDesc>Booking constants (thin)</ClassDesc>
		<ClassProjectID>1,048,577</ClassProjectID>
		<ClassPackage>.thin.app.booking.entry</ClassPackage>
		<ClassSourceFile/>
		<ClassType>interface</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2424">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>SearchConstants</ClassName>
		<BaseClassName>BookingConstants</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,577</ClassProjectID>
		<ClassPackage>.thin.app.booking.entry.search</ClassPackage>
		<ClassSourceFile>SearchConstants</ClassSourceFile>
		<ClassType>interface</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2425">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>LinkDesc</ClassName>
		<BaseClassName/>
		<ClassDesc/>
		<ClassProjectID>1,048,582</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile/>
		<ClassType>record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2426">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PaymentHistory</ClassName>
		<BaseClassName>LinkTrx</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,578</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>PaymentHistory</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2427">
		<LastChanged>2012-05-29T10:34:56</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseJibxMessageIn2014B</ClassName>
		<BaseClassName>JibxConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.base.request.in</ClassPackage>
		<ClassSourceFile>BaseJibxMessageIn2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2428">
		<LastChanged>2012-05-29T10:35:51</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestJibxMessageIn2014B</ClassName>
		<BaseClassName>BaseJibxMessageIn2014B</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.base.request.in</ClassPackage>
		<ClassSourceFile>PingRequestJibxMessageIn2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2429">
		<LastChanged>2012-05-29T10:34:56</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BaseJibxMessageOut2014B</ClassName>
		<BaseClassName>JibxConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.base.request.out</ClassPackage>
		<ClassSourceFile>BaseJibxMessageOut2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2430">
		<LastChanged>2012-05-29T10:36:06</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingRequestJibxMessageOut2014B</ClassName>
		<BaseClassName>BaseJibxMessageOut2014B</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.base.request.out</ClassPackage>
		<ClassSourceFile>PingRequestJibxMessageOut2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2431">
		<LastChanged>2012-05-29T10:36:20</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseJibxMessageIn2014B</ClassName>
		<BaseClassName>BaseJibxMessageIn2014B</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.base.response.in</ClassPackage>
		<ClassSourceFile>PingResponseJibxMessageIn2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2432">
		<LastChanged>2012-05-29T10:36:34</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingResponseJibxMessageOut2014B</ClassName>
		<BaseClassName>BaseJibxMessageOut2014B</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.base.response.out</ClassPackage>
		<ClassSourceFile>PingResponseJibxMessageOut2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2433">
		<LastChanged>2011-08-05T15:59:50</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingMainMenu</ClassName>
		<BaseClassName/>
		<ClassDesc/>
		<ClassProjectID>1,048,581</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile/>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2434">
		<LastChanged>2012-04-01T09:43:17</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>&lt;paragraph&gt; Select a passenger from the </ClassName>
		<BaseClassName/>
		<ClassDesc/>
		<ClassProjectID>1,048,631</ClassProjectID>
		<ClassPackage>.screen</ClassPackage>
		<ClassSourceFile/>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2435">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingItineraryScreen</ClassName>
		<BaseClassName/>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.tour</ClassPackage>
		<ClassSourceFile/>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2436">
		<LastChanged>2012-04-01T10:51:34</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourGridScreenAnon</ClassName>
		<BaseClassName>TourGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.anon</ClassPackage>
		<ClassSourceFile>TourGridScreenAnon</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2437">
		<LastChanged>2012-04-01T10:51:35</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderGridScreenAnon</ClassName>
		<BaseClassName>TourHeaderGridScreen</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.anon</ClassPackage>
		<ClassSourceFile>TourHeaderGridScreenAnon</ClassSourceFile>
		<ClassType>Screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2439">
		<LastChanged>2012-05-29T14:51:09</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestSOAPMessageIn2014B</ClassName>
		<BaseClassName>BaseJibxMessageIn2014B</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.hotel.request.in</ClassPackage>
		<ClassSourceFile>HotelRateRequestSOAPMessageIn2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2440">
		<LastChanged>2012-05-29T11:19:06</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateRequestSOAPMessageOut2014B</ClassName>
		<BaseClassName>JibxConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.hotel.request.out</ClassPackage>
		<ClassSourceFile>HotelRateRequestSOAPMessageOut2010</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2441">
		<LastChanged>2012-05-29T11:20:19</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseSOAPMsgReplyIn2014B</ClassName>
		<BaseClassName>JibxConvertToMessage</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.hotel.response.in</ClassPackage>
		<ClassSourceFile>HotelRateResponseSOAPMsgReplyIn2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2442">
		<LastChanged>2012-05-29T11:16:44</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>HotelRateResponseSOAPMsgReplyOut2014B</ClassName>
		<BaseClassName>JibxConvertToNative</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,593</ClassProjectID>
		<ClassPackage>._2014B.hotel.response.out</ClassPackage>
		<ClassSourceFile>HotelRateResponseSOAPMsgReplyOut2014B</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2443">
		<LastChanged>2012-04-01T10:52:04</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BookingAirHeaderScreenField</ClassName>
		<BaseClassName>SCannedBox</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,625</ClassProjectID>
		<ClassPackage>.entry.detail.air</ClassPackage>
		<ClassSourceFile>BookingAirHeaderScreenField</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2444">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>UseTourHeaderOptionScreenField</ClassName>
		<BaseClassName>SCannedBox</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.screen</ClassPackage>
		<ClassSourceFile>UseTourHeaderOptionScreenField</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2445">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>TourHeaderAirHeaderScreenField</ClassName>
		<BaseClassName>SCannedBox</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>TourHeaderAirHeaderScreenField</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2446">
		<LastChanged>2012-04-01T10:47:00</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>ModifyTourSubScreenField</ClassName>
		<BaseClassName>SCannedBox</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,624</ClassProjectID>
		<ClassPackage>.tour.detail.screen</ClassPackage>
		<ClassSourceFile>ModifyTourSubScreenField</ClassSourceFile>
		<ClassType>screen</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2447">
		<LastChanged>2012-03-28T11:09:36</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>BankAcct</ClassName>
		<BaseClassName>VirtualRecord</BaseClassName>
		<ClassDesc>Bank Accounts</ClassDesc>
		<ClassProjectID>1,048,580</ClassProjectID>
		<ClassPackage>.db</ClassPackage>
		<ClassSourceFile>BankAcct</ClassSourceFile>
		<ClassType>Record</ClassType>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2448">
		<LastChanged>2012-06-09T12:40:15</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingServiceActivator</ClassName>
		<BaseClassName>BaseMessageServiceActivator</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,640</ClassProjectID>
		<ClassPackage/>
		<ClassSourceFile>PingServiceActivator</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements/>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
	<ClassInfo ID="2449">
		<LastChanged>2012-06-09T12:46:48</LastChanged>
		<Deleted>N</Deleted>
		<ClassName>PingService2014BImpl</ClassName>
		<BaseClassName>BaseServiceMessageTransport</BaseClassName>
		<ClassDesc/>
		<ClassProjectID>1,048,640</ClassProjectID>
		<ClassPackage/>
		<ClassSourceFile>PingService2014BImpl</ClassSourceFile>
		<ClassType/>
		<ClassExplain/>
		<ClassHelp/>
		<ClassImplements>PingService</ClassImplements>
		<SeeAlso/>
		<TechnicalInfo/>
		<CopyDescFrom/>
	</ClassInfo>
</file>